// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"node_modules/lodash-decorators/factory/DecoratorConfig.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var DecoratorConfig = function () {
  function DecoratorConfig(execute, applicator, options) {
    if (options === void 0) {
      options = {};
    }

    this.execute = execute;
    this.applicator = applicator;
    this.options = options;
  }

  Object.defineProperty(DecoratorConfig.prototype, "bound", {
    get: function () {
      return this.options.bound != null ? this.options.bound : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(DecoratorConfig.prototype, "setter", {
    get: function () {
      return this.options.setter != null ? this.options.setter : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(DecoratorConfig.prototype, "getter", {
    get: function () {
      return this.options.getter != null ? this.options.getter : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(DecoratorConfig.prototype, "property", {
    get: function () {
      return this.options.property != null ? this.options.property : false;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(DecoratorConfig.prototype, "method", {
    get: function () {
      return this.options.method != null ? this.options.method : true;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(DecoratorConfig.prototype, "optionalParams", {
    get: function () {
      return this.options.optionalParams != null ? this.options.optionalParams : false;
    },
    enumerable: true,
    configurable: true
  });
  return DecoratorConfig;
}();

exports.DecoratorConfig = DecoratorConfig;
},{}],"node_modules/lodash/_freeGlobal.js":[function(require,module,exports) {
var global = arguments[3];
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

},{}],"node_modules/lodash/_root.js":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;

},{"./_freeGlobal":"node_modules/lodash/_freeGlobal.js"}],"node_modules/lodash/_Symbol.js":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;

},{"./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_getRawTag.js":[function(require,module,exports) {
var Symbol = require('./_Symbol');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;

},{"./_Symbol":"node_modules/lodash/_Symbol.js"}],"node_modules/lodash/_objectToString.js":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;

},{}],"node_modules/lodash/_baseGetTag.js":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    getRawTag = require('./_getRawTag'),
    objectToString = require('./_objectToString');

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;

},{"./_Symbol":"node_modules/lodash/_Symbol.js","./_getRawTag":"node_modules/lodash/_getRawTag.js","./_objectToString":"node_modules/lodash/_objectToString.js"}],"node_modules/lodash/isObject.js":[function(require,module,exports) {
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;

},{}],"node_modules/lodash/isFunction.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObject = require('./isObject');

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash-decorators/utils/log.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Creates a log message.
 * @private
 * @export
 * @param {string} [message='']
 * @returns {string}
 */

function log(message) {
  if (message === void 0) {
    message = '';
  }

  return "lodash-decorators -> " + message;
}

exports.log = log;
},{}],"node_modules/lodash/isArray.js":[function(require,module,exports) {
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;

},{}],"node_modules/lodash/isObjectLike.js":[function(require,module,exports) {
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;

},{}],"node_modules/lodash/isString.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isArray = require('./isArray'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
}

module.exports = isString;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./isArray":"node_modules/lodash/isArray.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash-decorators/utils/resolveFunction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isFunction = require("lodash/isFunction");

var isString = require("lodash/isString");

var log_1 = require("./log");
/**
  * Resolves a function on the current target object. It first will
  * try and resolve on the context object, then the target object,
  * then an error will be thrown if the method can not be resolved.
  * @private
  * @param {Function|string} method The method or method name.
  * @param {Object} [context] The context object to resolve from.
  * @param {Object} [target] The target object to resolve from.
  * @returns {Function} The resolved function.
  */


function resolveFunction(method, context, target, throwNotFound) {
  if (throwNotFound === void 0) {
    throwNotFound = true;
  }

  if (isFunction(method)) {
    return method;
  } else if (isString(method)) {
    if (context && isFunction(context[method])) {
      return context[method];
    } else if (target && isFunction(target[method])) {
      return target[method];
    }
  }

  if (throwNotFound) {
    throw new ReferenceError(log_1.log("Can not resolve method " + method + " on any target Objects"));
  }
}

exports.resolveFunction = resolveFunction;
},{"lodash/isFunction":"node_modules/lodash/isFunction.js","lodash/isString":"node_modules/lodash/isString.js","./log":"node_modules/lodash-decorators/utils/log.js"}],"node_modules/lodash/isUndefined.js":[function(require,module,exports) {
/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;

},{}],"node_modules/lodash-decorators/utils/CompositeKeyWeakMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isUndefined = require("lodash/isUndefined");
/**
 * A map for weakly holding nested references.
 * @private
 * @export
 * @class CompositeKeyWeakMap
 * @template T
 */


var CompositeKeyWeakMap = function () {
  function CompositeKeyWeakMap() {
    this._weakMap = new WeakMap();
  }

  CompositeKeyWeakMap.prototype.set = function (keys, value) {
    var map = this._weakMap;

    for (var i = 0, len = keys.length - 1; i < len; i++) {
      var key = keys[i];
      var next = map.get(key);

      if (!next) {
        next = new Map();
        map.set(key, next);
      }

      map = next;
    }

    map.set(keys[keys.length - 1], value);
  };

  CompositeKeyWeakMap.prototype.get = function (keys) {
    var next = this._weakMap;

    for (var i = 0, len = keys.length; i < len; i++) {
      next = next.get(keys[i]);

      if (isUndefined(next)) {
        break;
      }
    }

    return next;
  };

  CompositeKeyWeakMap.prototype.has = function (keys) {
    return !isUndefined(this.get(keys));
  };

  return CompositeKeyWeakMap;
}();

exports.CompositeKeyWeakMap = CompositeKeyWeakMap;
},{"lodash/isUndefined":"node_modules/lodash/isUndefined.js"}],"node_modules/lodash-decorators/utils/returnAtIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Creates a function the returns the specific index.
 * @private
 * @export
 * @param {Function} fn
 * @param {number} index
 * @returns {Function}
 */

function returnAtIndex(fn, index) {
  return function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    fn.call.apply(fn, [this].concat(args));
    return args[index];
  };
}

exports.returnAtIndex = returnAtIndex;
},{}],"node_modules/lodash/_createBaseFor.js":[function(require,module,exports) {
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;

},{}],"node_modules/lodash/_baseFor.js":[function(require,module,exports) {
var createBaseFor = require('./_createBaseFor');

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;

},{"./_createBaseFor":"node_modules/lodash/_createBaseFor.js"}],"node_modules/lodash/_baseTimes.js":[function(require,module,exports) {
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;

},{}],"node_modules/lodash/_baseIsArguments.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/isArguments.js":[function(require,module,exports) {
var baseIsArguments = require('./_baseIsArguments'),
    isObjectLike = require('./isObjectLike');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;

},{"./_baseIsArguments":"node_modules/lodash/_baseIsArguments.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/stubFalse.js":[function(require,module,exports) {
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;

},{}],"node_modules/lodash/isBuffer.js":[function(require,module,exports) {

var root = require('./_root'),
    stubFalse = require('./stubFalse');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

},{"./_root":"node_modules/lodash/_root.js","./stubFalse":"node_modules/lodash/stubFalse.js"}],"node_modules/lodash/_isIndex.js":[function(require,module,exports) {
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;

},{}],"node_modules/lodash/isLength.js":[function(require,module,exports) {
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;

},{}],"node_modules/lodash/_baseIsTypedArray.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isLength = require('./isLength'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./isLength":"node_modules/lodash/isLength.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/_baseUnary.js":[function(require,module,exports) {
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;

},{}],"node_modules/lodash/_nodeUtil.js":[function(require,module,exports) {
var freeGlobal = require('./_freeGlobal');

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

},{"./_freeGlobal":"node_modules/lodash/_freeGlobal.js"}],"node_modules/lodash/isTypedArray.js":[function(require,module,exports) {
var baseIsTypedArray = require('./_baseIsTypedArray'),
    baseUnary = require('./_baseUnary'),
    nodeUtil = require('./_nodeUtil');

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;

},{"./_baseIsTypedArray":"node_modules/lodash/_baseIsTypedArray.js","./_baseUnary":"node_modules/lodash/_baseUnary.js","./_nodeUtil":"node_modules/lodash/_nodeUtil.js"}],"node_modules/lodash/_arrayLikeKeys.js":[function(require,module,exports) {
var baseTimes = require('./_baseTimes'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isIndex = require('./_isIndex'),
    isTypedArray = require('./isTypedArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;

},{"./_baseTimes":"node_modules/lodash/_baseTimes.js","./isArguments":"node_modules/lodash/isArguments.js","./isArray":"node_modules/lodash/isArray.js","./isBuffer":"node_modules/lodash/isBuffer.js","./_isIndex":"node_modules/lodash/_isIndex.js","./isTypedArray":"node_modules/lodash/isTypedArray.js"}],"node_modules/lodash/_isPrototype.js":[function(require,module,exports) {
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;

},{}],"node_modules/lodash/_overArg.js":[function(require,module,exports) {
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;

},{}],"node_modules/lodash/_nativeKeys.js":[function(require,module,exports) {
var overArg = require('./_overArg');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;

},{"./_overArg":"node_modules/lodash/_overArg.js"}],"node_modules/lodash/_baseKeys.js":[function(require,module,exports) {
var isPrototype = require('./_isPrototype'),
    nativeKeys = require('./_nativeKeys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;

},{"./_isPrototype":"node_modules/lodash/_isPrototype.js","./_nativeKeys":"node_modules/lodash/_nativeKeys.js"}],"node_modules/lodash/isArrayLike.js":[function(require,module,exports) {
var isFunction = require('./isFunction'),
    isLength = require('./isLength');

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;

},{"./isFunction":"node_modules/lodash/isFunction.js","./isLength":"node_modules/lodash/isLength.js"}],"node_modules/lodash/keys.js":[function(require,module,exports) {
var arrayLikeKeys = require('./_arrayLikeKeys'),
    baseKeys = require('./_baseKeys'),
    isArrayLike = require('./isArrayLike');

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;

},{"./_arrayLikeKeys":"node_modules/lodash/_arrayLikeKeys.js","./_baseKeys":"node_modules/lodash/_baseKeys.js","./isArrayLike":"node_modules/lodash/isArrayLike.js"}],"node_modules/lodash/_baseForOwn.js":[function(require,module,exports) {
var baseFor = require('./_baseFor'),
    keys = require('./keys');

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;

},{"./_baseFor":"node_modules/lodash/_baseFor.js","./keys":"node_modules/lodash/keys.js"}],"node_modules/lodash/identity.js":[function(require,module,exports) {
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;

},{}],"node_modules/lodash/_castFunction.js":[function(require,module,exports) {
var identity = require('./identity');

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;

},{"./identity":"node_modules/lodash/identity.js"}],"node_modules/lodash/forOwn.js":[function(require,module,exports) {
var baseForOwn = require('./_baseForOwn'),
    castFunction = require('./_castFunction');

/**
 * Iterates over own enumerable string keyed properties of an object and
 * invokes `iteratee` for each property. The iteratee is invoked with three
 * arguments: (value, key, object). Iteratee functions may exit iteration
 * early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwnRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forOwn(object, iteratee) {
  return object && baseForOwn(object, castFunction(iteratee));
}

module.exports = forOwn;

},{"./_baseForOwn":"node_modules/lodash/_baseForOwn.js","./_castFunction":"node_modules/lodash/_castFunction.js"}],"node_modules/lodash-decorators/utils/copyMetaData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var forOwn = require("lodash/forOwn");
/**
 * Used to copy over meta data from function to function.
 * If meta data is attached to a function. This can get lost
 * when wrapping functions. This tries to persist that.
 * @private
 */


function copyMetadata(to, from) {
  forOwn(from, function (value, key) {
    return to[key] = value;
  });
  return to;
}

exports.copyMetadata = copyMetadata;
},{"lodash/forOwn":"node_modules/lodash/forOwn.js"}],"node_modules/lodash-decorators/utils/bind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var copyMetaData_1 = require("./copyMetaData");
/**
 * Binds a function and copies metadata.
 * @private
 * @export
 * @param {Function} fn
 * @param {*} context
 * @returns {Function}
 */


function bind(fn, context) {
  return copyMetaData_1.copyMetadata(fn.bind(context), fn);
}

exports.bind = bind;
},{"./copyMetaData":"node_modules/lodash-decorators/utils/copyMetaData.js"}],"node_modules/lodash/_coreJsData.js":[function(require,module,exports) {
var root = require('./_root');

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;

},{"./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_isMasked.js":[function(require,module,exports) {
var coreJsData = require('./_coreJsData');

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;

},{"./_coreJsData":"node_modules/lodash/_coreJsData.js"}],"node_modules/lodash/_toSource.js":[function(require,module,exports) {
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;

},{}],"node_modules/lodash/_baseIsNative.js":[function(require,module,exports) {
var isFunction = require('./isFunction'),
    isMasked = require('./_isMasked'),
    isObject = require('./isObject'),
    toSource = require('./_toSource');

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;

},{"./isFunction":"node_modules/lodash/isFunction.js","./_isMasked":"node_modules/lodash/_isMasked.js","./isObject":"node_modules/lodash/isObject.js","./_toSource":"node_modules/lodash/_toSource.js"}],"node_modules/lodash/_getValue.js":[function(require,module,exports) {
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;

},{}],"node_modules/lodash/_getNative.js":[function(require,module,exports) {
var baseIsNative = require('./_baseIsNative'),
    getValue = require('./_getValue');

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;

},{"./_baseIsNative":"node_modules/lodash/_baseIsNative.js","./_getValue":"node_modules/lodash/_getValue.js"}],"node_modules/lodash/_nativeCreate.js":[function(require,module,exports) {
var getNative = require('./_getNative');

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;

},{"./_getNative":"node_modules/lodash/_getNative.js"}],"node_modules/lodash/_hashClear.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;

},{"./_nativeCreate":"node_modules/lodash/_nativeCreate.js"}],"node_modules/lodash/_hashDelete.js":[function(require,module,exports) {
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;

},{}],"node_modules/lodash/_hashGet.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;

},{"./_nativeCreate":"node_modules/lodash/_nativeCreate.js"}],"node_modules/lodash/_hashHas.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;

},{"./_nativeCreate":"node_modules/lodash/_nativeCreate.js"}],"node_modules/lodash/_hashSet.js":[function(require,module,exports) {
var nativeCreate = require('./_nativeCreate');

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;

},{"./_nativeCreate":"node_modules/lodash/_nativeCreate.js"}],"node_modules/lodash/_Hash.js":[function(require,module,exports) {
var hashClear = require('./_hashClear'),
    hashDelete = require('./_hashDelete'),
    hashGet = require('./_hashGet'),
    hashHas = require('./_hashHas'),
    hashSet = require('./_hashSet');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;

},{"./_hashClear":"node_modules/lodash/_hashClear.js","./_hashDelete":"node_modules/lodash/_hashDelete.js","./_hashGet":"node_modules/lodash/_hashGet.js","./_hashHas":"node_modules/lodash/_hashHas.js","./_hashSet":"node_modules/lodash/_hashSet.js"}],"node_modules/lodash/_listCacheClear.js":[function(require,module,exports) {
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;

},{}],"node_modules/lodash/eq.js":[function(require,module,exports) {
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;

},{}],"node_modules/lodash/_assocIndexOf.js":[function(require,module,exports) {
var eq = require('./eq');

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;

},{"./eq":"node_modules/lodash/eq.js"}],"node_modules/lodash/_listCacheDelete.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;

},{"./_assocIndexOf":"node_modules/lodash/_assocIndexOf.js"}],"node_modules/lodash/_listCacheGet.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;

},{"./_assocIndexOf":"node_modules/lodash/_assocIndexOf.js"}],"node_modules/lodash/_listCacheHas.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;

},{"./_assocIndexOf":"node_modules/lodash/_assocIndexOf.js"}],"node_modules/lodash/_listCacheSet.js":[function(require,module,exports) {
var assocIndexOf = require('./_assocIndexOf');

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;

},{"./_assocIndexOf":"node_modules/lodash/_assocIndexOf.js"}],"node_modules/lodash/_ListCache.js":[function(require,module,exports) {
var listCacheClear = require('./_listCacheClear'),
    listCacheDelete = require('./_listCacheDelete'),
    listCacheGet = require('./_listCacheGet'),
    listCacheHas = require('./_listCacheHas'),
    listCacheSet = require('./_listCacheSet');

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;

},{"./_listCacheClear":"node_modules/lodash/_listCacheClear.js","./_listCacheDelete":"node_modules/lodash/_listCacheDelete.js","./_listCacheGet":"node_modules/lodash/_listCacheGet.js","./_listCacheHas":"node_modules/lodash/_listCacheHas.js","./_listCacheSet":"node_modules/lodash/_listCacheSet.js"}],"node_modules/lodash/_Map.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;

},{"./_getNative":"node_modules/lodash/_getNative.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_mapCacheClear.js":[function(require,module,exports) {
var Hash = require('./_Hash'),
    ListCache = require('./_ListCache'),
    Map = require('./_Map');

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;

},{"./_Hash":"node_modules/lodash/_Hash.js","./_ListCache":"node_modules/lodash/_ListCache.js","./_Map":"node_modules/lodash/_Map.js"}],"node_modules/lodash/_isKeyable.js":[function(require,module,exports) {
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;

},{}],"node_modules/lodash/_getMapData.js":[function(require,module,exports) {
var isKeyable = require('./_isKeyable');

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;

},{"./_isKeyable":"node_modules/lodash/_isKeyable.js"}],"node_modules/lodash/_mapCacheDelete.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;

},{"./_getMapData":"node_modules/lodash/_getMapData.js"}],"node_modules/lodash/_mapCacheGet.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;

},{"./_getMapData":"node_modules/lodash/_getMapData.js"}],"node_modules/lodash/_mapCacheHas.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;

},{"./_getMapData":"node_modules/lodash/_getMapData.js"}],"node_modules/lodash/_mapCacheSet.js":[function(require,module,exports) {
var getMapData = require('./_getMapData');

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;

},{"./_getMapData":"node_modules/lodash/_getMapData.js"}],"node_modules/lodash/_MapCache.js":[function(require,module,exports) {
var mapCacheClear = require('./_mapCacheClear'),
    mapCacheDelete = require('./_mapCacheDelete'),
    mapCacheGet = require('./_mapCacheGet'),
    mapCacheHas = require('./_mapCacheHas'),
    mapCacheSet = require('./_mapCacheSet');

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;

},{"./_mapCacheClear":"node_modules/lodash/_mapCacheClear.js","./_mapCacheDelete":"node_modules/lodash/_mapCacheDelete.js","./_mapCacheGet":"node_modules/lodash/_mapCacheGet.js","./_mapCacheHas":"node_modules/lodash/_mapCacheHas.js","./_mapCacheSet":"node_modules/lodash/_mapCacheSet.js"}],"node_modules/lodash/_setCacheAdd.js":[function(require,module,exports) {
/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;

},{}],"node_modules/lodash/_setCacheHas.js":[function(require,module,exports) {
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;

},{}],"node_modules/lodash/_SetCache.js":[function(require,module,exports) {
var MapCache = require('./_MapCache'),
    setCacheAdd = require('./_setCacheAdd'),
    setCacheHas = require('./_setCacheHas');

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;

},{"./_MapCache":"node_modules/lodash/_MapCache.js","./_setCacheAdd":"node_modules/lodash/_setCacheAdd.js","./_setCacheHas":"node_modules/lodash/_setCacheHas.js"}],"node_modules/lodash/_baseFindIndex.js":[function(require,module,exports) {
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;

},{}],"node_modules/lodash/_baseIsNaN.js":[function(require,module,exports) {
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;

},{}],"node_modules/lodash/_strictIndexOf.js":[function(require,module,exports) {
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;

},{}],"node_modules/lodash/_baseIndexOf.js":[function(require,module,exports) {
var baseFindIndex = require('./_baseFindIndex'),
    baseIsNaN = require('./_baseIsNaN'),
    strictIndexOf = require('./_strictIndexOf');

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;

},{"./_baseFindIndex":"node_modules/lodash/_baseFindIndex.js","./_baseIsNaN":"node_modules/lodash/_baseIsNaN.js","./_strictIndexOf":"node_modules/lodash/_strictIndexOf.js"}],"node_modules/lodash/_arrayIncludes.js":[function(require,module,exports) {
var baseIndexOf = require('./_baseIndexOf');

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;

},{"./_baseIndexOf":"node_modules/lodash/_baseIndexOf.js"}],"node_modules/lodash/_arrayIncludesWith.js":[function(require,module,exports) {
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;

},{}],"node_modules/lodash/_arrayMap.js":[function(require,module,exports) {
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;

},{}],"node_modules/lodash/_cacheHas.js":[function(require,module,exports) {
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;

},{}],"node_modules/lodash/_baseDifference.js":[function(require,module,exports) {
var SetCache = require('./_SetCache'),
    arrayIncludes = require('./_arrayIncludes'),
    arrayIncludesWith = require('./_arrayIncludesWith'),
    arrayMap = require('./_arrayMap'),
    baseUnary = require('./_baseUnary'),
    cacheHas = require('./_cacheHas');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;

},{"./_SetCache":"node_modules/lodash/_SetCache.js","./_arrayIncludes":"node_modules/lodash/_arrayIncludes.js","./_arrayIncludesWith":"node_modules/lodash/_arrayIncludesWith.js","./_arrayMap":"node_modules/lodash/_arrayMap.js","./_baseUnary":"node_modules/lodash/_baseUnary.js","./_cacheHas":"node_modules/lodash/_cacheHas.js"}],"node_modules/lodash/_apply.js":[function(require,module,exports) {
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;

},{}],"node_modules/lodash/_overRest.js":[function(require,module,exports) {
var apply = require('./_apply');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;

},{"./_apply":"node_modules/lodash/_apply.js"}],"node_modules/lodash/constant.js":[function(require,module,exports) {
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;

},{}],"node_modules/lodash/_defineProperty.js":[function(require,module,exports) {
var getNative = require('./_getNative');

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;

},{"./_getNative":"node_modules/lodash/_getNative.js"}],"node_modules/lodash/_baseSetToString.js":[function(require,module,exports) {
var constant = require('./constant'),
    defineProperty = require('./_defineProperty'),
    identity = require('./identity');

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;

},{"./constant":"node_modules/lodash/constant.js","./_defineProperty":"node_modules/lodash/_defineProperty.js","./identity":"node_modules/lodash/identity.js"}],"node_modules/lodash/_shortOut.js":[function(require,module,exports) {
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;

},{}],"node_modules/lodash/_setToString.js":[function(require,module,exports) {
var baseSetToString = require('./_baseSetToString'),
    shortOut = require('./_shortOut');

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;

},{"./_baseSetToString":"node_modules/lodash/_baseSetToString.js","./_shortOut":"node_modules/lodash/_shortOut.js"}],"node_modules/lodash/_baseRest.js":[function(require,module,exports) {
var identity = require('./identity'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;

},{"./identity":"node_modules/lodash/identity.js","./_overRest":"node_modules/lodash/_overRest.js","./_setToString":"node_modules/lodash/_setToString.js"}],"node_modules/lodash/isArrayLikeObject.js":[function(require,module,exports) {
var isArrayLike = require('./isArrayLike'),
    isObjectLike = require('./isObjectLike');

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;

},{"./isArrayLike":"node_modules/lodash/isArrayLike.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/without.js":[function(require,module,exports) {
var baseDifference = require('./_baseDifference'),
    baseRest = require('./_baseRest'),
    isArrayLikeObject = require('./isArrayLikeObject');

/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, values)
    : [];
});

module.exports = without;

},{"./_baseDifference":"node_modules/lodash/_baseDifference.js","./_baseRest":"node_modules/lodash/_baseRest.js","./isArrayLikeObject":"node_modules/lodash/isArrayLikeObject.js"}],"node_modules/lodash/_getPrototype.js":[function(require,module,exports) {
var overArg = require('./_overArg');

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;

},{"./_overArg":"node_modules/lodash/_overArg.js"}],"node_modules/lodash/isPlainObject.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    getPrototype = require('./_getPrototype'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./_getPrototype":"node_modules/lodash/_getPrototype.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/isError.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike'),
    isPlainObject = require('./isPlainObject');

/** `Object#toString` result references. */
var domExcTag = '[object DOMException]',
    errorTag = '[object Error]';

/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
 * `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * _.isError(new Error);
 * // => true
 *
 * _.isError(Error);
 * // => false
 */
function isError(value) {
  if (!isObjectLike(value)) {
    return false;
  }
  var tag = baseGetTag(value);
  return tag == errorTag || tag == domExcTag ||
    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
}

module.exports = isError;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./isObjectLike":"node_modules/lodash/isObjectLike.js","./isPlainObject":"node_modules/lodash/isPlainObject.js"}],"node_modules/lodash/attempt.js":[function(require,module,exports) {
var apply = require('./_apply'),
    baseRest = require('./_baseRest'),
    isError = require('./isError');

/**
 * Attempts to invoke `func`, returning either the result or the caught error
 * object. Any additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Function} func The function to attempt.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {*} Returns the `func` result or error object.
 * @example
 *
 * // Avoid throwing errors for invalid selectors.
 * var elements = _.attempt(function(selector) {
 *   return document.querySelectorAll(selector);
 * }, '>_>');
 *
 * if (_.isError(elements)) {
 *   elements = [];
 * }
 */
var attempt = baseRest(function(func, args) {
  try {
    return apply(func, undefined, args);
  } catch (e) {
    return isError(e) ? e : new Error(e);
  }
});

module.exports = attempt;

},{"./_apply":"node_modules/lodash/_apply.js","./_baseRest":"node_modules/lodash/_baseRest.js","./isError":"node_modules/lodash/isError.js"}],"node_modules/lodash-decorators/utils/assignAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var without = require("lodash/without");

var attempt = require("lodash/attempt");

var isObject = require("lodash/isObject");
/**
 * Assigns all properties from an object to another object including non enumerable
 * properties.
 * @export
 * @template T
 * @template U
 * @param {T} to
 * @param {U} from
 * @param {string[]} [excludes=[]]
 * @returns {T}
 */


function assignAll(to, from, excludes) {
  if (excludes === void 0) {
    excludes = [];
  }

  var properties = without.apply(void 0, [Object.getOwnPropertyNames(from)].concat(excludes));

  for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {
    var prop = properties_1[_i];
    attempt(assignProperty, to, from, prop);
  }

  return to;
}

exports.assignAll = assignAll;
/**
 * Assigns a property from one object to another while retaining descriptor properties.
 * @export
 * @template T
 * @template U
 * @param {T} to
 * @param {U} from
 * @param {string} prop
 */

function assignProperty(to, from, prop) {
  var descriptor = Object.getOwnPropertyDescriptor(to, prop);

  if (!descriptor || descriptor.configurable) {
    var srcDescriptor = Object.getOwnPropertyDescriptor(from, prop);

    if (isObject(srcDescriptor)) {
      Object.defineProperty(to, prop, srcDescriptor);
    } else {
      to[prop] = from[prop];
    }
  }
}

exports.assignProperty = assignProperty;
},{"lodash/without":"node_modules/lodash/without.js","lodash/attempt":"node_modules/lodash/attempt.js","lodash/isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash-decorators/utils/wrapConstructor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var assignAll_1 = require("./assignAll");

var PROPERTY_EXCLUDES = ['length', 'name', 'arguments', 'called', 'prototype'];
/**
 * Wraps a constructor in a wrapper function and copies all static properties
 * and methods to the new constructor.
 * @export
 * @param {Function} Ctor
 * @param {(Ctor: Function, ...args: any[]) => any} wrapper
 * @returns {Function}
 */

function wrapConstructor(Ctor, wrapper) {
  function ConstructorWrapper() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    return wrapper.call.apply(wrapper, [this, Ctor].concat(args));
  }

  ConstructorWrapper.prototype = Ctor.prototype;
  Object.defineProperty(ConstructorWrapper, 'name', {
    // These values should coincide with the default descriptor values for `name`.
    configurable: true,
    enumerable: false,
    value: Ctor.name,
    writable: false
  });
  return assignAll_1.assignAll(ConstructorWrapper, Ctor, PROPERTY_EXCLUDES);
}

exports.wrapConstructor = wrapConstructor;
},{"./assignAll":"node_modules/lodash-decorators/utils/assignAll.js"}],"node_modules/lodash-decorators/utils/isDecoratorArgs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isObject = require("lodash/isObject");

var isFunction = require("lodash/isFunction");

var isString = require("lodash/isString");

function isMethodOrPropertyDecoratorArgs() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  return args.length >= 2 && isObject(args[0]) && isString(args[1]) && isFunction(args[0].constructor) && args[0].constructor.prototype === args[0];
}

exports.isMethodOrPropertyDecoratorArgs = isMethodOrPropertyDecoratorArgs;
},{"lodash/isObject":"node_modules/lodash/isObject.js","lodash/isFunction":"node_modules/lodash/isFunction.js","lodash/isString":"node_modules/lodash/isString.js"}],"node_modules/lodash-decorators/utils/isPrototypeAccess.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function isPrototypeAccess(context, target) {
  return context === target || context.constructor !== target.constructor && Object.getPrototypeOf(this).constructor === target.constructor;
}

exports.isPrototypeAccess = isPrototypeAccess;
},{}],"node_modules/lodash-decorators/utils.js":[function(require,module,exports) {
"use strict";

function __export(m) {
  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

Object.defineProperty(exports, "__esModule", {
  value: true
});

__export(require("./utils/log"));

__export(require("./utils/resolveFunction"));

__export(require("./utils/CompositeKeyWeakMap"));

__export(require("./utils/returnAtIndex"));

__export(require("./utils/copyMetaData"));

__export(require("./utils/bind"));

__export(require("./utils/wrapConstructor"));

__export(require("./utils/assignAll"));

__export(require("./utils/isDecoratorArgs"));

__export(require("./utils/isPrototypeAccess"));
},{"./utils/log":"node_modules/lodash-decorators/utils/log.js","./utils/resolveFunction":"node_modules/lodash-decorators/utils/resolveFunction.js","./utils/CompositeKeyWeakMap":"node_modules/lodash-decorators/utils/CompositeKeyWeakMap.js","./utils/returnAtIndex":"node_modules/lodash-decorators/utils/returnAtIndex.js","./utils/copyMetaData":"node_modules/lodash-decorators/utils/copyMetaData.js","./utils/bind":"node_modules/lodash-decorators/utils/bind.js","./utils/wrapConstructor":"node_modules/lodash-decorators/utils/wrapConstructor.js","./utils/assignAll":"node_modules/lodash-decorators/utils/assignAll.js","./utils/isDecoratorArgs":"node_modules/lodash-decorators/utils/isDecoratorArgs.js","./utils/isPrototypeAccess":"node_modules/lodash-decorators/utils/isPrototypeAccess.js"}],"node_modules/lodash-decorators/factory/common.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var utils_1 = require("../utils");

exports.InstanceChainMap = new utils_1.CompositeKeyWeakMap();
},{"../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash-decorators/factory/DecoratorFactory.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isFunction = require("lodash/isFunction");

var common_1 = require("./common");

var utils_1 = require("../utils");

var InternalDecoratorFactory = function () {
  function InternalDecoratorFactory() {}

  InternalDecoratorFactory.prototype.createDecorator = function (config) {
    var _this = this;

    var applicator = config.applicator,
        optionalParams = config.optionalParams;
    return function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var params = args;

      var decorator = function (target, name, _descriptor) {
        var descriptor = _this._resolveDescriptor(target, name, _descriptor);

        var value = descriptor.value,
            get = descriptor.get,
            set = descriptor.set; // If this decorator is being applied after an instance decorator we simply ignore it
        // as we can't apply it correctly.

        if (!common_1.InstanceChainMap.has([target, name])) {
          if (isFunction(value)) {
            descriptor.value = utils_1.copyMetadata(applicator.apply({
              config: config,
              target: target,
              value: value,
              args: params
            }), value);
          } else if (isFunction(get) && config.getter) {
            descriptor.get = utils_1.copyMetadata(applicator.apply({
              config: config,
              target: target,
              value: get,
              args: params
            }), get);
          } else if (isFunction(set) && config.setter) {
            descriptor.set = utils_1.copyMetadata(applicator.apply({
              config: config,
              target: target,
              value: set,
              args: params
            }), set);
          }
        }

        return descriptor;
      };

      if (optionalParams && utils_1.isMethodOrPropertyDecoratorArgs.apply(void 0, args)) {
        params = [];
        return decorator(args[0], args[1], args[2]);
      }

      return decorator;
    };
  };

  InternalDecoratorFactory.prototype.createInstanceDecorator = function (config) {
    var _this = this;

    var applicator = config.applicator,
        bound = config.bound,
        optionalParams = config.optionalParams;
    return function () {
      var args = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }

      var params = args;

      var decorator = function (target, name, _descriptor) {
        var descriptor = _this._resolveDescriptor(target, name, _descriptor);

        var value = descriptor.value,
            writable = descriptor.writable,
            enumerable = descriptor.enumerable,
            configurable = descriptor.configurable,
            get = descriptor.get,
            set = descriptor.set;
        var isFirstInstance = !common_1.InstanceChainMap.has([target, name]);
        var chainData = common_1.InstanceChainMap.get([target, name]) || {
          fns: [],
          properties: []
        };
        var isGetter = isFirstInstance && isFunction(get);
        var isSetter = isFirstInstance && isFunction(set);
        var isMethod = isFirstInstance && isFunction(value);
        var isProperty = isFirstInstance && !isGetter && !isSetter && !isMethod;
        var baseValue = isGetter ? get : isMethod ? value : undefined;
        chainData.properties.push(name);
        chainData.fns.push(function (fn, instance, context) {
          if (!_this._isApplicable(context, config)) {
            return fn;
          }

          if (bound) {
            fn = utils_1.bind(fn, instance);
          }

          return utils_1.copyMetadata(applicator.apply({
            args: params,
            target: target,
            instance: instance,
            value: fn,
            config: config
          }), fn);
        });
        common_1.InstanceChainMap.set([target, name], chainData);

        if (!isFirstInstance) {
          return descriptor;
        }

        chainData.isSetter = isSetter;
        chainData.isGetter = isGetter;
        chainData.isMethod = isMethod;
        chainData.isProperty = isProperty;

        var applyChain = function (fn, context, instance) {
          return chainData.fns.reduce(function (result, next) {
            return next(result, instance, context);
          }, fn);
        };

        var applyDecorator = function (instance) {
          var getter = get || undefined;
          var setter = set || undefined;

          if (isGetter || isSetter) {
            // If we have a getter apply the decorators to the getter and assign it to the instance.
            if (isGetter) {
              getter = applyChain(get, {
                value: get,
                getter: true
              }, instance);
            }

            if (isSetter) {
              setter = applyChain(set, {
                value: set,
                setter: true
              }, instance);
            }

            Object.defineProperty(instance, name, {
              enumerable: enumerable,
              configurable: configurable,
              get: getter,
              set: setter
            });
          } else if (isMethod || isProperty) {
            var newFn = isMethod ? applyChain(value, {
              value: value,
              method: true
            }, instance) : applyChain(value, {
              value: value,
              property: true
            }, instance);
            Object.defineProperty(instance, name, {
              writable: writable,
              enumerable: enumerable,
              configurable: configurable,
              value: newFn
            });
          }
        };

        if (isMethod || isProperty) {
          delete descriptor.value;
          delete descriptor.writable;
        }

        descriptor.get = function () {
          // Check for direct access on the prototype.
          // MyClass.prototype.fn <-- This should not apply the decorator.
          if (utils_1.isPrototypeAccess(this, target)) {
            return baseValue;
          }

          applyDecorator(this);
          var descriptor = Object.getOwnPropertyDescriptor(this, name);

          if (descriptor.get) {
            return descriptor.get.call(this);
          }

          return descriptor.value;
        };

        descriptor.set = function (value) {
          applyDecorator(this);
          var descriptor = Object.getOwnPropertyDescriptor(this, name);

          if (descriptor.set) {
            descriptor.set.call(this, value);
          } else if (isProperty || isMethod) {
            this[name] = value;
          }
        };

        return descriptor;
      };

      if (optionalParams && utils_1.isMethodOrPropertyDecoratorArgs.apply(void 0, args)) {
        params = [];
        return decorator(args[0], args[1], args[2]);
      }

      return decorator;
    };
  };

  InternalDecoratorFactory.prototype._isApplicable = function (context, config) {
    return !Boolean(context.getter && !config.getter || context.setter && !config.setter || context.method && !config.method || context.property && !config.property);
  };

  InternalDecoratorFactory.prototype._resolveDescriptor = function (target, name, descriptor) {
    if (descriptor) {
      return descriptor;
    }

    return Object.getOwnPropertyDescriptor(target, name) || {};
  };

  return InternalDecoratorFactory;
}();

exports.InternalDecoratorFactory = InternalDecoratorFactory;
exports.DecoratorFactory = new InternalDecoratorFactory();
},{"lodash/isFunction":"node_modules/lodash/isFunction.js","./common":"node_modules/lodash-decorators/factory/common.js","../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash-decorators/factory.js":[function(require,module,exports) {
"use strict";

function __export(m) {
  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

Object.defineProperty(exports, "__esModule", {
  value: true
});

__export(require("./factory/DecoratorConfig"));

__export(require("./factory/DecoratorFactory"));

__export(require("./factory/common"));
},{"./factory/DecoratorConfig":"node_modules/lodash-decorators/factory/DecoratorConfig.js","./factory/DecoratorFactory":"node_modules/lodash-decorators/factory/DecoratorFactory.js","./factory/common":"node_modules/lodash-decorators/factory/common.js"}],"node_modules/lodash/isSymbol.js":[function(require,module,exports) {
var baseGetTag = require('./_baseGetTag'),
    isObjectLike = require('./isObjectLike');

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;

},{"./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/toNumber.js":[function(require,module,exports) {
var isObject = require('./isObject'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;

},{"./isObject":"node_modules/lodash/isObject.js","./isSymbol":"node_modules/lodash/isSymbol.js"}],"node_modules/lodash/toFinite.js":[function(require,module,exports) {
var toNumber = require('./toNumber');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;

},{"./toNumber":"node_modules/lodash/toNumber.js"}],"node_modules/lodash/toInteger.js":[function(require,module,exports) {
var toFinite = require('./toFinite');

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;

},{"./toFinite":"node_modules/lodash/toFinite.js"}],"node_modules/lodash/after.js":[function(require,module,exports) {
var toInteger = require('./toInteger');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The opposite of `_.before`; this method creates a function that invokes
 * `func` once it's called `n` or more times.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {number} n The number of calls before `func` is invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var saves = ['profile', 'settings'];
 *
 * var done = _.after(saves.length, function() {
 *   console.log('done saving!');
 * });
 *
 * _.forEach(saves, function(type) {
 *   asyncSave({ 'type': type, 'complete': done });
 * });
 * // => Logs 'done saving!' after the two async saves have completed.
 */
function after(n, func) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger(n);
  return function() {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}

module.exports = after;

},{"./toInteger":"node_modules/lodash/toInteger.js"}],"node_modules/lodash-decorators/applicators/Applicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Applicator = function () {
  function Applicator() {}

  return Applicator;
}();

exports.Applicator = Applicator;
},{}],"node_modules/tslib/tslib.es6.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__extends = __extends;
exports.__rest = __rest;
exports.__decorate = __decorate;
exports.__param = __param;
exports.__metadata = __metadata;
exports.__awaiter = __awaiter;
exports.__generator = __generator;
exports.__exportStar = __exportStar;
exports.__values = __values;
exports.__read = __read;
exports.__spread = __spread;
exports.__spreadArrays = __spreadArrays;
exports.__await = __await;
exports.__asyncGenerator = __asyncGenerator;
exports.__asyncDelegator = __asyncDelegator;
exports.__asyncValues = __asyncValues;
exports.__makeTemplateObject = __makeTemplateObject;
exports.__importStar = __importStar;
exports.__importDefault = __importDefault;
exports.__classPrivateFieldGet = __classPrivateFieldGet;
exports.__classPrivateFieldSet = __classPrivateFieldSet;
exports.__assign = void 0;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

/* global Reflect, Promise */
var extendStatics = function (d, b) {
  extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
  };

  return extendStatics(d, b);
};

function __extends(d, b) {
  extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function () {
  exports.__assign = __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

exports.__assign = __assign;

function __rest(s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}

function __exportStar(m, exports) {
  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}

function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));

  return ar;
}

function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

  return r;
}

;

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}

;

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  result.default = mod;
  return result;
}

function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}

function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
}
},{}],"node_modules/lodash-decorators/applicators/ComposeApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var identity = require("lodash/identity");

var Applicator_1 = require("./Applicator");

var utils_1 = require("../utils");

var ComposeApplicator = function (_super) {
  tslib_1.__extends(ComposeApplicator, _super);

  function ComposeApplicator(_config) {
    if (_config === void 0) {
      _config = {};
    }

    var _this = _super.call(this) || this;

    _this._config = _config;
    return _this;
  }

  Object.defineProperty(ComposeApplicator.prototype, "post", {
    get: function () {
      return this._config.post === true;
    },
    enumerable: true,
    configurable: true
  });

  ComposeApplicator.prototype.apply = function (_a) {
    var execute = _a.config.execute,
        _b = _a.value,
        value = _b === void 0 ? identity : _b,
        args = _a.args,
        target = _a.target;
    var applicator = this;
    return function () {
      var _this = this;

      var invokeArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        invokeArgs[_i] = arguments[_i];
      }

      var _args = args.map(function (method) {
        return utils_1.resolveFunction(method, _this, target);
      }).slice();

      if (applicator.post) {
        _args.push(value);
      } else {
        _args.unshift(value);
      }

      return execute.apply(void 0, _args).apply(this, invokeArgs);
    };
  };

  return ComposeApplicator;
}(Applicator_1.Applicator);

exports.ComposeApplicator = ComposeApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","lodash/identity":"node_modules/lodash/identity.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js","../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash-decorators/applicators/PartialApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var Applicator_1 = require("./Applicator");

var utils_1 = require("../utils");

var PartialApplicator = function (_super) {
  tslib_1.__extends(PartialApplicator, _super);

  function PartialApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  PartialApplicator.prototype.apply = function (_a) {
    var args = _a.args,
        target = _a.target,
        execute = _a.config.execute;
    return function () {
      var invokeArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        invokeArgs[_i] = arguments[_i];
      }

      return execute.apply(void 0, [utils_1.resolveFunction(args[0], this, target)].concat(args.slice(1))).apply(this, invokeArgs);
    };
  };

  return PartialApplicator;
}(Applicator_1.Applicator);

exports.PartialApplicator = PartialApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js","../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash/_WeakMap.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;

},{"./_getNative":"node_modules/lodash/_getNative.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_metaMap.js":[function(require,module,exports) {
var WeakMap = require('./_WeakMap');

/** Used to store function metadata. */
var metaMap = WeakMap && new WeakMap;

module.exports = metaMap;

},{"./_WeakMap":"node_modules/lodash/_WeakMap.js"}],"node_modules/lodash/_baseSetData.js":[function(require,module,exports) {
var identity = require('./identity'),
    metaMap = require('./_metaMap');

/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !metaMap ? identity : function(func, data) {
  metaMap.set(func, data);
  return func;
};

module.exports = baseSetData;

},{"./identity":"node_modules/lodash/identity.js","./_metaMap":"node_modules/lodash/_metaMap.js"}],"node_modules/lodash/_baseCreate.js":[function(require,module,exports) {
var isObject = require('./isObject');

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;

},{"./isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash/_createCtor.js":[function(require,module,exports) {
var baseCreate = require('./_baseCreate'),
    isObject = require('./isObject');

/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
  return function() {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;
    switch (args.length) {
      case 0: return new Ctor;
      case 1: return new Ctor(args[0]);
      case 2: return new Ctor(args[0], args[1]);
      case 3: return new Ctor(args[0], args[1], args[2]);
      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate(Ctor.prototype),
        result = Ctor.apply(thisBinding, args);

    // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.
    return isObject(result) ? result : thisBinding;
  };
}

module.exports = createCtor;

},{"./_baseCreate":"node_modules/lodash/_baseCreate.js","./isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash/_createBind.js":[function(require,module,exports) {
var createCtor = require('./_createCtor'),
    root = require('./_root');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = createCtor(func);

  function wrapper() {
    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}

module.exports = createBind;

},{"./_createCtor":"node_modules/lodash/_createCtor.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_composeArgs.js":[function(require,module,exports) {
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }
  return result;
}

module.exports = composeArgs;

},{}],"node_modules/lodash/_composeArgsRight.js":[function(require,module,exports) {
/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result;
}

module.exports = composeArgsRight;

},{}],"node_modules/lodash/_countHolders.js":[function(require,module,exports) {
/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }
  return result;
}

module.exports = countHolders;

},{}],"node_modules/lodash/_baseLodash.js":[function(require,module,exports) {
/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
  // No operation performed.
}

module.exports = baseLodash;

},{}],"node_modules/lodash/_LazyWrapper.js":[function(require,module,exports) {
var baseCreate = require('./_baseCreate'),
    baseLodash = require('./_baseLodash');

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;

module.exports = LazyWrapper;

},{"./_baseCreate":"node_modules/lodash/_baseCreate.js","./_baseLodash":"node_modules/lodash/_baseLodash.js"}],"node_modules/lodash/noop.js":[function(require,module,exports) {
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;

},{}],"node_modules/lodash/_getData.js":[function(require,module,exports) {
var metaMap = require('./_metaMap'),
    noop = require('./noop');

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !metaMap ? noop : function(func) {
  return metaMap.get(func);
};

module.exports = getData;

},{"./_metaMap":"node_modules/lodash/_metaMap.js","./noop":"node_modules/lodash/noop.js"}],"node_modules/lodash/_realNames.js":[function(require,module,exports) {
/** Used to lookup unminified function names. */
var realNames = {};

module.exports = realNames;

},{}],"node_modules/lodash/_getFuncName.js":[function(require,module,exports) {
var realNames = require('./_realNames');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
  var result = (func.name + ''),
      array = realNames[result],
      length = hasOwnProperty.call(realNames, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

module.exports = getFuncName;

},{"./_realNames":"node_modules/lodash/_realNames.js"}],"node_modules/lodash/_LodashWrapper.js":[function(require,module,exports) {
var baseCreate = require('./_baseCreate'),
    baseLodash = require('./_baseLodash');

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

module.exports = LodashWrapper;

},{"./_baseCreate":"node_modules/lodash/_baseCreate.js","./_baseLodash":"node_modules/lodash/_baseLodash.js"}],"node_modules/lodash/_copyArray.js":[function(require,module,exports) {
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;

},{}],"node_modules/lodash/_wrapperClone.js":[function(require,module,exports) {
var LazyWrapper = require('./_LazyWrapper'),
    LodashWrapper = require('./_LodashWrapper'),
    copyArray = require('./_copyArray');

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper) {
    return wrapper.clone();
  }
  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = copyArray(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

module.exports = wrapperClone;

},{"./_LazyWrapper":"node_modules/lodash/_LazyWrapper.js","./_LodashWrapper":"node_modules/lodash/_LodashWrapper.js","./_copyArray":"node_modules/lodash/_copyArray.js"}],"node_modules/lodash/wrapperLodash.js":[function(require,module,exports) {
var LazyWrapper = require('./_LazyWrapper'),
    LodashWrapper = require('./_LodashWrapper'),
    baseLodash = require('./_baseLodash'),
    isArray = require('./isArray'),
    isObjectLike = require('./isObjectLike'),
    wrapperClone = require('./_wrapperClone');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
    if (value instanceof LodashWrapper) {
      return value;
    }
    if (hasOwnProperty.call(value, '__wrapped__')) {
      return wrapperClone(value);
    }
  }
  return new LodashWrapper(value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = baseLodash.prototype;
lodash.prototype.constructor = lodash;

module.exports = lodash;

},{"./_LazyWrapper":"node_modules/lodash/_LazyWrapper.js","./_LodashWrapper":"node_modules/lodash/_LodashWrapper.js","./_baseLodash":"node_modules/lodash/_baseLodash.js","./isArray":"node_modules/lodash/isArray.js","./isObjectLike":"node_modules/lodash/isObjectLike.js","./_wrapperClone":"node_modules/lodash/_wrapperClone.js"}],"node_modules/lodash/_isLaziable.js":[function(require,module,exports) {
var LazyWrapper = require('./_LazyWrapper'),
    getData = require('./_getData'),
    getFuncName = require('./_getFuncName'),
    lodash = require('./wrapperLodash');

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = getFuncName(func),
      other = lodash[funcName];

  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData(other);
  return !!data && func === data[0];
}

module.exports = isLaziable;

},{"./_LazyWrapper":"node_modules/lodash/_LazyWrapper.js","./_getData":"node_modules/lodash/_getData.js","./_getFuncName":"node_modules/lodash/_getFuncName.js","./wrapperLodash":"node_modules/lodash/wrapperLodash.js"}],"node_modules/lodash/_setData.js":[function(require,module,exports) {
var baseSetData = require('./_baseSetData'),
    shortOut = require('./_shortOut');

/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = shortOut(baseSetData);

module.exports = setData;

},{"./_baseSetData":"node_modules/lodash/_baseSetData.js","./_shortOut":"node_modules/lodash/_shortOut.js"}],"node_modules/lodash/_getWrapDetails.js":[function(require,module,exports) {
/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

module.exports = getWrapDetails;

},{}],"node_modules/lodash/_insertWrapDetails.js":[function(require,module,exports) {
/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

module.exports = insertWrapDetails;

},{}],"node_modules/lodash/_arrayEach.js":[function(require,module,exports) {
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;

},{}],"node_modules/lodash/_updateWrapDetails.js":[function(require,module,exports) {
var arrayEach = require('./_arrayEach'),
    arrayIncludes = require('./_arrayIncludes');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256,
    WRAP_FLIP_FLAG = 512;

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
  ['ary', WRAP_ARY_FLAG],
  ['bind', WRAP_BIND_FLAG],
  ['bindKey', WRAP_BIND_KEY_FLAG],
  ['curry', WRAP_CURRY_FLAG],
  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
  ['flip', WRAP_FLIP_FLAG],
  ['partial', WRAP_PARTIAL_FLAG],
  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
  ['rearg', WRAP_REARG_FLAG]
];

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails(details, bitmask) {
  arrayEach(wrapFlags, function(pair) {
    var value = '_.' + pair[0];
    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

module.exports = updateWrapDetails;

},{"./_arrayEach":"node_modules/lodash/_arrayEach.js","./_arrayIncludes":"node_modules/lodash/_arrayIncludes.js"}],"node_modules/lodash/_setWrapToString.js":[function(require,module,exports) {
var getWrapDetails = require('./_getWrapDetails'),
    insertWrapDetails = require('./_insertWrapDetails'),
    setToString = require('./_setToString'),
    updateWrapDetails = require('./_updateWrapDetails');

/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
  var source = (reference + '');
  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
}

module.exports = setWrapToString;

},{"./_getWrapDetails":"node_modules/lodash/_getWrapDetails.js","./_insertWrapDetails":"node_modules/lodash/_insertWrapDetails.js","./_setToString":"node_modules/lodash/_setToString.js","./_updateWrapDetails":"node_modules/lodash/_updateWrapDetails.js"}],"node_modules/lodash/_createRecurry.js":[function(require,module,exports) {
var isLaziable = require('./_isLaziable'),
    setData = require('./_setData'),
    setWrapToString = require('./_setWrapToString');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;

  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
  }
  var newData = [
    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
    newHoldersRight, argPos, ary, arity
  ];

  var result = wrapFunc.apply(undefined, newData);
  if (isLaziable(func)) {
    setData(result, newData);
  }
  result.placeholder = placeholder;
  return setWrapToString(result, func, bitmask);
}

module.exports = createRecurry;

},{"./_isLaziable":"node_modules/lodash/_isLaziable.js","./_setData":"node_modules/lodash/_setData.js","./_setWrapToString":"node_modules/lodash/_setWrapToString.js"}],"node_modules/lodash/_getHolder.js":[function(require,module,exports) {
/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
  var object = func;
  return object.placeholder;
}

module.exports = getHolder;

},{}],"node_modules/lodash/_reorder.js":[function(require,module,exports) {
var copyArray = require('./_copyArray'),
    isIndex = require('./_isIndex');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder(array, indexes) {
  var arrLength = array.length,
      length = nativeMin(indexes.length, arrLength),
      oldArray = copyArray(array);

  while (length--) {
    var index = indexes[length];
    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}

module.exports = reorder;

},{"./_copyArray":"node_modules/lodash/_copyArray.js","./_isIndex":"node_modules/lodash/_isIndex.js"}],"node_modules/lodash/_replaceHolders.js":[function(require,module,exports) {
/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result[resIndex++] = index;
    }
  }
  return result;
}

module.exports = replaceHolders;

},{}],"node_modules/lodash/_createHybrid.js":[function(require,module,exports) {
var composeArgs = require('./_composeArgs'),
    composeArgsRight = require('./_composeArgsRight'),
    countHolders = require('./_countHolders'),
    createCtor = require('./_createCtor'),
    createRecurry = require('./_createRecurry'),
    getHolder = require('./_getHolder'),
    reorder = require('./_reorder'),
    replaceHolders = require('./_replaceHolders'),
    root = require('./_root');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_ARY_FLAG = 128,
    WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG,
      isBind = bitmask & WRAP_BIND_FLAG,
      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
      isFlip = bitmask & WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder(wrapper),
          holdersCount = countHolders(args, placeholder);
    }
    if (partials) {
      args = composeArgs(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders(args, placeholder);
      return createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
        args, newHolders, argPos, ary, arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;

    length = args.length;
    if (argPos) {
      args = reorder(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary < length) {
      args.length = ary;
    }
    if (this && this !== root && this instanceof wrapper) {
      fn = Ctor || createCtor(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}

module.exports = createHybrid;

},{"./_composeArgs":"node_modules/lodash/_composeArgs.js","./_composeArgsRight":"node_modules/lodash/_composeArgsRight.js","./_countHolders":"node_modules/lodash/_countHolders.js","./_createCtor":"node_modules/lodash/_createCtor.js","./_createRecurry":"node_modules/lodash/_createRecurry.js","./_getHolder":"node_modules/lodash/_getHolder.js","./_reorder":"node_modules/lodash/_reorder.js","./_replaceHolders":"node_modules/lodash/_replaceHolders.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_createCurry.js":[function(require,module,exports) {
var apply = require('./_apply'),
    createCtor = require('./_createCtor'),
    createHybrid = require('./_createHybrid'),
    createRecurry = require('./_createRecurry'),
    getHolder = require('./_getHolder'),
    replaceHolders = require('./_replaceHolders'),
    root = require('./_root');

/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = getHolder(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }
    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
      ? []
      : replaceHolders(args, placeholder);

    length -= holders.length;
    if (length < arity) {
      return createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, undefined,
        args, holders, undefined, undefined, arity - length);
    }
    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
    return apply(fn, this, args);
  }
  return wrapper;
}

module.exports = createCurry;

},{"./_apply":"node_modules/lodash/_apply.js","./_createCtor":"node_modules/lodash/_createCtor.js","./_createHybrid":"node_modules/lodash/_createHybrid.js","./_createRecurry":"node_modules/lodash/_createRecurry.js","./_getHolder":"node_modules/lodash/_getHolder.js","./_replaceHolders":"node_modules/lodash/_replaceHolders.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_createPartial.js":[function(require,module,exports) {
var apply = require('./_apply'),
    createCtor = require('./_createCtor'),
    root = require('./_root');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = createCtor(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}

module.exports = createPartial;

},{"./_apply":"node_modules/lodash/_apply.js","./_createCtor":"node_modules/lodash/_createCtor.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_mergeData.js":[function(require,module,exports) {
var composeArgs = require('./_composeArgs'),
    composeArgsRight = require('./_composeArgsRight'),
    replaceHolders = require('./_replaceHolders');

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

  var isCombo =
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

  // Exit early if metadata can't be merged.
  if (!(isCommon || isCombo)) {
    return data;
  }
  // Use source `thisArg` if available.
  if (srcBitmask & WRAP_BIND_FLAG) {
    data[2] = source[2];
    // Set when currying a bound function.
    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
  }
  // Compose partial arguments.
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
  }
  // Compose partial right arguments.
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
  }
  // Use source `argPos` if available.
  value = source[7];
  if (value) {
    data[7] = value;
  }
  // Use source `ary` if it's smaller.
  if (srcBitmask & WRAP_ARY_FLAG) {
    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
  }
  // Use source `arity` if one is not provided.
  if (data[9] == null) {
    data[9] = source[9];
  }
  // Use source `func` and merge bitmasks.
  data[0] = source[0];
  data[1] = newBitmask;

  return data;
}

module.exports = mergeData;

},{"./_composeArgs":"node_modules/lodash/_composeArgs.js","./_composeArgsRight":"node_modules/lodash/_composeArgsRight.js","./_replaceHolders":"node_modules/lodash/_replaceHolders.js"}],"node_modules/lodash/_createWrap.js":[function(require,module,exports) {
var baseSetData = require('./_baseSetData'),
    createBind = require('./_createBind'),
    createCurry = require('./_createCurry'),
    createHybrid = require('./_createHybrid'),
    createPartial = require('./_createPartial'),
    getData = require('./_getData'),
    mergeData = require('./_mergeData'),
    setData = require('./_setData'),
    setWrapToString = require('./_setWrapToString'),
    toInteger = require('./toInteger');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }
  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
  arity = arity === undefined ? arity : toInteger(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;

    partials = holders = undefined;
  }
  var data = isBindKey ? undefined : getData(func);

  var newData = [
    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
    argPos, ary, arity
  ];

  if (data) {
    mergeData(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined
    ? (isBindKey ? 0 : func.length)
    : nativeMax(newData[9] - length, 0);

  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
    var result = createBind(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
    result = createCurry(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = createPartial(func, bitmask, thisArg, partials);
  } else {
    result = createHybrid.apply(undefined, newData);
  }
  var setter = data ? baseSetData : setData;
  return setWrapToString(setter(result, newData), func, bitmask);
}

module.exports = createWrap;

},{"./_baseSetData":"node_modules/lodash/_baseSetData.js","./_createBind":"node_modules/lodash/_createBind.js","./_createCurry":"node_modules/lodash/_createCurry.js","./_createHybrid":"node_modules/lodash/_createHybrid.js","./_createPartial":"node_modules/lodash/_createPartial.js","./_getData":"node_modules/lodash/_getData.js","./_mergeData":"node_modules/lodash/_mergeData.js","./_setData":"node_modules/lodash/_setData.js","./_setWrapToString":"node_modules/lodash/_setWrapToString.js","./toInteger":"node_modules/lodash/toInteger.js"}],"node_modules/lodash/partial.js":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    createWrap = require('./_createWrap'),
    getHolder = require('./_getHolder'),
    replaceHolders = require('./_replaceHolders');

/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes `func` with `partials` prepended to the
 * arguments it receives. This method is like `_.bind` except it does **not**
 * alter the `this` binding.
 *
 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 0.2.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var sayHelloTo = _.partial(greet, 'hello');
 * sayHelloTo('fred');
 * // => 'hello fred'
 *
 * // Partially applied with placeholders.
 * var greetFred = _.partial(greet, _, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 */
var partial = baseRest(function(func, partials) {
  var holders = replaceHolders(partials, getHolder(partial));
  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partial.placeholder = {};

module.exports = partial;

},{"./_baseRest":"node_modules/lodash/_baseRest.js","./_createWrap":"node_modules/lodash/_createWrap.js","./_getHolder":"node_modules/lodash/_getHolder.js","./_replaceHolders":"node_modules/lodash/_replaceHolders.js"}],"node_modules/lodash-decorators/applicators/PartialedApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var partial = require("lodash/partial");

var Applicator_1 = require("./Applicator");

var PartialedApplicator = function (_super) {
  tslib_1.__extends(PartialedApplicator, _super);

  function PartialedApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  PartialedApplicator.prototype.apply = function (_a) {
    var execute = _a.config.execute,
        value = _a.value,
        args = _a.args;
    return partial.apply(void 0, [execute, value].concat(args));
  };

  return PartialedApplicator;
}(Applicator_1.Applicator);

exports.PartialedApplicator = PartialedApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","lodash/partial":"node_modules/lodash/partial.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js"}],"node_modules/lodash-decorators/applicators/PartialValueApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var isFunction = require("lodash/isFunction");

var Applicator_1 = require("./Applicator");

var utils_1 = require("../utils");

var PartialValueApplicator = function (_super) {
  tslib_1.__extends(PartialValueApplicator, _super);

  function PartialValueApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  PartialValueApplicator.prototype.apply = function (_a) {
    var args = _a.args,
        target = _a.target,
        value = _a.value,
        execute = _a.config.execute;
    return function () {
      var invokeArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        invokeArgs[_i] = arguments[_i];
      }

      var fn = value;
      var argIndex = 0;

      if (!isFunction(fn)) {
        fn = utils_1.resolveFunction(args[0], this, target);
        argIndex = 1;
      }

      return execute.apply(void 0, [fn].concat(args.slice(argIndex))).apply(this, invokeArgs);
    };
  };

  return PartialValueApplicator;
}(Applicator_1.Applicator);

exports.PartialValueApplicator = PartialValueApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","lodash/isFunction":"node_modules/lodash/isFunction.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js","../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash-decorators/applicators/PostValueApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var Applicator_1 = require("./Applicator");

var PostValueApplicator = function (_super) {
  tslib_1.__extends(PostValueApplicator, _super);

  function PostValueApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  PostValueApplicator.prototype.apply = function (_a) {
    var _b = _a.config,
        execute = _b.execute,
        bound = _b.bound,
        args = _a.args,
        value = _a.value;
    return execute.apply(void 0, args.concat([value]));
  };

  return PostValueApplicator;
}(Applicator_1.Applicator);

exports.PostValueApplicator = PostValueApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js"}],"node_modules/lodash-decorators/applicators/PreValueApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var Applicator_1 = require("./Applicator");

var PreValueApplicator = function (_super) {
  tslib_1.__extends(PreValueApplicator, _super);

  function PreValueApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  PreValueApplicator.prototype.apply = function (_a) {
    var value = _a.value,
        execute = _a.config.execute,
        args = _a.args;
    return execute.apply(void 0, [value].concat(args));
  };

  return PreValueApplicator;
}(Applicator_1.Applicator);

exports.PreValueApplicator = PreValueApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js"}],"node_modules/lodash-decorators/applicators/WrapApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var Applicator_1 = require("./Applicator");

var utils_1 = require("../utils");

var WrapApplicator = function (_super) {
  tslib_1.__extends(WrapApplicator, _super);

  function WrapApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  WrapApplicator.prototype.apply = function (_a) {
    var args = _a.args,
        execute = _a.config.execute,
        target = _a.target,
        value = _a.value;
    return function () {
      var invokeArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        invokeArgs[_i] = arguments[_i];
      }

      return execute(utils_1.resolveFunction(args[0], this, target), value).apply(this, invokeArgs);
    };
  };

  return WrapApplicator;
}(Applicator_1.Applicator);

exports.WrapApplicator = WrapApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js","../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash-decorators/applicators/BindApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var Applicator_1 = require("./Applicator");

var BindApplicator = function (_super) {
  tslib_1.__extends(BindApplicator, _super);

  function BindApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  BindApplicator.prototype.apply = function (_a) {
    var value = _a.value,
        execute = _a.config.execute,
        args = _a.args,
        instance = _a.instance,
        target = _a.target;

    if (!instance) {
      return value;
    }

    return execute.apply(void 0, [value, instance].concat(args));
  };

  return BindApplicator;
}(Applicator_1.Applicator);

exports.BindApplicator = BindApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js"}],"node_modules/lodash-decorators/applicators/InvokeApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var Applicator_1 = require("./Applicator");

var InvokeApplicator = function (_super) {
  tslib_1.__extends(InvokeApplicator, _super);

  function InvokeApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  InvokeApplicator.prototype.apply = function (_a) {
    var args = _a.args,
        target = _a.target,
        execute = _a.config.execute,
        value = _a.value;
    return function () {
      var invokeArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        invokeArgs[_i] = arguments[_i];
      }

      return execute.apply(void 0, [value.bind(this)].concat(invokeArgs, args));
    };
  };

  return InvokeApplicator;
}(Applicator_1.Applicator);

exports.InvokeApplicator = InvokeApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js"}],"node_modules/lodash-decorators/applicators/MemoizeApplicator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var isFunction = require("lodash/isFunction");

var isObject = require("lodash/isObject");

var Applicator_1 = require("./Applicator");

var utils_1 = require("../utils");

var MemoizeApplicator = function (_super) {
  tslib_1.__extends(MemoizeApplicator, _super);

  function MemoizeApplicator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }

  MemoizeApplicator.prototype.apply = function (_a) {
    var value = _a.value,
        instance = _a.instance,
        execute = _a.config.execute,
        args = _a.args,
        target = _a.target;
    var resolver = utils_1.resolveFunction(isFunction(args[0]) ? args[0] : isObject(args[0]) ? args[0].resolver : args[0], instance, target, false);

    if (resolver && instance) {
      resolver = resolver.bind(instance);
    }

    var memoized = resolver ? execute(value, resolver) : execute(value);

    if (isObject(args[0])) {
      var _b = args[0],
          cache = _b.cache,
          type = _b.type;

      if (cache) {
        memoized.cache = cache;
      } else if (isFunction(type)) {
        memoized.cache = new type();
      }
    }

    return memoized;
  };

  return MemoizeApplicator;
}(Applicator_1.Applicator);

exports.MemoizeApplicator = MemoizeApplicator;
},{"tslib":"node_modules/tslib/tslib.es6.js","lodash/isFunction":"node_modules/lodash/isFunction.js","lodash/isObject":"node_modules/lodash/isObject.js","./Applicator":"node_modules/lodash-decorators/applicators/Applicator.js","../utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash-decorators/applicators.js":[function(require,module,exports) {
"use strict";

function __export(m) {
  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

Object.defineProperty(exports, "__esModule", {
  value: true
});

__export(require("./applicators/Applicator"));

__export(require("./applicators/ComposeApplicator"));

__export(require("./applicators/PartialApplicator"));

__export(require("./applicators/PartialedApplicator"));

__export(require("./applicators/PartialValueApplicator"));

__export(require("./applicators/PostValueApplicator"));

__export(require("./applicators/PreValueApplicator"));

__export(require("./applicators/WrapApplicator"));

__export(require("./applicators/BindApplicator"));

__export(require("./applicators/InvokeApplicator"));

__export(require("./applicators/MemoizeApplicator"));
},{"./applicators/Applicator":"node_modules/lodash-decorators/applicators/Applicator.js","./applicators/ComposeApplicator":"node_modules/lodash-decorators/applicators/ComposeApplicator.js","./applicators/PartialApplicator":"node_modules/lodash-decorators/applicators/PartialApplicator.js","./applicators/PartialedApplicator":"node_modules/lodash-decorators/applicators/PartialedApplicator.js","./applicators/PartialValueApplicator":"node_modules/lodash-decorators/applicators/PartialValueApplicator.js","./applicators/PostValueApplicator":"node_modules/lodash-decorators/applicators/PostValueApplicator.js","./applicators/PreValueApplicator":"node_modules/lodash-decorators/applicators/PreValueApplicator.js","./applicators/WrapApplicator":"node_modules/lodash-decorators/applicators/WrapApplicator.js","./applicators/BindApplicator":"node_modules/lodash-decorators/applicators/BindApplicator.js","./applicators/InvokeApplicator":"node_modules/lodash-decorators/applicators/InvokeApplicator.js","./applicators/MemoizeApplicator":"node_modules/lodash-decorators/applicators/MemoizeApplicator.js"}],"node_modules/lodash-decorators/after.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var after = require("lodash/after");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(after, new applicators_1.PostValueApplicator(), {
  setter: true
}));
/**
 * The opposite of Before. This method creates a function that invokes once it's called n or more times.
 * @param {number} n The number of calls before the function is invoked.
 * @example
 *
 * class MyClass {
 *   @After(2)
 *   fn() {
 *     return 10;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn(); // => undefined
 * myClass.fn(); // => 10
 */

function After(n) {
  return decorator(n);
}

exports.After = After;
exports.after = After;
exports.default = decorator;
},{"lodash/after":"node_modules/lodash/after.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/afterAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var after = require("lodash/after");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(after, new applicators_1.PostValueApplicator(), {
  setter: true
}));
/**
 * The opposite of Before. This method creates a function that invokes once it's called n or more times.
 * This spans across all instances of the class instead of the instance.
 * @param {number} n The number of calls before the function is invoked.
 * @example
 *
 * class MyClass {
 *   @AfterAll(2)
 *   fn() {
 *     return 10;
 *   }
 * }
 *
 * const myClass = new MyClass();
 * const myClass2 = new MyClass();
 *
 * myClass.fn(); // => undefined
 * myClass.fn(); // => 10
 *
 * myClass2.fn(); // => 10
 * myClass2.fn(); // => 10
 */

function AfterAll(n) {
  return decorator(n);
}

exports.AfterAll = AfterAll;
exports.afterAll = AfterAll;
exports.default = decorator;
},{"lodash/after":"node_modules/lodash/after.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/ary.js":[function(require,module,exports) {
var createWrap = require('./_createWrap');

/** Used to compose bitmasks for function metadata. */
var WRAP_ARY_FLAG = 128;

/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */
function ary(func, n, guard) {
  n = guard ? undefined : n;
  n = (func && n == null) ? func.length : n;
  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

module.exports = ary;

},{"./_createWrap":"node_modules/lodash/_createWrap.js"}],"node_modules/lodash-decorators/ary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var ary = require("lodash/ary");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(ary, new applicators_1.PreValueApplicator()));
/**
 * Creates a function that invokes func, with up to n arguments, ignoring any additional arguments.
 * @param {number} n The arity cap.
 * @example
 *
 * class MyClass {
 *   @Ary(1)
 *   fn(...args) {
 *     return args;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn(1, 2, 3, 4); // => [ 1 ]
 */

function Ary(n) {
  return decorator(n);
}

exports.Ary = Ary;
exports.ary = Ary;
exports.default = decorator;
},{"lodash/ary":"node_modules/lodash/ary.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/attempt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var attempt = require("lodash/attempt");

var partial = require("lodash/partial");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var attemptFn = function (fn) {
  return partial(attempt, fn);
};
/**
 * Attempts to invoke func, returning either the result or the caught error object. Any additional arguments are provided to func when it's invoked.
 * @param {...*} [args] The arguments to invoke func with.
 * @example
 *
 * class MyClass {
 *   @Attempt()
 *   fn(value) {
 *     if (typeof value === 'number') {
 *       return value
 *     }
 *
 *     throw new Error();
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn(10); // => 10;
 * myClass.fn(null); // => Error
 */


exports.Attempt = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(attemptFn, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.attempt = exports.Attempt;
exports.default = exports.Attempt;
},{"lodash/attempt":"node_modules/lodash/attempt.js","lodash/partial":"node_modules/lodash/partial.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/before.js":[function(require,module,exports) {
var toInteger = require('./toInteger');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func`, with the `this` binding and arguments
 * of the created function, while it's called less than `n` times. Subsequent
 * calls to the created function return the result of the last `func` invocation.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {number} n The number of calls at which `func` is no longer invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * jQuery(element).on('click', _.before(5, addContactToList));
 * // => Allows adding up to 4 contacts to the list.
 */
function before(n, func) {
  var result;
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  n = toInteger(n);
  return function() {
    if (--n > 0) {
      result = func.apply(this, arguments);
    }
    if (n <= 1) {
      func = undefined;
    }
    return result;
  };
}

module.exports = before;

},{"./toInteger":"node_modules/lodash/toInteger.js"}],"node_modules/lodash-decorators/before.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var before = require("lodash/before");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(before, new applicators_1.PostValueApplicator(), {
  setter: true
}));
/**
 * Creates a function that invokes func, with the this binding and arguments of the created function, while it's called less than n times.
 * Subsequent calls to the created function return the result of the last func invocation.
 * @param {number} n The number of calls at whichc func is no longer invoked.
 * @example
 *
 * let calls = 0;
 *
 * class MyClass {
 *   @Before(3)
 *   fn() {
 *     calls++;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn();
 * myClass.fn();
 * myClass.fn();
 * myClass.fn();
 *
 * calls === 2; // => true
 */

function Before(n) {
  return decorator(n);
}

exports.Before = Before;
exports.before = Before;
exports.default = decorator;
},{"lodash/before":"node_modules/lodash/before.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/beforeAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var before = require("lodash/before");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(before, new applicators_1.PostValueApplicator(), {
  setter: true
}));
/**
 * Creates a function that invokes func, with the this binding and arguments of the created function, while it's called less than n times.
 * Subsequent calls to the created function return the result of the last func invocation.
 * @param {number} n The number of calls at whichc func is no longer invoked.
 * @example
 *
 * let calls = 0;
 *
 * class MyClass {
 *   @BeforeAll(3)
 *   fn() {
 *     calls++;
 *   }
 * }
 *
 * const myClass = new MyClass();
 * const myClass2 = new MyClass();
 *
 * myClass.fn();
 * myClass.fn();
 * myClass.fn();
 * myClass.fn();
 *
 * myClass2.fn();
 *
 * calls === 3; // => true
 */

function BeforeAll(n) {
  return decorator(n);
}

exports.BeforeAll = BeforeAll;
exports.beforeAll = BeforeAll;
exports.default = decorator;
},{"lodash/before":"node_modules/lodash/before.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/bind.js":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    createWrap = require('./_createWrap'),
    getHolder = require('./_getHolder'),
    replaceHolders = require('./_replaceHolders');

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_PARTIAL_FLAG = 32;

/**
 * Creates a function that invokes `func` with the `this` binding of `thisArg`
 * and `partials` prepended to the arguments it receives.
 *
 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for partially applied arguments.
 *
 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
 * property of bound functions.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * function greet(greeting, punctuation) {
 *   return greeting + ' ' + this.user + punctuation;
 * }
 *
 * var object = { 'user': 'fred' };
 *
 * var bound = _.bind(greet, object, 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bind(greet, object, _, '!');
 * bound('hi');
 * // => 'hi fred!'
 */
var bind = baseRest(function(func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG;
  if (partials.length) {
    var holders = replaceHolders(partials, getHolder(bind));
    bitmask |= WRAP_PARTIAL_FLAG;
  }
  return createWrap(func, bitmask, thisArg, partials, holders);
});

// Assign default placeholders.
bind.placeholder = {};

module.exports = bind;

},{"./_baseRest":"node_modules/lodash/_baseRest.js","./_createWrap":"node_modules/lodash/_createWrap.js","./_getHolder":"node_modules/lodash/_getHolder.js","./_replaceHolders":"node_modules/lodash/_replaceHolders.js"}],"node_modules/lodash-decorators/bind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var bind = require("lodash/bind");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Creates a function that invokes func with the this binding of thisArg and partials prepended to the arguments it receives.
 *
 * The _.bind.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for partially applied arguments.
 *
 * Note: Unlike native Function#bind, this method doesn't set the "length" property of bound functions.
 * @param {...*} [partials] The argument to be partially applied.
 * @example
 *
 * class MyClass {
 *   @Bind()
 *   bound() {
 *     return this;
 *   }
 *
 *   unbound() {
 *     return this;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.bound.call(null); // => myClass {}
 * myClass.unbound.call(null); // => null
 */


exports.Bind = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(bind, new applicators_1.BindApplicator(), {
  optionalParams: true
}));
exports.bind = exports.Bind;
exports.default = exports.Bind;
},{"lodash/bind":"node_modules/lodash/bind.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/bindAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var isFunction = require("lodash/isFunction");

var factory_1 = require("./factory");

var bind_1 = require("./bind");
/**
 * Binds methods of an object to the object itself, overwriting the existing method.
 * @export
 * @param {string[]} [methods=[]]
 * @returns {ClassDecorator}
 * @example
 *
 * @BindAll()
 * class MyClass {
 *   bound() {
 *     return this;
 *   }
 *
 *   unbound() {
 *     return this;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.bound.call(null); // => MyClass {}
 * myClass.unbound.call(null); // => MyClass {}
 */


function BindAll(methods) {
  if (methods === void 0) {
    methods = [];
  }

  return function (target) {
    bindAllMethods(target, methods);
  };
}

exports.BindAll = BindAll;
exports.bindAll = BindAll;

function bindAllMethods(target, methods) {
  if (methods === void 0) {
    methods = [];
  }

  var targetProto = target.prototype;
  var proto = target.prototype;
  var boundKeys = [];

  while (proto && proto !== Object.prototype) {
    for (var _i = 0, _a = Object.getOwnPropertyNames(proto); _i < _a.length; _i++) {
      var key = _a[_i];
      var include = methods.length ? methods.indexOf(key) !== -1 : true;
      var descriptor = Object.getOwnPropertyDescriptor(proto, key);

      if (include && key !== 'constructor') {
        // If this property is a getter and it's NOT an instance decorated
        // method, ignore it. Instance decorators are getters until first accessed.
        if (descriptor.get) {
          var chainData = factory_1.InstanceChainMap.get([proto, key]);

          if (!chainData || !chainData.isMethod) {
            continue;
          }
        }

        if (isFunction(proto[key]) && boundKeys.indexOf(key) === -1) {
          Object.defineProperty(targetProto, key, bind_1.Bind(proto, key, descriptor));
          boundKeys.push(key);
        }
      }
    }

    proto = Object.getPrototypeOf(proto);
  }
}

exports.default = BindAll;
},{"lodash/isFunction":"node_modules/lodash/isFunction.js","./factory":"node_modules/lodash-decorators/factory.js","./bind":"node_modules/lodash-decorators/bind.js"}],"node_modules/lodash/curry.js":[function(require,module,exports) {
var createWrap = require('./_createWrap');

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8;

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
}

// Assign default placeholders.
curry.placeholder = {};

module.exports = curry;

},{"./_createWrap":"node_modules/lodash/_createWrap.js"}],"node_modules/lodash-decorators/curry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var curry = require("lodash/curry");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Creates a function that accepts arguments of func and either invokes func returning its result, if at least arity number of arguments have been provided, or returns a function that accepts the remaining func arguments, and so on.
 * The arity of func may be specified if func.length is not sufficient.
 * The original function is bound to the instance. If the method is needed to call in a different context use `CurryAll`.
 *
 * The _.curry.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.
 *
 * Note: This method doesn't set the "length" property of curried functions.
 * @param {number} [arity] The arity of func.
 * @example
 *
 * class MyClass {
 *   multiplier = 2;
 *
 *   @Curry()
 *   add(a, b) {
 *     return (a + b) * this.multiplier;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * const add5 = myClass.add(5);
 *
 * add5AndMultiply(10); // => 30
 */


exports.Curry = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(curry, new applicators_1.PreValueApplicator(), {
  bound: true,
  optionalParams: true
}));
exports.curry = exports.Curry;
exports.default = exports.Curry;
},{"lodash/curry":"node_modules/lodash/curry.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/curryAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var curry = require("lodash/curry");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Creates a function that accepts arguments of func and either invokes func returning its result, if at least arity number of arguments have been provided, or returns a function that accepts the remaining func arguments, and so on.
 * The arity of func may be specified if func.length is not sufficient.
 *
 * The _.curry.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.
 *
 * Note: This method doesn't set the "length" property of curried functions.
 * Note: The original function invoked will not be called in the context of the instance. Use `Curry` to for using it bound.
 * @param {number} [arity] The arity of func.
 * @example
 *
 * class MyClass {
 *   @CurryAll()
 *   add(a, b) {
 *     return (a + b);
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * const add5 = myClass.add(5);
 *
 * add5AndMultiply(10); // => 15
 */


exports.CurryAll = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(curry, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.curryAll = exports.CurryAll;
exports.default = exports.CurryAll;
},{"lodash/curry":"node_modules/lodash/curry.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/curryRight.js":[function(require,module,exports) {
var createWrap = require('./_createWrap');

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_RIGHT_FLAG = 16;

/**
 * This method is like `_.curry` except that arguments are applied to `func`
 * in the manner of `_.partialRight` instead of `_.partial`.
 *
 * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curryRight(abc);
 *
 * curried(3)(2)(1);
 * // => [1, 2, 3]
 *
 * curried(2, 3)(1);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(3)(1, _)(2);
 * // => [1, 2, 3]
 */
function curryRight(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curryRight.placeholder;
  return result;
}

// Assign default placeholders.
curryRight.placeholder = {};

module.exports = curryRight;

},{"./_createWrap":"node_modules/lodash/_createWrap.js"}],"node_modules/lodash-decorators/curryRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var curryRight = require("lodash/curryRight");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * This method is like _.curry except that arguments are applied to func in the manner of _.partialRight instead of _.partial.
 * The arity of func may be specified if func.length is not sufficient.
 * The original function is bound to the instance. If the method is needed to call in a different context use `CurryAll`.
 *
 * The _.curryRight.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.
 *
 * Note: This method doesn't set the "length" property of curried functions.
 * @param {number} [arity] The arity of func.
 * @example
 *
 * class MyClass {
 *   multiplier = 2;
 *
 *   @CurryRight()
 *   add(a, b) {
 *     return (a + b) * this.multiplier;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * const add5 = myClass.add(5);
 *
 * add5AndMultiply(10); // => 30
 */


exports.CurryRight = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(curryRight, new applicators_1.PreValueApplicator(), {
  bound: true,
  optionalParams: true
}));
exports.curryRight = exports.CurryRight;
exports.default = exports.CurryRight;
},{"lodash/curryRight":"node_modules/lodash/curryRight.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/curryRightAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var curryRight = require("lodash/curryRight");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * This method is like _.curry except that arguments are applied to func in the manner of _.partialRight instead of _.partial.
 * The arity of func may be specified if func.length is not sufficient.
 * The original function is bound to the instance. If the method is needed to call in a different context use `CurryAll`.
 *
 * The _.curryRight.placeholder value, which defaults to _ in monolithic builds, may be used as a placeholder for provided arguments.
 *
 * Note: This method doesn't set the "length" property of curried functions.
 * @param {number} [arity] The arity of func.
 * @example
 *
 * class MyClass {
 *   @CurryRightAll()
 *   add(a, b) {
 *     return (a + b);
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * const add5 = myClass.add(5);
 *
 * add5AndMultiply(10); // => 15
 */


exports.CurryRightAll = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(curryRight, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.curryRightAll = exports.CurryRightAll;
exports.default = exports.CurryRightAll;
},{"lodash/curryRight":"node_modules/lodash/curryRight.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/now.js":[function(require,module,exports) {
var root = require('./_root');

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

module.exports = now;

},{"./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/debounce.js":[function(require,module,exports) {
var isObject = require('./isObject'),
    now = require('./now'),
    toNumber = require('./toNumber');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

module.exports = debounce;

},{"./isObject":"node_modules/lodash/isObject.js","./now":"node_modules/lodash/now.js","./toNumber":"node_modules/lodash/toNumber.js"}],"node_modules/lodash-decorators/debounce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var debounce = require("lodash/debounce");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(debounce, new applicators_1.PreValueApplicator(), {
  setter: true
}));
/**
 * Creates a debounced function that delays invoking func until after wait milliseconds have elapsed since the last time the debounced function was invoked.
 * The debounced function comes with a cancel method to cancel delayed func invocations and a flush method to immediately invoke them.
 * Provide options to indicate whether func should be invoked on the leading and/or trailing edge of the wait timeout. The func is invoked with the last arguments provided to the debounced function.
 * Subsequent calls to the debounced function return the result of the last func invocation.
 *
 * Note: If leading and trailing options are true, func is invoked on the trailing edge of the timeout only if the debounced function is invoked more than once during the wait timeout.
 *
 * If wait is 0 and leading is false, func invocation is deferred until to the next tick, similar to setTimeout with a timeout of 0.
 *
 * @param {number} [wait=0] The number in milliseconds to delay.
 * @param {DebounceOptions} [options] The options object.
 * @example
 *
 * class MyClass {
 *   value = 100;
 *
 *   @Debounce(10)
 *   add(a) {
 *     this.value += a;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.add(10);
 * myClass.add(50);
 * myClass.add(20);
 *
 * myClass.value; // => 100;
 *
 * setTimeout(() => {
 *   myClass.value; // => 120;
 * }, 11);
 */

function Debounce(wait, options) {
  return decorator(wait, options);
}

exports.Debounce = Debounce;
exports.debounce = Debounce;
exports.default = decorator;
},{"lodash/debounce":"node_modules/lodash/debounce.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/debounceAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var debounce = require("lodash/debounce");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(debounce, new applicators_1.PreValueApplicator()));
/**
 * Creates a debounced function that delays invoking func until after wait milliseconds have elapsed since the last time the debounced function was invoked.
 * The debounced function comes with a cancel method to cancel delayed func invocations and a flush method to immediately invoke them.
 * Provide options to indicate whether func should be invoked on the leading and/or trailing edge of the wait timeout. The func is invoked with the last arguments provided to the debounced function.
 * Subsequent calls to the debounced function return the result of the last func invocation.
 *
 * The debounce state is shared across all instances of the class.
 *
 * Note: If leading and trailing options are true, func is invoked on the trailing edge of the timeout only if the debounced function is invoked more than once during the wait timeout.
 *
 * If wait is 0 and leading is false, func invocation is deferred until to the next tick, similar to setTimeout with a timeout of 0.
 *
 * @param {number} [wait=0] The number in milliseconds to delay.
 * @param {DebounceOptions} [options] The options object.
 * @example
 *
 * class MyClass {
 *   value = 100;
 *
 *   @DebounceAll(10)
 *   add(a) {
 *     this.value += a;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.add(10);
 * myClass.add(50);
 * myClass.add(20);
 *
 * myClass.value; // => 100;
 *
 * setTimeout(() => {
 *   myClass.value; // => 120;
 * }, 11);
 */

function DebounceAll(wait, options) {
  return decorator(wait, options);
}

exports.DebounceAll = DebounceAll;
exports.debounceAll = DebounceAll;
exports.default = decorator;
},{"lodash/debounce":"node_modules/lodash/debounce.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/_baseDelay.js":[function(require,module,exports) {
/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * The base implementation of `_.delay` and `_.defer` which accepts `args`
 * to provide to `func`.
 *
 * @private
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {Array} args The arguments to provide to `func`.
 * @returns {number|Object} Returns the timer id or timeout object.
 */
function baseDelay(func, wait, args) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  return setTimeout(function() { func.apply(undefined, args); }, wait);
}

module.exports = baseDelay;

},{}],"node_modules/lodash/defer.js":[function(require,module,exports) {
var baseDelay = require('./_baseDelay'),
    baseRest = require('./_baseRest');

/**
 * Defers invoking the `func` until the current call stack has cleared. Any
 * additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to defer.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.defer(function(text) {
 *   console.log(text);
 * }, 'deferred');
 * // => Logs 'deferred' after one millisecond.
 */
var defer = baseRest(function(func, args) {
  return baseDelay(func, 1, args);
});

module.exports = defer;

},{"./_baseDelay":"node_modules/lodash/_baseDelay.js","./_baseRest":"node_modules/lodash/_baseRest.js"}],"node_modules/lodash-decorators/defer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var defer = require("lodash/defer");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Defers invoking the func until the current call stack has cleared. Any additional arguments are provided to func when it's invoked.
 *
 * @param {...*} [args] Additional arguments to invoke the function with
 * @example
 *
 * class MyClass {
 *   value = 100;
 *
 *   @Defer()
 *   add(a) {
 *     this.value += a;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.add(10);
 *
 * myClass.value; // => 100;
 *
 * setTimeout(() => {
 *   myClass.value; // => 110;
 * }, 0);
 */


exports.Defer = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(defer, new applicators_1.InvokeApplicator(), {
  setter: true,
  optionalParams: true
}));
exports.defer = exports.Defer;
exports.default = exports.Defer;
},{"lodash/defer":"node_modules/lodash/defer.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/delay.js":[function(require,module,exports) {
var baseDelay = require('./_baseDelay'),
    baseRest = require('./_baseRest'),
    toNumber = require('./toNumber');

/**
 * Invokes `func` after `wait` milliseconds. Any additional arguments are
 * provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.delay(function(text) {
 *   console.log(text);
 * }, 1000, 'later');
 * // => Logs 'later' after one second.
 */
var delay = baseRest(function(func, wait, args) {
  return baseDelay(func, toNumber(wait) || 0, args);
});

module.exports = delay;

},{"./_baseDelay":"node_modules/lodash/_baseDelay.js","./_baseRest":"node_modules/lodash/_baseRest.js","./toNumber":"node_modules/lodash/toNumber.js"}],"node_modules/lodash-decorators/delay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var delay = require("lodash/delay");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(function (value, wait) {
  var args = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    args[_i - 2] = arguments[_i];
  }

  return function () {
    var invokeArgs = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      invokeArgs[_i] = arguments[_i];
    }

    return delay.apply(void 0, [value.bind(this), wait].concat(invokeArgs, args));
  };
}, new applicators_1.PreValueApplicator(), {
  setter: true
}));
/**
 * Invokes func after wait milliseconds. Any additional arguments are provided to func when it's invoked.
 *
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {...*} [args] Additional arguments to invoke the function with
 * @example
 *
 * class MyClass {
 *   value = 100;
 *
 *   @Delay(20)
 *   add(a) {
 *     this.value += a;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.add(10);
 *
 * myClass.value; // => 100;
 *
 * setTimeout(() => {
 *   myClass.value; // => 110;
 * }, 30);
 */

function Delay(wait) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  return decorator.apply(void 0, [wait].concat(args));
}

exports.Delay = Delay;
exports.delay = Delay;
exports.default = decorator;
},{"lodash/delay":"node_modules/lodash/delay.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/flip.js":[function(require,module,exports) {
var createWrap = require('./_createWrap');

/** Used to compose bitmasks for function metadata. */
var WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that invokes `func` with arguments reversed.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to flip arguments for.
 * @returns {Function} Returns the new flipped function.
 * @example
 *
 * var flipped = _.flip(function() {
 *   return _.toArray(arguments);
 * });
 *
 * flipped('a', 'b', 'c', 'd');
 * // => ['d', 'c', 'b', 'a']
 */
function flip(func) {
  return createWrap(func, WRAP_FLIP_FLAG);
}

module.exports = flip;

},{"./_createWrap":"node_modules/lodash/_createWrap.js"}],"node_modules/lodash-decorators/flip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var flip = require("lodash/flip");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flip, new applicators_1.PartialValueApplicator(), {
  property: true
}));
/**
 * Creates a function that invokes func with arguments reversed. Honestly, there is probably not much
 * use for this decorator but maybe you will find one?
 *
 * @example
 *
 * class MyClass {
 *   value = 100;
 *
 *   @Flip('fn')
 *   fn2: (b: number, a: string) => [ number, string ];
 *
 *   fn(a: string, b: number): [ string, number ] {
 *     return [ a, b ];
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn2(10, '20'); // => [ '20', 10 ]
 */

function Flip(fn) {
  return decorator(fn);
}

exports.Flip = Flip;
exports.flip = Flip;
exports.default = decorator;
},{"lodash/flip":"node_modules/lodash/flip.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/_arrayPush.js":[function(require,module,exports) {
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;

},{}],"node_modules/lodash/_isFlattenable.js":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray');

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;

},{"./_Symbol":"node_modules/lodash/_Symbol.js","./isArguments":"node_modules/lodash/isArguments.js","./isArray":"node_modules/lodash/isArray.js"}],"node_modules/lodash/_baseFlatten.js":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    isFlattenable = require('./_isFlattenable');

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;

},{"./_arrayPush":"node_modules/lodash/_arrayPush.js","./_isFlattenable":"node_modules/lodash/_isFlattenable.js"}],"node_modules/lodash/flatten.js":[function(require,module,exports) {
var baseFlatten = require('./_baseFlatten');

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;

},{"./_baseFlatten":"node_modules/lodash/_baseFlatten.js"}],"node_modules/lodash/_flatRest.js":[function(require,module,exports) {
var flatten = require('./flatten'),
    overRest = require('./_overRest'),
    setToString = require('./_setToString');

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;

},{"./flatten":"node_modules/lodash/flatten.js","./_overRest":"node_modules/lodash/_overRest.js","./_setToString":"node_modules/lodash/_setToString.js"}],"node_modules/lodash/_createFlow.js":[function(require,module,exports) {
var LodashWrapper = require('./_LodashWrapper'),
    flatRest = require('./_flatRest'),
    getData = require('./_getData'),
    getFuncName = require('./_getFuncName'),
    isArray = require('./isArray'),
    isLaziable = require('./_isLaziable');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */
function createFlow(fromRight) {
  return flatRest(function(funcs) {
    var length = funcs.length,
        index = length,
        prereq = LodashWrapper.prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
        var wrapper = new LodashWrapper([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];

      var funcName = getFuncName(func),
          data = funcName == 'wrapper' ? getData(func) : undefined;

      if (data && isLaziable(data[0]) &&
            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
            !data[4].length && data[9] == 1
          ) {
        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = (func.length == 1 && isLaziable(func))
          ? wrapper[funcName]()
          : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && isArray(value)) {
        return wrapper.plant(value).value();
      }
      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }
      return result;
    };
  });
}

module.exports = createFlow;

},{"./_LodashWrapper":"node_modules/lodash/_LodashWrapper.js","./_flatRest":"node_modules/lodash/_flatRest.js","./_getData":"node_modules/lodash/_getData.js","./_getFuncName":"node_modules/lodash/_getFuncName.js","./isArray":"node_modules/lodash/isArray.js","./_isLaziable":"node_modules/lodash/_isLaziable.js"}],"node_modules/lodash/flow.js":[function(require,module,exports) {
var createFlow = require('./_createFlow');

/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = createFlow();

module.exports = flow;

},{"./_createFlow":"node_modules/lodash/_createFlow.js"}],"node_modules/lodash-decorators/flow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var flow = require("lodash/flow");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flow, new applicators_1.ComposeApplicator({
  post: true
}), {
  property: true
}));
/**
 * Creates a function that returns the result of invoking the given functions with the this binding of the created function,
 * where each successive invocation is supplied the return value of the previous.
 *
 * @example
 *
 * class MyClass {
 *   name = 'Ted';
 *
 *   @Flow('getName', toUpperCase)
 *   getUpperCaseName: () => string;
 *
 *   getName() {
 *     return this.name;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.getUpperCaseName(); // => 'TED'
 */

function Flow() {
  var fns = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }

  return decorator.apply(void 0, fns);
}

exports.Flow = Flow;
exports.flow = Flow;
exports.default = decorator;
},{"lodash/flow":"node_modules/lodash/flow.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/flowRight.js":[function(require,module,exports) {
var createFlow = require('./_createFlow');

/**
 * This method is like `_.flow` except that it creates a function that
 * invokes the given functions from right to left.
 *
 * @static
 * @since 3.0.0
 * @memberOf _
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flow
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flowRight([square, _.add]);
 * addSquare(1, 2);
 * // => 9
 */
var flowRight = createFlow(true);

module.exports = flowRight;

},{"./_createFlow":"node_modules/lodash/_createFlow.js"}],"node_modules/lodash-decorators/flowRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var flowRight = require("lodash/flowRight");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(flowRight, new applicators_1.ComposeApplicator({
  post: false
}), {
  property: true
}));
/**
 * Creates a function that returns the result of invoking the given functions with the this binding of the created function,
 * where each successive invocation is supplied the return value of the previous.
 *
 * @example
 *
 * class MyClass {
 *   name = 'Ted';
 *
 *   @FlowRight(toUpperCase, 'getName')
 *   getUpperCaseName: () => string;
 *
 *   getName() {
 *     return this.name;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.getUpperCaseName(); // => 'TED'
 */

function FlowRight() {
  var fns = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }

  return decorator.apply(void 0, fns);
}

exports.FlowRight = FlowRight;
exports.flowRight = FlowRight;
exports.default = decorator;
},{"lodash/flowRight":"node_modules/lodash/flowRight.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/memoize.js":[function(require,module,exports) {
var MapCache = require('./_MapCache');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;

},{"./_MapCache":"node_modules/lodash/_MapCache.js"}],"node_modules/lodash-decorators/memoize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var memoize = require("lodash/memoize");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Creates a function that memoizes the result of func. If resolver is provided,
 * it determines the cache key for storing the result based on the arguments provided to the memoized function.
 * By default, the first argument provided to the memoized function is used as the map cache key.
 * The func is invoked with the this binding of the memoized function.
 *
 * You can use a Function or a string that references a method on the class as the resolver.
 * You can also use a configuration object that lets provide a prexisting cache or specify
 * the map type to use.
 *
 * @example
 *
 * class MyClass {
 *   @Memoize({ type: WeakMap })
 *   getName(item) {
 *     return item.name;
 *   }
 *
 *   @Memoize('getName')
 *   getLastName(item) {
 *     return item.lastName;
 *   }
 * }
 */


exports.Memoize = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(memoize, new applicators_1.MemoizeApplicator(), {
  optionalParams: true
}));
exports.memoize = exports.Memoize;
exports.default = exports.Memoize;
},{"lodash/memoize":"node_modules/lodash/memoize.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/memoizeAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var memoize = require("lodash/memoize");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Memoizes a function on the prototype instead of the instance. All instances of the class use the same memoize cache.
 * @param {Function} [resolver] Optional resolver
 */


exports.MemoizeAll = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(memoize, new applicators_1.MemoizeApplicator(), {
  optionalParams: true
}));
exports.memoizeAll = exports.MemoizeAll;
exports.default = exports.MemoizeAll;
},{"lodash/memoize":"node_modules/lodash/memoize.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/_baseAssignValue.js":[function(require,module,exports) {
var defineProperty = require('./_defineProperty');

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;

},{"./_defineProperty":"node_modules/lodash/_defineProperty.js"}],"node_modules/lodash/_assignValue.js":[function(require,module,exports) {
var baseAssignValue = require('./_baseAssignValue'),
    eq = require('./eq');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;

},{"./_baseAssignValue":"node_modules/lodash/_baseAssignValue.js","./eq":"node_modules/lodash/eq.js"}],"node_modules/lodash/_copyObject.js":[function(require,module,exports) {
var assignValue = require('./_assignValue'),
    baseAssignValue = require('./_baseAssignValue');

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;

},{"./_assignValue":"node_modules/lodash/_assignValue.js","./_baseAssignValue":"node_modules/lodash/_baseAssignValue.js"}],"node_modules/lodash/_isIterateeCall.js":[function(require,module,exports) {
var eq = require('./eq'),
    isArrayLike = require('./isArrayLike'),
    isIndex = require('./_isIndex'),
    isObject = require('./isObject');

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;

},{"./eq":"node_modules/lodash/eq.js","./isArrayLike":"node_modules/lodash/isArrayLike.js","./_isIndex":"node_modules/lodash/_isIndex.js","./isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash/_createAssigner.js":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    isIterateeCall = require('./_isIterateeCall');

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;

},{"./_baseRest":"node_modules/lodash/_baseRest.js","./_isIterateeCall":"node_modules/lodash/_isIterateeCall.js"}],"node_modules/lodash/assign.js":[function(require,module,exports) {
var assignValue = require('./_assignValue'),
    copyObject = require('./_copyObject'),
    createAssigner = require('./_createAssigner'),
    isArrayLike = require('./isArrayLike'),
    isPrototype = require('./_isPrototype'),
    keys = require('./keys');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;

},{"./_assignValue":"node_modules/lodash/_assignValue.js","./_copyObject":"node_modules/lodash/_copyObject.js","./_createAssigner":"node_modules/lodash/_createAssigner.js","./isArrayLike":"node_modules/lodash/isArrayLike.js","./_isPrototype":"node_modules/lodash/_isPrototype.js","./keys":"node_modules/lodash/keys.js"}],"node_modules/lodash-decorators/mixin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var assign = require("lodash/assign");
/**
 * Mixins an object into the classes prototype.
 * @export
 * @param {...Object[]} srcs
 * @returns {ClassDecorator}
 * @example
 *
 * const myMixin = {
 *   blorg: () => 'blorg!'
 * }
 *
 * @Mixin(myMixin)
 * class MyClass {}
 *
 * const myClass = new MyClass();
 *
 * myClass.blorg(); // => 'blorg!'
 */


function Mixin() {
  var srcs = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    srcs[_i] = arguments[_i];
  }

  return function (target) {
    assign.apply(void 0, [target.prototype].concat(srcs));
    return target;
  };
}

exports.Mixin = Mixin;
exports.mixin = Mixin;
exports.default = Mixin;
},{"lodash/assign":"node_modules/lodash/assign.js"}],"node_modules/lodash/negate.js":[function(require,module,exports) {
/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that negates the result of the predicate `func`. The
 * `func` predicate is invoked with the `this` binding and arguments of the
 * created function.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} predicate The predicate to negate.
 * @returns {Function} Returns the new negated function.
 * @example
 *
 * function isEven(n) {
 *   return n % 2 == 0;
 * }
 *
 * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
 * // => [1, 3, 5]
 */
function negate(predicate) {
  if (typeof predicate != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  return function() {
    var args = arguments;
    switch (args.length) {
      case 0: return !predicate.call(this);
      case 1: return !predicate.call(this, args[0]);
      case 2: return !predicate.call(this, args[0], args[1]);
      case 3: return !predicate.call(this, args[0], args[1], args[2]);
    }
    return !predicate.apply(this, args);
  };
}

module.exports = negate;

},{}],"node_modules/lodash-decorators/negate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var negate = require("lodash/negate");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Negates a functions result or, when used on a property, creates a function that
 * negates the result of a provided function.
 * @param {ResolvableFunction} [fn] A resolvable function.
 * @example
 * class MyClass {
 *   @Negate('fn')
 *   fn2: () => boolean;
 *
 *   fn(): boolean {
 *     return true;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn2(); //=> false
 */


exports.Negate = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(negate, new applicators_1.PartialValueApplicator(), {
  property: true,
  optionalParams: true
}));
exports.negate = exports.Negate;
exports.default = exports.Negate;
},{"lodash/negate":"node_modules/lodash/negate.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/once.js":[function(require,module,exports) {
var before = require('./before');

/**
 * Creates a function that is restricted to invoking `func` once. Repeat calls
 * to the function return the value of the first invocation. The `func` is
 * invoked with the `this` binding and arguments of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var initialize = _.once(createApplication);
 * initialize();
 * initialize();
 * // => `createApplication` is invoked once
 */
function once(func) {
  return before(2, func);
}

module.exports = once;

},{"./before":"node_modules/lodash/before.js"}],"node_modules/lodash-decorators/once.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var once = require("lodash/once");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");
/**
 * Creates a function that is restricted to invoking func once. Repeat calls to the function return the value of the first invocation.
 * @example
 * class MyClass {
 *   value: number = 0;
 *
 *   @Once()
 *   fn(): number {
 *     return ++this.value;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn(); //=> 1
 * myClass.fn(); //=> 1
 * myClass.fn(); //=> 1
 */


exports.Once = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(once, new applicators_1.PreValueApplicator(), {
  setter: true,
  optionalParams: true
}));
exports.once = exports.Once;
exports.default = exports.Once;
},{"lodash/once":"node_modules/lodash/once.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/_stackClear.js":[function(require,module,exports) {
var ListCache = require('./_ListCache');

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;

},{"./_ListCache":"node_modules/lodash/_ListCache.js"}],"node_modules/lodash/_stackDelete.js":[function(require,module,exports) {
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;

},{}],"node_modules/lodash/_stackGet.js":[function(require,module,exports) {
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;

},{}],"node_modules/lodash/_stackHas.js":[function(require,module,exports) {
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;

},{}],"node_modules/lodash/_stackSet.js":[function(require,module,exports) {
var ListCache = require('./_ListCache'),
    Map = require('./_Map'),
    MapCache = require('./_MapCache');

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;

},{"./_ListCache":"node_modules/lodash/_ListCache.js","./_Map":"node_modules/lodash/_Map.js","./_MapCache":"node_modules/lodash/_MapCache.js"}],"node_modules/lodash/_Stack.js":[function(require,module,exports) {
var ListCache = require('./_ListCache'),
    stackClear = require('./_stackClear'),
    stackDelete = require('./_stackDelete'),
    stackGet = require('./_stackGet'),
    stackHas = require('./_stackHas'),
    stackSet = require('./_stackSet');

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;

},{"./_ListCache":"node_modules/lodash/_ListCache.js","./_stackClear":"node_modules/lodash/_stackClear.js","./_stackDelete":"node_modules/lodash/_stackDelete.js","./_stackGet":"node_modules/lodash/_stackGet.js","./_stackHas":"node_modules/lodash/_stackHas.js","./_stackSet":"node_modules/lodash/_stackSet.js"}],"node_modules/lodash/_arraySome.js":[function(require,module,exports) {
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;

},{}],"node_modules/lodash/_equalArrays.js":[function(require,module,exports) {
var SetCache = require('./_SetCache'),
    arraySome = require('./_arraySome'),
    cacheHas = require('./_cacheHas');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;

},{"./_SetCache":"node_modules/lodash/_SetCache.js","./_arraySome":"node_modules/lodash/_arraySome.js","./_cacheHas":"node_modules/lodash/_cacheHas.js"}],"node_modules/lodash/_Uint8Array.js":[function(require,module,exports) {
var root = require('./_root');

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;

},{"./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_mapToArray.js":[function(require,module,exports) {
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;

},{}],"node_modules/lodash/_setToArray.js":[function(require,module,exports) {
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;

},{}],"node_modules/lodash/_equalByTag.js":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    Uint8Array = require('./_Uint8Array'),
    eq = require('./eq'),
    equalArrays = require('./_equalArrays'),
    mapToArray = require('./_mapToArray'),
    setToArray = require('./_setToArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;

},{"./_Symbol":"node_modules/lodash/_Symbol.js","./_Uint8Array":"node_modules/lodash/_Uint8Array.js","./eq":"node_modules/lodash/eq.js","./_equalArrays":"node_modules/lodash/_equalArrays.js","./_mapToArray":"node_modules/lodash/_mapToArray.js","./_setToArray":"node_modules/lodash/_setToArray.js"}],"node_modules/lodash/_baseGetAllKeys.js":[function(require,module,exports) {
var arrayPush = require('./_arrayPush'),
    isArray = require('./isArray');

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;

},{"./_arrayPush":"node_modules/lodash/_arrayPush.js","./isArray":"node_modules/lodash/isArray.js"}],"node_modules/lodash/_arrayFilter.js":[function(require,module,exports) {
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;

},{}],"node_modules/lodash/stubArray.js":[function(require,module,exports) {
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;

},{}],"node_modules/lodash/_getSymbols.js":[function(require,module,exports) {
var arrayFilter = require('./_arrayFilter'),
    stubArray = require('./stubArray');

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;

},{"./_arrayFilter":"node_modules/lodash/_arrayFilter.js","./stubArray":"node_modules/lodash/stubArray.js"}],"node_modules/lodash/_getAllKeys.js":[function(require,module,exports) {
var baseGetAllKeys = require('./_baseGetAllKeys'),
    getSymbols = require('./_getSymbols'),
    keys = require('./keys');

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;

},{"./_baseGetAllKeys":"node_modules/lodash/_baseGetAllKeys.js","./_getSymbols":"node_modules/lodash/_getSymbols.js","./keys":"node_modules/lodash/keys.js"}],"node_modules/lodash/_equalObjects.js":[function(require,module,exports) {
var getAllKeys = require('./_getAllKeys');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;

},{"./_getAllKeys":"node_modules/lodash/_getAllKeys.js"}],"node_modules/lodash/_DataView.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;

},{"./_getNative":"node_modules/lodash/_getNative.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_Promise.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;

},{"./_getNative":"node_modules/lodash/_getNative.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_Set.js":[function(require,module,exports) {
var getNative = require('./_getNative'),
    root = require('./_root');

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;

},{"./_getNative":"node_modules/lodash/_getNative.js","./_root":"node_modules/lodash/_root.js"}],"node_modules/lodash/_getTag.js":[function(require,module,exports) {
var DataView = require('./_DataView'),
    Map = require('./_Map'),
    Promise = require('./_Promise'),
    Set = require('./_Set'),
    WeakMap = require('./_WeakMap'),
    baseGetTag = require('./_baseGetTag'),
    toSource = require('./_toSource');

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;

},{"./_DataView":"node_modules/lodash/_DataView.js","./_Map":"node_modules/lodash/_Map.js","./_Promise":"node_modules/lodash/_Promise.js","./_Set":"node_modules/lodash/_Set.js","./_WeakMap":"node_modules/lodash/_WeakMap.js","./_baseGetTag":"node_modules/lodash/_baseGetTag.js","./_toSource":"node_modules/lodash/_toSource.js"}],"node_modules/lodash/_baseIsEqualDeep.js":[function(require,module,exports) {
var Stack = require('./_Stack'),
    equalArrays = require('./_equalArrays'),
    equalByTag = require('./_equalByTag'),
    equalObjects = require('./_equalObjects'),
    getTag = require('./_getTag'),
    isArray = require('./isArray'),
    isBuffer = require('./isBuffer'),
    isTypedArray = require('./isTypedArray');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;

},{"./_Stack":"node_modules/lodash/_Stack.js","./_equalArrays":"node_modules/lodash/_equalArrays.js","./_equalByTag":"node_modules/lodash/_equalByTag.js","./_equalObjects":"node_modules/lodash/_equalObjects.js","./_getTag":"node_modules/lodash/_getTag.js","./isArray":"node_modules/lodash/isArray.js","./isBuffer":"node_modules/lodash/isBuffer.js","./isTypedArray":"node_modules/lodash/isTypedArray.js"}],"node_modules/lodash/_baseIsEqual.js":[function(require,module,exports) {
var baseIsEqualDeep = require('./_baseIsEqualDeep'),
    isObjectLike = require('./isObjectLike');

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;

},{"./_baseIsEqualDeep":"node_modules/lodash/_baseIsEqualDeep.js","./isObjectLike":"node_modules/lodash/isObjectLike.js"}],"node_modules/lodash/_baseIsMatch.js":[function(require,module,exports) {
var Stack = require('./_Stack'),
    baseIsEqual = require('./_baseIsEqual');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;

},{"./_Stack":"node_modules/lodash/_Stack.js","./_baseIsEqual":"node_modules/lodash/_baseIsEqual.js"}],"node_modules/lodash/_isStrictComparable.js":[function(require,module,exports) {
var isObject = require('./isObject');

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;

},{"./isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash/_getMatchData.js":[function(require,module,exports) {
var isStrictComparable = require('./_isStrictComparable'),
    keys = require('./keys');

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;

},{"./_isStrictComparable":"node_modules/lodash/_isStrictComparable.js","./keys":"node_modules/lodash/keys.js"}],"node_modules/lodash/_matchesStrictComparable.js":[function(require,module,exports) {
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;

},{}],"node_modules/lodash/_baseMatches.js":[function(require,module,exports) {
var baseIsMatch = require('./_baseIsMatch'),
    getMatchData = require('./_getMatchData'),
    matchesStrictComparable = require('./_matchesStrictComparable');

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;

},{"./_baseIsMatch":"node_modules/lodash/_baseIsMatch.js","./_getMatchData":"node_modules/lodash/_getMatchData.js","./_matchesStrictComparable":"node_modules/lodash/_matchesStrictComparable.js"}],"node_modules/lodash/_isKey.js":[function(require,module,exports) {
var isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;

},{"./isArray":"node_modules/lodash/isArray.js","./isSymbol":"node_modules/lodash/isSymbol.js"}],"node_modules/lodash/_memoizeCapped.js":[function(require,module,exports) {
var memoize = require('./memoize');

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;

},{"./memoize":"node_modules/lodash/memoize.js"}],"node_modules/lodash/_stringToPath.js":[function(require,module,exports) {
var memoizeCapped = require('./_memoizeCapped');

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;

},{"./_memoizeCapped":"node_modules/lodash/_memoizeCapped.js"}],"node_modules/lodash/_baseToString.js":[function(require,module,exports) {
var Symbol = require('./_Symbol'),
    arrayMap = require('./_arrayMap'),
    isArray = require('./isArray'),
    isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;

},{"./_Symbol":"node_modules/lodash/_Symbol.js","./_arrayMap":"node_modules/lodash/_arrayMap.js","./isArray":"node_modules/lodash/isArray.js","./isSymbol":"node_modules/lodash/isSymbol.js"}],"node_modules/lodash/toString.js":[function(require,module,exports) {
var baseToString = require('./_baseToString');

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;

},{"./_baseToString":"node_modules/lodash/_baseToString.js"}],"node_modules/lodash/_castPath.js":[function(require,module,exports) {
var isArray = require('./isArray'),
    isKey = require('./_isKey'),
    stringToPath = require('./_stringToPath'),
    toString = require('./toString');

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;

},{"./isArray":"node_modules/lodash/isArray.js","./_isKey":"node_modules/lodash/_isKey.js","./_stringToPath":"node_modules/lodash/_stringToPath.js","./toString":"node_modules/lodash/toString.js"}],"node_modules/lodash/_toKey.js":[function(require,module,exports) {
var isSymbol = require('./isSymbol');

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;

},{"./isSymbol":"node_modules/lodash/isSymbol.js"}],"node_modules/lodash/_baseGet.js":[function(require,module,exports) {
var castPath = require('./_castPath'),
    toKey = require('./_toKey');

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;

},{"./_castPath":"node_modules/lodash/_castPath.js","./_toKey":"node_modules/lodash/_toKey.js"}],"node_modules/lodash/get.js":[function(require,module,exports) {
var baseGet = require('./_baseGet');

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;

},{"./_baseGet":"node_modules/lodash/_baseGet.js"}],"node_modules/lodash/_baseHasIn.js":[function(require,module,exports) {
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;

},{}],"node_modules/lodash/_hasPath.js":[function(require,module,exports) {
var castPath = require('./_castPath'),
    isArguments = require('./isArguments'),
    isArray = require('./isArray'),
    isIndex = require('./_isIndex'),
    isLength = require('./isLength'),
    toKey = require('./_toKey');

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;

},{"./_castPath":"node_modules/lodash/_castPath.js","./isArguments":"node_modules/lodash/isArguments.js","./isArray":"node_modules/lodash/isArray.js","./_isIndex":"node_modules/lodash/_isIndex.js","./isLength":"node_modules/lodash/isLength.js","./_toKey":"node_modules/lodash/_toKey.js"}],"node_modules/lodash/hasIn.js":[function(require,module,exports) {
var baseHasIn = require('./_baseHasIn'),
    hasPath = require('./_hasPath');

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;

},{"./_baseHasIn":"node_modules/lodash/_baseHasIn.js","./_hasPath":"node_modules/lodash/_hasPath.js"}],"node_modules/lodash/_baseMatchesProperty.js":[function(require,module,exports) {
var baseIsEqual = require('./_baseIsEqual'),
    get = require('./get'),
    hasIn = require('./hasIn'),
    isKey = require('./_isKey'),
    isStrictComparable = require('./_isStrictComparable'),
    matchesStrictComparable = require('./_matchesStrictComparable'),
    toKey = require('./_toKey');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;

},{"./_baseIsEqual":"node_modules/lodash/_baseIsEqual.js","./get":"node_modules/lodash/get.js","./hasIn":"node_modules/lodash/hasIn.js","./_isKey":"node_modules/lodash/_isKey.js","./_isStrictComparable":"node_modules/lodash/_isStrictComparable.js","./_matchesStrictComparable":"node_modules/lodash/_matchesStrictComparable.js","./_toKey":"node_modules/lodash/_toKey.js"}],"node_modules/lodash/_baseProperty.js":[function(require,module,exports) {
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;

},{}],"node_modules/lodash/_basePropertyDeep.js":[function(require,module,exports) {
var baseGet = require('./_baseGet');

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;

},{"./_baseGet":"node_modules/lodash/_baseGet.js"}],"node_modules/lodash/property.js":[function(require,module,exports) {
var baseProperty = require('./_baseProperty'),
    basePropertyDeep = require('./_basePropertyDeep'),
    isKey = require('./_isKey'),
    toKey = require('./_toKey');

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;

},{"./_baseProperty":"node_modules/lodash/_baseProperty.js","./_basePropertyDeep":"node_modules/lodash/_basePropertyDeep.js","./_isKey":"node_modules/lodash/_isKey.js","./_toKey":"node_modules/lodash/_toKey.js"}],"node_modules/lodash/_baseIteratee.js":[function(require,module,exports) {
var baseMatches = require('./_baseMatches'),
    baseMatchesProperty = require('./_baseMatchesProperty'),
    identity = require('./identity'),
    isArray = require('./isArray'),
    property = require('./property');

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;

},{"./_baseMatches":"node_modules/lodash/_baseMatches.js","./_baseMatchesProperty":"node_modules/lodash/_baseMatchesProperty.js","./identity":"node_modules/lodash/identity.js","./isArray":"node_modules/lodash/isArray.js","./property":"node_modules/lodash/property.js"}],"node_modules/lodash/_castRest.js":[function(require,module,exports) {
var baseRest = require('./_baseRest');

/**
 * A `baseRest` alias which can be replaced with `identity` by module
 * replacement plugins.
 *
 * @private
 * @type {Function}
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
var castRest = baseRest;

module.exports = castRest;

},{"./_baseRest":"node_modules/lodash/_baseRest.js"}],"node_modules/lodash/overArgs.js":[function(require,module,exports) {
var apply = require('./_apply'),
    arrayMap = require('./_arrayMap'),
    baseFlatten = require('./_baseFlatten'),
    baseIteratee = require('./_baseIteratee'),
    baseRest = require('./_baseRest'),
    baseUnary = require('./_baseUnary'),
    castRest = require('./_castRest'),
    isArray = require('./isArray');

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Creates a function that invokes `func` with its arguments transformed.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Function
 * @param {Function} func The function to wrap.
 * @param {...(Function|Function[])} [transforms=[_.identity]]
 *  The argument transforms.
 * @returns {Function} Returns the new function.
 * @example
 *
 * function doubled(n) {
 *   return n * 2;
 * }
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var func = _.overArgs(function(x, y) {
 *   return [x, y];
 * }, [square, doubled]);
 *
 * func(9, 3);
 * // => [81, 6]
 *
 * func(10, 5);
 * // => [100, 10]
 */
var overArgs = castRest(function(func, transforms) {
  transforms = (transforms.length == 1 && isArray(transforms[0]))
    ? arrayMap(transforms[0], baseUnary(baseIteratee))
    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));

  var funcsLength = transforms.length;
  return baseRest(function(args) {
    var index = -1,
        length = nativeMin(args.length, funcsLength);

    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }
    return apply(func, this, args);
  });
});

module.exports = overArgs;

},{"./_apply":"node_modules/lodash/_apply.js","./_arrayMap":"node_modules/lodash/_arrayMap.js","./_baseFlatten":"node_modules/lodash/_baseFlatten.js","./_baseIteratee":"node_modules/lodash/_baseIteratee.js","./_baseRest":"node_modules/lodash/_baseRest.js","./_baseUnary":"node_modules/lodash/_baseUnary.js","./_castRest":"node_modules/lodash/_castRest.js","./isArray":"node_modules/lodash/isArray.js"}],"node_modules/lodash-decorators/overArgs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var overArgs = require("lodash/overArgs");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(overArgs, new applicators_1.PreValueApplicator(), {
  setter: true
}));
/**
 * Creates a function that invokes func with its arguments transformed.
 * @export
 * @param {...Function[]} transforms
 * @returns {LodashMethodDecorator}
 * @example
 * class MyClass {
 *   @OverArgs(_.castArray)
 *   fn(list) {
 *     return list;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn([ 1 ]); //=> [ 1 ];
 * myClass.fn(1); //=> [ 1 ];
 */

function OverArgs() {
  var transforms = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    transforms[_i] = arguments[_i];
  }

  return decorator.apply(void 0, transforms);
}

exports.OverArgs = OverArgs;
exports.overArgs = OverArgs;
exports.default = decorator;
},{"lodash/overArgs":"node_modules/lodash/overArgs.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/partial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var partial = require("lodash/partial");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(partial, new applicators_1.PartialApplicator(), {
  property: true,
  method: false
}));
/**
 * Partially applies arguments to a function.
 * @export
 * @param {...any[]} partials
 * @returns {PropertyDecorator}
 * @example
 * class MyClass {
 *   lastName: string = 'Schmo';
 *
 *   @Partial('fn', 'Joe')
 *   fn2: () => string;
 *
 *   fn(name: string): string {
 *     return `${name} ${this.lastName}`;
 *   }
 * }
 *
 * const myClass = new MyClass();
 *
 * myClass.fn2(); //=> 'Joe Schmo'
 */

function Partial() {
  var partials = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    partials[_i] = arguments[_i];
  }

  return decorator.apply(void 0, partials);
}

exports.Partial = Partial;
exports.partial = Partial;
exports.default = decorator;
},{"lodash/partial":"node_modules/lodash/partial.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/partialRight.js":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    createWrap = require('./_createWrap'),
    getHolder = require('./_getHolder'),
    replaceHolders = require('./_replaceHolders');

/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * This method is like `_.partial` except that partially applied arguments
 * are appended to the arguments it receives.
 *
 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var greetFred = _.partialRight(greet, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 *
 * // Partially applied with placeholders.
 * var sayHelloTo = _.partialRight(greet, 'hello', _);
 * sayHelloTo('fred');
 * // => 'hello fred'
 */
var partialRight = baseRest(function(func, partials) {
  var holders = replaceHolders(partials, getHolder(partialRight));
  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partialRight.placeholder = {};

module.exports = partialRight;

},{"./_baseRest":"node_modules/lodash/_baseRest.js","./_createWrap":"node_modules/lodash/_createWrap.js","./_getHolder":"node_modules/lodash/_getHolder.js","./_replaceHolders":"node_modules/lodash/_replaceHolders.js"}],"node_modules/lodash-decorators/partialRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var partialRight = require("lodash/partialRight");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(partialRight, new applicators_1.PartialApplicator(), {
  property: true,
  method: false
}));

function PartialRight() {
  var partials = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    partials[_i] = arguments[_i];
  }

  return decorator.apply(void 0, partials);
}

exports.PartialRight = PartialRight;
exports.partialRight = PartialRight;
exports.default = decorator;
},{"lodash/partialRight":"node_modules/lodash/partialRight.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/rearg.js":[function(require,module,exports) {
var createWrap = require('./_createWrap'),
    flatRest = require('./_flatRest');

/** Used to compose bitmasks for function metadata. */
var WRAP_REARG_FLAG = 256;

/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */
var rearg = flatRest(function(func, indexes) {
  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});

module.exports = rearg;

},{"./_createWrap":"node_modules/lodash/_createWrap.js","./_flatRest":"node_modules/lodash/_flatRest.js"}],"node_modules/lodash-decorators/rearg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var rearg = require("lodash/rearg");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(rearg, new applicators_1.PartialValueApplicator(), {
  property: true
}));

function Rearg(indexes) {
  var args = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    args[_i - 1] = arguments[_i];
  }

  return decorator.apply(void 0, [indexes].concat(args));
}

exports.Rearg = Rearg;
exports.rearg = Rearg;
exports.default = decorator;
},{"lodash/rearg":"node_modules/lodash/rearg.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/rest.js":[function(require,module,exports) {
var baseRest = require('./_baseRest'),
    toInteger = require('./toInteger');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * created function and arguments from `start` and beyond provided as
 * an array.
 *
 * **Note:** This method is based on the
 * [rest parameter](https://mdn.io/rest_parameters).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.rest(function(what, names) {
 *   return what + ' ' + _.initial(names).join(', ') +
 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
 * });
 *
 * say('hello', 'fred', 'barney', 'pebbles');
 * // => 'hello fred, barney, & pebbles'
 */
function rest(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  start = start === undefined ? start : toInteger(start);
  return baseRest(func, start);
}

module.exports = rest;

},{"./_baseRest":"node_modules/lodash/_baseRest.js","./toInteger":"node_modules/lodash/toInteger.js"}],"node_modules/lodash-decorators/rest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var rest = require("lodash/rest");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

exports.Rest = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(rest, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.rest = exports.Rest;
exports.default = exports.Rest;
},{"lodash/rest":"node_modules/lodash/rest.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/_baseSlice.js":[function(require,module,exports) {
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;

},{}],"node_modules/lodash/_castSlice.js":[function(require,module,exports) {
var baseSlice = require('./_baseSlice');

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

module.exports = castSlice;

},{"./_baseSlice":"node_modules/lodash/_baseSlice.js"}],"node_modules/lodash/spread.js":[function(require,module,exports) {
var apply = require('./_apply'),
    arrayPush = require('./_arrayPush'),
    baseRest = require('./_baseRest'),
    castSlice = require('./_castSlice'),
    toInteger = require('./toInteger');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * create function and an array of arguments much like
 * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
 *
 * **Note:** This method is based on the
 * [spread operator](https://mdn.io/spread_operator).
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Function
 * @param {Function} func The function to spread arguments over.
 * @param {number} [start=0] The start position of the spread.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.spread(function(who, what) {
 *   return who + ' says ' + what;
 * });
 *
 * say(['fred', 'hello']);
 * // => 'fred says hello'
 *
 * var numbers = Promise.all([
 *   Promise.resolve(40),
 *   Promise.resolve(36)
 * ]);
 *
 * numbers.then(_.spread(function(x, y) {
 *   return x + y;
 * }));
 * // => a Promise of 76
 */
function spread(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  start = start == null ? 0 : nativeMax(toInteger(start), 0);
  return baseRest(function(args) {
    var array = args[start],
        otherArgs = castSlice(args, 0, start);

    if (array) {
      arrayPush(otherArgs, array);
    }
    return apply(func, this, otherArgs);
  });
}

module.exports = spread;

},{"./_apply":"node_modules/lodash/_apply.js","./_arrayPush":"node_modules/lodash/_arrayPush.js","./_baseRest":"node_modules/lodash/_baseRest.js","./_castSlice":"node_modules/lodash/_castSlice.js","./toInteger":"node_modules/lodash/toInteger.js"}],"node_modules/lodash-decorators/spread.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var spread = require("lodash/spread");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

exports.Spread = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(spread, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.spread = exports.Spread;
exports.default = exports.Spread;
},{"lodash/spread":"node_modules/lodash/spread.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/tap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var utils_1 = require("./utils");
/**
 * Returns the first argument from the function regardless of
 * the decorated functions return value.
 */


exports.Tap = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(function (fn) {
  return utils_1.returnAtIndex(fn, 0);
}, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.tap = exports.Tap;
exports.default = exports.Tap;
},{"./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js","./utils":"node_modules/lodash-decorators/utils.js"}],"node_modules/lodash/throttle.js":[function(require,module,exports) {
var debounce = require('./debounce'),
    isObject = require('./isObject');

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

module.exports = throttle;

},{"./debounce":"node_modules/lodash/debounce.js","./isObject":"node_modules/lodash/isObject.js"}],"node_modules/lodash-decorators/throttle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var throttle = require("lodash/throttle");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

exports.Throttle = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(throttle, new applicators_1.PreValueApplicator(), {
  setter: true,
  getter: true,
  optionalParams: true
}));
exports.throttle = exports.Throttle;
exports.ThrottleGetter = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(throttle, new applicators_1.PreValueApplicator(), {
  getter: true,
  optionalParams: true
}));
exports.throttleGetter = exports.ThrottleGetter;
exports.ThrottleSetter = factory_1.DecoratorFactory.createInstanceDecorator(new factory_1.DecoratorConfig(throttle, new applicators_1.PreValueApplicator(), {
  setter: true,
  optionalParams: true
}));
exports.throttleSetter = exports.ThrottleSetter;
exports.default = exports.Throttle;
},{"lodash/throttle":"node_modules/lodash/throttle.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/throttleAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var throttle = require("lodash/throttle");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(throttle, new applicators_1.PreValueApplicator(), {
  setter: true
}));

function ThrottleAll(wait, options) {
  return decorator(wait, options);
}

exports.ThrottleAll = ThrottleAll;
exports.throttleAll = ThrottleAll;
exports.default = decorator;
},{"lodash/throttle":"node_modules/lodash/throttle.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/unary.js":[function(require,module,exports) {
var ary = require('./ary');

/**
 * Creates a function that accepts up to one argument, ignoring any
 * additional arguments.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.unary(parseInt));
 * // => [6, 8, 10]
 */
function unary(func) {
  return ary(func, 1);
}

module.exports = unary;

},{"./ary":"node_modules/lodash/ary.js"}],"node_modules/lodash-decorators/unary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var unary = require("lodash/unary");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

exports.Unary = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(unary, new applicators_1.PreValueApplicator(), {
  optionalParams: true
}));
exports.unary = exports.Unary;
exports.default = exports.Unary;
},{"lodash/unary":"node_modules/lodash/unary.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash/wrap.js":[function(require,module,exports) {
var castFunction = require('./_castFunction'),
    partial = require('./partial');

/**
 * Creates a function that provides `value` to `wrapper` as its first
 * argument. Any additional arguments provided to the function are appended
 * to those provided to the `wrapper`. The wrapper is invoked with the `this`
 * binding of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {*} value The value to wrap.
 * @param {Function} [wrapper=identity] The wrapper function.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var p = _.wrap(_.escape, function(func, text) {
 *   return '<p>' + func(text) + '</p>';
 * });
 *
 * p('fred, barney, & pebbles');
 * // => '<p>fred, barney, &amp; pebbles</p>'
 */
function wrap(value, wrapper) {
  return partial(castFunction(wrapper), value);
}

module.exports = wrap;

},{"./_castFunction":"node_modules/lodash/_castFunction.js","./partial":"node_modules/lodash/partial.js"}],"node_modules/lodash-decorators/wrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var wrap = require("lodash/wrap");

var factory_1 = require("./factory");

var applicators_1 = require("./applicators");

var decorator = factory_1.DecoratorFactory.createDecorator(new factory_1.DecoratorConfig(wrap, new applicators_1.WrapApplicator()));

function Wrap(fnToWrap) {
  return decorator(fnToWrap);
}

exports.Wrap = Wrap;
exports.wrap = Wrap;
exports.default = decorator;
},{"lodash/wrap":"node_modules/lodash/wrap.js","./factory":"node_modules/lodash-decorators/factory.js","./applicators":"node_modules/lodash-decorators/applicators.js"}],"node_modules/lodash-decorators/index.js":[function(require,module,exports) {
"use strict";

function __export(m) {
  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

Object.defineProperty(exports, "__esModule", {
  value: true
});

__export(require("./factory"));

__export(require("./after"));

__export(require("./afterAll"));

__export(require("./ary"));

__export(require("./attempt"));

__export(require("./before"));

__export(require("./beforeAll"));

__export(require("./bind"));

__export(require("./bindAll"));

__export(require("./curry"));

__export(require("./curryAll"));

__export(require("./curryRight"));

__export(require("./curryRightAll"));

__export(require("./debounce"));

__export(require("./debounceAll"));

__export(require("./defer"));

__export(require("./delay"));

__export(require("./flip"));

__export(require("./flow"));

__export(require("./flowRight"));

__export(require("./memoize"));

__export(require("./memoizeAll"));

__export(require("./mixin"));

__export(require("./negate"));

__export(require("./once"));

__export(require("./overArgs"));

__export(require("./partial"));

__export(require("./partialRight"));

__export(require("./rearg"));

__export(require("./rest"));

__export(require("./spread"));

__export(require("./tap"));

__export(require("./throttle"));

__export(require("./throttleAll"));

__export(require("./unary"));

__export(require("./wrap"));
},{"./factory":"node_modules/lodash-decorators/factory.js","./after":"node_modules/lodash-decorators/after.js","./afterAll":"node_modules/lodash-decorators/afterAll.js","./ary":"node_modules/lodash-decorators/ary.js","./attempt":"node_modules/lodash-decorators/attempt.js","./before":"node_modules/lodash-decorators/before.js","./beforeAll":"node_modules/lodash-decorators/beforeAll.js","./bind":"node_modules/lodash-decorators/bind.js","./bindAll":"node_modules/lodash-decorators/bindAll.js","./curry":"node_modules/lodash-decorators/curry.js","./curryAll":"node_modules/lodash-decorators/curryAll.js","./curryRight":"node_modules/lodash-decorators/curryRight.js","./curryRightAll":"node_modules/lodash-decorators/curryRightAll.js","./debounce":"node_modules/lodash-decorators/debounce.js","./debounceAll":"node_modules/lodash-decorators/debounceAll.js","./defer":"node_modules/lodash-decorators/defer.js","./delay":"node_modules/lodash-decorators/delay.js","./flip":"node_modules/lodash-decorators/flip.js","./flow":"node_modules/lodash-decorators/flow.js","./flowRight":"node_modules/lodash-decorators/flowRight.js","./memoize":"node_modules/lodash-decorators/memoize.js","./memoizeAll":"node_modules/lodash-decorators/memoizeAll.js","./mixin":"node_modules/lodash-decorators/mixin.js","./negate":"node_modules/lodash-decorators/negate.js","./once":"node_modules/lodash-decorators/once.js","./overArgs":"node_modules/lodash-decorators/overArgs.js","./partial":"node_modules/lodash-decorators/partial.js","./partialRight":"node_modules/lodash-decorators/partialRight.js","./rearg":"node_modules/lodash-decorators/rearg.js","./rest":"node_modules/lodash-decorators/rest.js","./spread":"node_modules/lodash-decorators/spread.js","./tap":"node_modules/lodash-decorators/tap.js","./throttle":"node_modules/lodash-decorators/throttle.js","./throttleAll":"node_modules/lodash-decorators/throttleAll.js","./unary":"node_modules/lodash-decorators/unary.js","./wrap":"node_modules/lodash-decorators/wrap.js"}],"node_modules/class-validator/esm5/metadata/ValidationMetadata.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationMetadata = void 0;

/**
 * This metadata contains validation rules.
 */
var ValidationMetadata =
/** @class */
function () {
  // -------------------------------------------------------------------------
  // Constructor
  // -------------------------------------------------------------------------
  function ValidationMetadata(args) {
    /**
     * Validation groups used for this validation.
     */
    this.groups = [];
    /**
     * Indicates if validation must be performed always, no matter of validation groups used.
     */

    this.always = false;
    /**
     * Specifies if validated value is an array and each of its item must be validated.
     */

    this.each = false;
    /*
     * A transient set of data passed through to the validation result for response mapping
     */

    this.context = undefined;
    this.type = args.type;
    this.target = args.target;
    this.propertyName = args.propertyName;
    this.constraints = args.constraints;
    this.constraintCls = args.constraintCls;
    this.validationTypeOptions = args.validationTypeOptions;

    if (args.validationOptions) {
      this.message = args.validationOptions.message;
      this.groups = args.validationOptions.groups;
      this.always = args.validationOptions.always;
      this.each = args.validationOptions.each;
      this.context = args.validationOptions.context;
    }
  }

  return ValidationMetadata;
}();

exports.ValidationMetadata = ValidationMetadata;
},{}],"node_modules/class-validator/esm5/validation-schema/ValidationSchemaToMetadataTransformer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationSchemaToMetadataTransformer = void 0;

var _ValidationMetadata = require("../metadata/ValidationMetadata");

/**
 * Used to transform validation schemas to validation metadatas.
 */
var ValidationSchemaToMetadataTransformer =
/** @class */
function () {
  function ValidationSchemaToMetadataTransformer() {}

  ValidationSchemaToMetadataTransformer.prototype.transform = function (schema) {
    var metadatas = [];
    Object.keys(schema.properties).forEach(function (property) {
      schema.properties[property].forEach(function (validation) {
        var validationOptions = {
          message: validation.message,
          groups: validation.groups,
          always: validation.always,
          each: validation.each
        };
        var args = {
          type: validation.type,
          target: schema.name,
          propertyName: property,
          constraints: validation.constraints,
          validationTypeOptions: validation.options,
          validationOptions: validationOptions
        };
        metadatas.push(new _ValidationMetadata.ValidationMetadata(args));
      });
    });
    return metadatas;
  };

  return ValidationSchemaToMetadataTransformer;
}();

exports.ValidationSchemaToMetadataTransformer = ValidationSchemaToMetadataTransformer;
},{"../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js"}],"node_modules/class-validator/esm5/metadata/MetadataStorage.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMetadataStorage = getMetadataStorage;
exports.MetadataStorage = void 0;

var _ValidationSchemaToMetadataTransformer = require("../validation-schema/ValidationSchemaToMetadataTransformer");

/**
 * Gets metadata storage.
 * Metadata storage follows the best practices and stores metadata in a global variable.
 */
function getMetadataStorage() {
  if (typeof window !== "undefined") {
    window.global = window;
  }

  if (!global.classValidatorMetadataStorage) global.classValidatorMetadataStorage = new MetadataStorage();
  return global.classValidatorMetadataStorage;
}
/**
 * Storage all metadatas.
 */


var MetadataStorage =
/** @class */
function () {
  function MetadataStorage() {
    // -------------------------------------------------------------------------
    // Private properties
    // -------------------------------------------------------------------------
    this.validationMetadatas = [];
    this.constraintMetadatas = [];
  }

  Object.defineProperty(MetadataStorage.prototype, "hasValidationMetaData", {
    get: function () {
      return !!this.validationMetadatas.length;
    },
    enumerable: true,
    configurable: true
  }); // -------------------------------------------------------------------------
  // Public Methods
  // -------------------------------------------------------------------------

  /**
   * Adds a new validation metadata.
   */

  MetadataStorage.prototype.addValidationSchema = function (schema) {
    var _this = this;

    var validationMetadatas = new _ValidationSchemaToMetadataTransformer.ValidationSchemaToMetadataTransformer().transform(schema);
    validationMetadatas.forEach(function (validationMetadata) {
      return _this.addValidationMetadata(validationMetadata);
    });
  };
  /**
   * Adds a new validation metadata.
   */


  MetadataStorage.prototype.addValidationMetadata = function (metadata) {
    this.validationMetadatas.push(metadata);
  };
  /**
   * Adds a new constraint metadata.
   */


  MetadataStorage.prototype.addConstraintMetadata = function (metadata) {
    this.constraintMetadatas.push(metadata);
  };
  /**
   * Groups metadata by their property names.
   */


  MetadataStorage.prototype.groupByPropertyName = function (metadata) {
    var grouped = {};
    metadata.forEach(function (metadata) {
      if (!grouped[metadata.propertyName]) grouped[metadata.propertyName] = [];
      grouped[metadata.propertyName].push(metadata);
    });
    return grouped;
  };
  /**
   * Gets all validation metadatas for the given object with the given groups.
   */


  MetadataStorage.prototype.getTargetValidationMetadatas = function (targetConstructor, targetSchema, groups) {
    // get directly related to a target metadatas
    var originalMetadatas = this.validationMetadatas.filter(function (metadata) {
      if (metadata.target !== targetConstructor && metadata.target !== targetSchema) return false;
      if (metadata.always) return true;
      if (groups && groups.length > 0) return metadata.groups && !!metadata.groups.find(function (group) {
        return groups.indexOf(group) !== -1;
      });
      return true;
    }); // get metadatas for inherited classes

    var inheritedMetadatas = this.validationMetadatas.filter(function (metadata) {
      // if target is a string it's means we validate agains a schema, and there is no inheritance support for schemas
      if (typeof metadata.target === "string") return false;
      if (metadata.target === targetConstructor) return false;
      if (metadata.target instanceof Function && !(targetConstructor.prototype instanceof metadata.target)) return false;
      if (metadata.always) return true;
      if (groups && groups.length > 0) return metadata.groups && !!metadata.groups.find(function (group) {
        return groups.indexOf(group) !== -1;
      });
      return true;
    }); // filter out duplicate metadatas, prefer original metadatas instead of inherited metadatas

    var uniqueInheritedMetadatas = inheritedMetadatas.filter(function (inheritedMetadata) {
      return !originalMetadatas.find(function (originalMetadata) {
        return originalMetadata.propertyName === inheritedMetadata.propertyName && originalMetadata.type === inheritedMetadata.type;
      });
    });
    return originalMetadatas.concat(uniqueInheritedMetadatas);
  };
  /**
   * Gets all validator constraints for the given object.
   */


  MetadataStorage.prototype.getTargetValidatorConstraints = function (target) {
    return this.constraintMetadatas.filter(function (metadata) {
      return metadata.target === target;
    });
  };

  return MetadataStorage;
}();

exports.MetadataStorage = MetadataStorage;
},{"../validation-schema/ValidationSchemaToMetadataTransformer":"node_modules/class-validator/esm5/validation-schema/ValidationSchemaToMetadataTransformer.js"}],"node_modules/class-validator/esm5/validation/ValidationError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationError = void 0;

/**
 * Validation error description.
 */
var ValidationError =
/** @class */
function () {
  function ValidationError() {}
  /**
   *
   * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability
   * @param hasParent true when the error is a child of an another one
   * @param parentPath path as string to the parent of this property
   */


  ValidationError.prototype.toString = function (shouldDecorate, hasParent, parentPath) {
    var _this = this;

    if (shouldDecorate === void 0) {
      shouldDecorate = false;
    }

    if (hasParent === void 0) {
      hasParent = false;
    }

    if (parentPath === void 0) {
      parentPath = "";
    }

    var boldStart = shouldDecorate ? "\u001B[1m" : "";
    var boldEnd = shouldDecorate ? "\u001B[22m" : "";

    var propConstraintFailed = function (propertyName) {
      return " - property " + boldStart + parentPath + propertyName + boldEnd + " has failed the following constraints: " + boldStart + Object.keys(_this.constraints).join(", ") + boldEnd + " \n";
    };

    if (!hasParent) {
      return "An instance of " + boldStart + (this.target ? this.target.constructor.name : "an object") + boldEnd + " has failed the validation:\n" + (this.constraints ? propConstraintFailed(this.property) : "") + this.children.map(function (childError) {
        return childError.toString(shouldDecorate, true, _this.property);
      }).join("");
    } else {
      // we format numbers as array indexes for better readability.
      var formattedProperty_1 = Number.isInteger(+this.property) ? "[" + this.property + "]" : "" + (parentPath ? "." : "") + this.property;

      if (this.constraints) {
        return propConstraintFailed(formattedProperty_1);
      } else {
        return this.children.map(function (childError) {
          return childError.toString(shouldDecorate, true, "" + parentPath + formattedProperty_1);
        }).join("");
      }
    }
  };

  return ValidationError;
}();

exports.ValidationError = ValidationError;
},{}],"node_modules/class-validator/esm5/validation/ValidationTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationTypes = void 0;

/**
 * Validation types.
 */
var ValidationTypes =
/** @class */
function () {
  function ValidationTypes() {}
  /**
   * Checks if validation type is valid.
   */


  ValidationTypes.isValid = function (type) {
    var _this = this;

    return type !== "isValid" && type !== "getMessage" && Object.keys(this).map(function (key) {
      return _this[key];
    }).indexOf(type) !== -1;
  };
  /* system */


  ValidationTypes.CUSTOM_VALIDATION = "customValidation"; // done

  ValidationTypes.NESTED_VALIDATION = "nestedValidation"; // done

  ValidationTypes.PROMISE_VALIDATION = "promiseValidation"; // done

  ValidationTypes.CONDITIONAL_VALIDATION = "conditionalValidation"; // done

  ValidationTypes.WHITELIST = "whitelistValidation"; // done

  ValidationTypes.IS_DEFINED = "isDefined"; // done

  return ValidationTypes;
}();

exports.ValidationTypes = ValidationTypes;
},{}],"node_modules/class-validator/esm5/validation/ValidationUtils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationUtils = void 0;

var ValidationUtils =
/** @class */
function () {
  function ValidationUtils() {}

  ValidationUtils.replaceMessageSpecialTokens = function (message, validationArguments) {
    var messageString;

    if (message instanceof Function) {
      messageString = message(validationArguments);
    } else if (typeof message === "string") {
      messageString = message;
    }

    if (messageString && validationArguments.constraints instanceof Array) {
      validationArguments.constraints.forEach(function (constraint, index) {
        messageString = messageString.replace(new RegExp("\\$constraint" + (index + 1), "g"), constraint);
      });
    }

    if (messageString && validationArguments.value !== undefined && validationArguments.value !== null && typeof validationArguments.value === "string") messageString = messageString.replace(/\$value/g, validationArguments.value);
    if (messageString) messageString = messageString.replace(/\$property/g, validationArguments.property);
    if (messageString) messageString = messageString.replace(/\$target/g, validationArguments.targetName);
    return messageString;
  };

  return ValidationUtils;
}();

exports.ValidationUtils = ValidationUtils;
},{}],"node_modules/class-validator/esm5/utils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPromise = isPromise;
exports.convertToArray = convertToArray;

// https://github.com/TylorS/typed-is-promise/blob/abf1514e1b6961adfc75765476b0debb96b2c3ae/src/index.ts
function isPromise(p) {
  return p !== null && typeof p === "object" && typeof p.then === "function";
}
/**
 * Convert Map, Set to Array
 */


function convertToArray(val) {
  if (val instanceof Map) {
    return Array.from(val.values());
  }

  return Array.isArray(val) ? val : Array.from(val);
}
},{}],"node_modules/class-validator/esm5/validation/ValidationExecutor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidationExecutor = void 0;

var _ValidationError = require("./ValidationError");

var _ValidationTypes = require("./ValidationTypes");

var _ValidationUtils = require("./ValidationUtils");

var _utils = require("../utils");

var _MetadataStorage = require("../metadata/MetadataStorage");

/**
 * Executes validation over given object.
 */
var ValidationExecutor =
/** @class */
function () {
  // -------------------------------------------------------------------------
  // Constructor
  // -------------------------------------------------------------------------
  function ValidationExecutor(validator, validatorOptions) {
    this.validator = validator;
    this.validatorOptions = validatorOptions; // -------------------------------------------------------------------------
    // Properties
    // -------------------------------------------------------------------------

    this.awaitingPromises = [];
    this.ignoreAsyncValidations = false; // -------------------------------------------------------------------------
    // Private Properties
    // -------------------------------------------------------------------------

    this.metadataStorage = (0, _MetadataStorage.getMetadataStorage)();
  } // -------------------------------------------------------------------------
  // Public Methods
  // -------------------------------------------------------------------------


  ValidationExecutor.prototype.execute = function (object, targetSchema, validationErrors) {
    var _this = this;
    /**
     * If there is no metadata registered it means possibly the dependencies are not flatterned and
     * more than one instance is used.
     *
     * TODO: This needs proper handling, forcing to use the same container or some other proper solution.
     */


    if (!this.metadataStorage.hasValidationMetaData) {
      console.warn("No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.");
    }

    var groups = this.validatorOptions ? this.validatorOptions.groups : undefined;
    var targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(object.constructor, targetSchema, groups);
    var groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);

    if (this.validatorOptions && this.validatorOptions.forbidUnknownValues && !targetMetadatas.length) {
      var validationError = new _ValidationError.ValidationError();
      if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.target === undefined || this.validatorOptions.validationError.target === true) validationError.target = object;
      validationError.value = undefined;
      validationError.property = undefined;
      validationError.children = [];
      validationError.constraints = {
        unknownValue: "an unknown value was passed to the validate function"
      };
      validationErrors.push(validationError);
      return;
    }

    if (this.validatorOptions && this.validatorOptions.whitelist) this.whitelist(object, groupedMetadatas, validationErrors); // General validation

    Object.keys(groupedMetadatas).forEach(function (propertyName) {
      var value = object[propertyName];
      var definedMetadatas = groupedMetadatas[propertyName].filter(function (metadata) {
        return metadata.type === _ValidationTypes.ValidationTypes.IS_DEFINED;
      });
      var metadatas = groupedMetadatas[propertyName].filter(function (metadata) {
        return metadata.type !== _ValidationTypes.ValidationTypes.IS_DEFINED && metadata.type !== _ValidationTypes.ValidationTypes.WHITELIST;
      });

      if (value instanceof Promise && metadatas.find(function (metadata) {
        return metadata.type === _ValidationTypes.ValidationTypes.PROMISE_VALIDATION;
      })) {
        _this.awaitingPromises.push(value.then(function (resolvedValue) {
          _this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);
        }));
      } else {
        _this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);
      }
    });
  };

  ValidationExecutor.prototype.whitelist = function (object, groupedMetadatas, validationErrors) {
    var _this = this;

    var notAllowedProperties = [];
    Object.keys(object).forEach(function (propertyName) {
      // does this property have no metadata?
      if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0) notAllowedProperties.push(propertyName);
    });

    if (notAllowedProperties.length > 0) {
      if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) {
        // throw errors
        notAllowedProperties.forEach(function (property) {
          var _a;

          var validationError = _this.generateValidationError(object, object[property], property);

          validationError.constraints = (_a = {}, _a[_ValidationTypes.ValidationTypes.WHITELIST] = "property " + property + " should not exist", _a);
          validationError.children = undefined;
          validationErrors.push(validationError);
        });
      } else {
        // strip non allowed properties
        notAllowedProperties.forEach(function (property) {
          return delete object[property];
        });
      }
    }
  };

  ValidationExecutor.prototype.stripEmptyErrors = function (errors) {
    var _this = this;

    return errors.filter(function (error) {
      if (error.children) {
        error.children = _this.stripEmptyErrors(error.children);
      }

      if (Object.keys(error.constraints).length === 0) {
        if (error.children.length === 0) {
          return false;
        } else {
          delete error.constraints;
        }
      }

      return true;
    });
  }; // -------------------------------------------------------------------------
  // Private Methods
  // -------------------------------------------------------------------------


  ValidationExecutor.prototype.performValidations = function (object, value, propertyName, definedMetadatas, metadatas, validationErrors) {
    var customValidationMetadatas = metadatas.filter(function (metadata) {
      return metadata.type === _ValidationTypes.ValidationTypes.CUSTOM_VALIDATION;
    });
    var nestedValidationMetadatas = metadatas.filter(function (metadata) {
      return metadata.type === _ValidationTypes.ValidationTypes.NESTED_VALIDATION;
    });
    var conditionalValidationMetadatas = metadatas.filter(function (metadata) {
      return metadata.type === _ValidationTypes.ValidationTypes.CONDITIONAL_VALIDATION;
    });
    var validationError = this.generateValidationError(object, value, propertyName);
    validationErrors.push(validationError);
    var canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);

    if (!canValidate) {
      return;
    } // handle IS_DEFINED validation type the special way - it should work no matter skipUndefinedProperties/skipMissingProperties is set or not


    this.customValidations(object, value, definedMetadatas, validationError);
    this.mapContexts(object, value, definedMetadatas, validationError);

    if (value === undefined && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) {
      return;
    }

    if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) {
      return;
    }

    if ((value === null || value === undefined) && this.validatorOptions && this.validatorOptions.skipMissingProperties === true) {
      return;
    }

    this.customValidations(object, value, customValidationMetadatas, validationError);
    this.nestedValidations(value, nestedValidationMetadatas, validationError.children);
    this.mapContexts(object, value, metadatas, validationError);
    this.mapContexts(object, value, customValidationMetadatas, validationError);
  };

  ValidationExecutor.prototype.generateValidationError = function (object, value, propertyName) {
    var validationError = new _ValidationError.ValidationError();
    if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.target === undefined || this.validatorOptions.validationError.target === true) validationError.target = object;
    if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.value === undefined || this.validatorOptions.validationError.value === true) validationError.value = value;
    validationError.property = propertyName;
    validationError.children = [];
    validationError.constraints = {};
    return validationError;
  };

  ValidationExecutor.prototype.conditionalValidations = function (object, value, metadatas) {
    return metadatas.map(function (metadata) {
      return metadata.constraints[0](object, value);
    }).reduce(function (resultA, resultB) {
      return resultA && resultB;
    }, true);
  };

  ValidationExecutor.prototype.customValidations = function (object, value, metadatas, error) {
    var _this = this;

    metadatas.forEach(function (metadata) {
      _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls).forEach(function (customConstraintMetadata) {
        if (customConstraintMetadata.async && _this.ignoreAsyncValidations) return;
        var validationArguments = {
          targetName: object.constructor ? object.constructor.name : undefined,
          property: metadata.propertyName,
          object: object,
          value: value,
          constraints: metadata.constraints
        };

        if (!metadata.each || !(value instanceof Array || value instanceof Set || value instanceof Map)) {
          var validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);

          if ((0, _utils.isPromise)(validatedValue)) {
            var promise = validatedValue.then(function (isValid) {
              if (!isValid) {
                var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata),
                    type = _a[0],
                    message = _a[1];

                error.constraints[type] = message;

                if (metadata.context) {
                  if (!error.contexts) {
                    error.contexts = {};
                  }

                  error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);
                }
              }
            });

            _this.awaitingPromises.push(promise);
          } else {
            if (!validatedValue) {
              var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata),
                  type = _a[0],
                  message = _a[1];

              error.constraints[type] = message;
            }
          }

          return;
        } // convert set and map into array


        var arrayValue = (0, _utils.convertToArray)(value); // Validation needs to be applied to each array item

        var validatedSubValues = arrayValue.map(function (subValue) {
          return customConstraintMetadata.instance.validate(subValue, validationArguments);
        });
        var validationIsAsync = validatedSubValues.some(function (validatedSubValue) {
          return (0, _utils.isPromise)(validatedSubValue);
        });

        if (validationIsAsync) {
          // Wrap plain values (if any) in promises, so that all are async
          var asyncValidatedSubValues = validatedSubValues.map(function (validatedSubValue) {
            return (0, _utils.isPromise)(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue);
          });
          var asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(function (flatValidatedValues) {
            var validationResult = flatValidatedValues.every(function (isValid) {
              return isValid;
            });

            if (!validationResult) {
              var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata),
                  type = _a[0],
                  message = _a[1];

              error.constraints[type] = message;

              if (metadata.context) {
                if (!error.contexts) {
                  error.contexts = {};
                }

                error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);
              }
            }
          });

          _this.awaitingPromises.push(asyncValidationIsFinishedPromise);

          return;
        }

        var validationResult = validatedSubValues.every(function (isValid) {
          return isValid;
        });

        if (!validationResult) {
          var _b = _this.createValidationError(object, value, metadata, customConstraintMetadata),
              type = _b[0],
              message = _b[1];

          error.constraints[type] = message;
        }
      });
    });
  };

  ValidationExecutor.prototype.nestedValidations = function (value, metadatas, errors) {
    var _this = this;

    if (value === void 0) {
      return;
    }

    metadatas.forEach(function (metadata) {
      var _a;

      if (metadata.type !== _ValidationTypes.ValidationTypes.NESTED_VALIDATION && metadata.type !== _ValidationTypes.ValidationTypes.PROMISE_VALIDATION) {
        return;
      }

      if (value instanceof Array || value instanceof Set || value instanceof Map) {
        // Treats Set as an array - as index of Set value is value itself and it is common case to have Object as value
        var arrayLikeValue = value instanceof Set ? Array.from(value) : value;
        arrayLikeValue.forEach(function (subValue, index) {
          _this.performValidations(value, subValue, index.toString(), [], metadatas, errors);
        });
      } else if (value instanceof Object) {
        var targetSchema = typeof metadata.target === "string" ? metadata.target : metadata.target.name;

        _this.execute(value, targetSchema, errors);
      } else {
        var error = new _ValidationError.ValidationError();
        error.value = value;
        error.property = metadata.propertyName;
        error.target = metadata.target;

        var _b = _this.createValidationError(metadata.target, value, metadata),
            type = _b[0],
            message = _b[1];

        error.constraints = (_a = {}, _a[type] = message, _a);
        errors.push(error);
      }
    });
  };

  ValidationExecutor.prototype.mapContexts = function (object, value, metadatas, error) {
    var _this = this;

    return metadatas.forEach(function (metadata) {
      if (metadata.context) {
        var customConstraint = void 0;

        if (metadata.type === _ValidationTypes.ValidationTypes.CUSTOM_VALIDATION) {
          var customConstraints = _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls);

          customConstraint = customConstraints[0];
        }

        var type = _this.getConstraintType(metadata, customConstraint);

        if (error.constraints[type]) {
          if (!error.contexts) {
            error.contexts = {};
          }

          error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);
        }
      }
    });
  };

  ValidationExecutor.prototype.createValidationError = function (object, value, metadata, customValidatorMetadata) {
    var targetName = object.constructor ? object.constructor.name : undefined;
    var type = this.getConstraintType(metadata, customValidatorMetadata);
    var validationArguments = {
      targetName: targetName,
      property: metadata.propertyName,
      object: object,
      value: value,
      constraints: metadata.constraints
    };
    var message = metadata.message || "";

    if (!metadata.message && (!this.validatorOptions || this.validatorOptions && !this.validatorOptions.dismissDefaultMessages)) {
      if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) {
        message = customValidatorMetadata.instance.defaultMessage(validationArguments);
      }
    }

    var messageString = _ValidationUtils.ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);

    return [type, messageString];
  };

  ValidationExecutor.prototype.getConstraintType = function (metadata, customValidatorMetadata) {
    var type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata.type;
    return type;
  };

  return ValidationExecutor;
}();

exports.ValidationExecutor = ValidationExecutor;
},{"./ValidationError":"node_modules/class-validator/esm5/validation/ValidationError.js","./ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","./ValidationUtils":"node_modules/class-validator/esm5/validation/ValidationUtils.js","../utils":"node_modules/class-validator/esm5/utils.js","../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/class-validator/esm5/validation/Validator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Validator = void 0;

var tslib_1 = _interopRequireWildcard(require("tslib"));

var _ValidationExecutor = require("./ValidationExecutor");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Validator performs validation of the given object based on its metadata.
 */
var Validator =
/** @class */
function () {
  function Validator() {} // -------------------------------------------------------------------------
  // Private Properties
  // -------------------------------------------------------------------------

  /**
   * Performs validation of the given object based on decorators or validation schema.
   * Common method for `validateOrReject` and `validate` methods.
   */


  Validator.prototype.coreValidate = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
    var object = typeof objectOrSchemaName === "string" ? objectOrValidationOptions : objectOrSchemaName;
    var options = typeof objectOrSchemaName === "string" ? maybeValidatorOptions : objectOrValidationOptions;
    var schema = typeof objectOrSchemaName === "string" ? objectOrSchemaName : undefined;
    var executor = new _ValidationExecutor.ValidationExecutor(this, options);
    var validationErrors = [];
    executor.execute(object, schema, validationErrors);
    return Promise.all(executor.awaitingPromises).then(function () {
      return executor.stripEmptyErrors(validationErrors);
    });
  };
  /**
   * Performs validation of the given object based on decorators or validation schema.
   */


  Validator.prototype.validate = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
    return this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);
  };
  /**
   * Performs validation of the given object based on decorators or validation schema and reject on error.
   */


  Validator.prototype.validateOrReject = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
      var errors;
      return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions)];

          case 1:
            errors = _a.sent();
            if (errors.length) return [2
            /*return*/
            , Promise.reject(errors)];
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * Performs validation of the given object based on decorators or validation schema.
   */


  Validator.prototype.validateSync = function (objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions) {
    var object = typeof objectOrSchemaName === "string" ? objectOrValidationOptions : objectOrSchemaName;
    var options = typeof objectOrSchemaName === "string" ? maybeValidatorOptions : objectOrValidationOptions;
    var schema = typeof objectOrSchemaName === "string" ? objectOrSchemaName : undefined;
    var executor = new _ValidationExecutor.ValidationExecutor(this, options);
    executor.ignoreAsyncValidations = true;
    var validationErrors = [];
    executor.execute(object, schema, validationErrors);
    return executor.stripEmptyErrors(validationErrors);
  };

  return Validator;
}();

exports.Validator = Validator;
},{"tslib":"node_modules/tslib/tslib.es6.js","./ValidationExecutor":"node_modules/class-validator/esm5/validation/ValidationExecutor.js"}],"node_modules/class-validator/esm5/container.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useContainer = useContainer;
exports.getFromContainer = getFromContainer;

/**
 * Container to be used by this library for inversion control. If container was not implicitly set then by default
 * container simply creates a new instance of the given class.
 */
var defaultContainer = new (
/** @class */
function () {
  function class_1() {
    this.instances = [];
  }

  class_1.prototype.get = function (someClass) {
    var instance = this.instances.find(function (instance) {
      return instance.type === someClass;
    });

    if (!instance) {
      instance = {
        type: someClass,
        object: new someClass()
      };
      this.instances.push(instance);
    }

    return instance.object;
  };

  return class_1;
}())();
var userContainer;
var userContainerOptions;
/**
 * Sets container to be used by this library.
 */

function useContainer(iocContainer, options) {
  userContainer = iocContainer;
  userContainerOptions = options;
}
/**
 * Gets the IOC container used by this library.
 */


function getFromContainer(someClass) {
  if (userContainer) {
    try {
      var instance = userContainer.get(someClass);
      if (instance) return instance;
      if (!userContainerOptions || !userContainerOptions.fallback) return instance;
    } catch (error) {
      if (!userContainerOptions || !userContainerOptions.fallbackOnErrors) throw error;
    }
  }

  return defaultContainer.get(someClass);
}
},{}],"node_modules/class-validator/esm5/decorator/common/Allow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Allow = Allow;

var _ValidationTypes = require("../../validation/ValidationTypes");

var _ValidationMetadata = require("../../metadata/ValidationMetadata");

var _MetadataStorage = require("../../metadata/MetadataStorage");

/**
 * If object has both allowed and not allowed properties a validation error will be thrown.
 */
function Allow(validationOptions) {
  return function (object, propertyName) {
    var args = {
      type: _ValidationTypes.ValidationTypes.WHITELIST,
      target: object.constructor,
      propertyName: propertyName,
      validationOptions: validationOptions
    };
    (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(args));
  };
}
},{"../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","../../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","../../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/class-validator/esm5/metadata/ConstraintMetadata.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConstraintMetadata = void 0;

var _container = require("../container");

/**
 * This metadata interface contains information for custom validators.
 */
var ConstraintMetadata =
/** @class */
function () {
  // -------------------------------------------------------------------------
  // Constructor
  // -------------------------------------------------------------------------
  function ConstraintMetadata(target, name, async) {
    if (async === void 0) {
      async = false;
    }

    this.target = target;
    this.name = name;
    this.async = async;
  }

  Object.defineProperty(ConstraintMetadata.prototype, "instance", {
    // -------------------------------------------------------------------------
    // Accessors
    // -------------------------------------------------------------------------

    /**
     * Instance of the target custom validation class which performs validation.
     */
    get: function () {
      return (0, _container.getFromContainer)(this.target);
    },
    enumerable: true,
    configurable: true
  });
  return ConstraintMetadata;
}();

exports.ConstraintMetadata = ConstraintMetadata;
},{"../container":"node_modules/class-validator/esm5/container.js"}],"node_modules/class-validator/esm5/register-decorator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerDecorator = registerDecorator;

var _ConstraintMetadata = require("./metadata/ConstraintMetadata");

var _ValidationMetadata = require("./metadata/ValidationMetadata");

var _ValidationTypes = require("./validation/ValidationTypes");

var _container = require("./container");

var _MetadataStorage = require("./metadata/MetadataStorage");

/**
 * Registers a custom validation decorator.
 */
function registerDecorator(options) {
  var constraintCls;

  if (options.validator instanceof Function) {
    constraintCls = options.validator;
    var constraintClasses = (0, _container.getFromContainer)(_MetadataStorage.MetadataStorage).getTargetValidatorConstraints(options.validator);

    if (constraintClasses.length > 1) {
      throw "More than one implementation of ValidatorConstraintInterface found for validator on: " + options.target + ":" + options.propertyName;
    }
  } else {
    var validator_1 = options.validator;

    constraintCls =
    /** @class */
    function () {
      function CustomConstraint() {}

      CustomConstraint.prototype.validate = function (value, validationArguments) {
        return validator_1.validate(value, validationArguments);
      };

      CustomConstraint.prototype.defaultMessage = function (validationArguments) {
        if (validator_1.defaultMessage) {
          return validator_1.defaultMessage(validationArguments);
        }

        return "";
      };

      return CustomConstraint;
    }();

    (0, _MetadataStorage.getMetadataStorage)().addConstraintMetadata(new _ConstraintMetadata.ConstraintMetadata(constraintCls, options.name, options.async));
  }

  var validationMetadataArgs = {
    type: options.name && _ValidationTypes.ValidationTypes.isValid(options.name) ? options.name : _ValidationTypes.ValidationTypes.CUSTOM_VALIDATION,
    target: options.target,
    propertyName: options.propertyName,
    validationOptions: options.options,
    constraintCls: constraintCls,
    constraints: options.constraints
  };
  (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(validationMetadataArgs));
}
},{"./metadata/ConstraintMetadata":"node_modules/class-validator/esm5/metadata/ConstraintMetadata.js","./metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","./validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","./container":"node_modules/class-validator/esm5/container.js","./metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/class-validator/esm5/decorator/common/ValidateBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildMessage = buildMessage;
exports.ValidateBy = ValidateBy;

var _registerDecorator = require("../../register-decorator");

function buildMessage(impl, validationOptions) {
  return function (validationArguments) {
    var eachPrefix = validationOptions && validationOptions.each ? "each value in " : "";
    return impl(eachPrefix, validationArguments);
  };
}

function ValidateBy(options, validationOptions) {
  return function (object, propertyName) {
    (0, _registerDecorator.registerDecorator)({
      name: options.name,
      target: object.constructor,
      propertyName: propertyName,
      options: validationOptions,
      constraints: options.constraints,
      validator: options.validator
    });
  };
}
},{"../../register-decorator":"node_modules/class-validator/esm5/register-decorator.js"}],"node_modules/class-validator/esm5/decorator/common/IsDefined.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDefined = isDefined;
exports.IsDefined = IsDefined;
exports.IS_DEFINED = void 0;

var _ValidateBy = require("./ValidateBy");

var _ValidationTypes = require("../../validation/ValidationTypes");

// isDefined is (yet) a special case
var IS_DEFINED = _ValidationTypes.ValidationTypes.IS_DEFINED;
/**
 * Checks if value is defined (!== undefined, !== null).
 */

exports.IS_DEFINED = IS_DEFINED;

function isDefined(value) {
  return value !== undefined && value !== null;
}
/**
 * Checks if value is defined (!== undefined, !== null).
 */


function IsDefined(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_DEFINED,
    validator: {
      validate: function (value) {
        return isDefined(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not be null or undefined";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"./ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js"}],"node_modules/class-validator/esm5/decorator/common/IsOptional.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IsOptional = IsOptional;

var _ValidationTypes = require("../../validation/ValidationTypes");

var _ValidationMetadata = require("../../metadata/ValidationMetadata");

var _MetadataStorage = require("../../metadata/MetadataStorage");

/**
 * Checks if value is missing and if so, ignores all validators.
 */
function IsOptional(validationOptions) {
  return function (object, propertyName) {
    var args = {
      type: _ValidationTypes.ValidationTypes.CONDITIONAL_VALIDATION,
      target: object.constructor,
      propertyName: propertyName,
      constraints: [function (object, value) {
        return object[propertyName] !== null && object[propertyName] !== undefined;
      }],
      validationOptions: validationOptions
    };
    (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(args));
  };
}
},{"../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","../../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","../../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/class-validator/esm5/decorator/common/Validate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidatorConstraint = ValidatorConstraint;
exports.Validate = Validate;

var _ValidationMetadata = require("../../metadata/ValidationMetadata");

var _MetadataStorage = require("../../metadata/MetadataStorage");

var _ValidationTypes = require("../../validation/ValidationTypes");

var _ConstraintMetadata = require("../../metadata/ConstraintMetadata");

/**
 * Registers custom validator class.
 */
function ValidatorConstraint(options) {
  return function (target) {
    var isAsync = options && options.async ? true : false;
    var name = options && options.name ? options.name : "";

    if (!name) {
      name = target.name;
      if (!name) // generate name if it was not given
        name = name.replace(/\.?([A-Z]+)/g, function (x, y) {
          return "_" + y.toLowerCase();
        }).replace(/^_/, "");
    }

    var metadata = new _ConstraintMetadata.ConstraintMetadata(target, name, isAsync);
    (0, _MetadataStorage.getMetadataStorage)().addConstraintMetadata(metadata);
  };
}

function Validate(constraintClass, constraintsOrValidationOptions, maybeValidationOptions) {
  return function (object, propertyName) {
    var args = {
      type: _ValidationTypes.ValidationTypes.CUSTOM_VALIDATION,
      target: object.constructor,
      propertyName: propertyName,
      constraintCls: constraintClass,
      constraints: constraintsOrValidationOptions instanceof Array ? constraintsOrValidationOptions : undefined,
      validationOptions: !(constraintsOrValidationOptions instanceof Array) ? constraintsOrValidationOptions : maybeValidationOptions
    };
    (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(args));
  };
}
},{"../../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","../../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js","../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","../../metadata/ConstraintMetadata":"node_modules/class-validator/esm5/metadata/ConstraintMetadata.js"}],"node_modules/class-validator/esm5/decorator/common/ValidateIf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidateIf = ValidateIf;

var _ValidationTypes = require("../../validation/ValidationTypes");

var _ValidationMetadata = require("../../metadata/ValidationMetadata");

var _MetadataStorage = require("../../metadata/MetadataStorage");

/**
 * Objects / object arrays marked with this decorator will also be validated.
 */
function ValidateIf(condition, validationOptions) {
  return function (object, propertyName) {
    var args = {
      type: _ValidationTypes.ValidationTypes.CONDITIONAL_VALIDATION,
      target: object.constructor,
      propertyName: propertyName,
      constraints: [condition],
      validationOptions: validationOptions
    };
    (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(args));
  };
}
},{"../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","../../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","../../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/class-validator/esm5/decorator/common/ValidateNested.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidateNested = ValidateNested;

var tslib_1 = _interopRequireWildcard(require("tslib"));

var _ValidationTypes = require("../../validation/ValidationTypes");

var _ValidationMetadata = require("../../metadata/ValidationMetadata");

var _MetadataStorage = require("../../metadata/MetadataStorage");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Objects / object arrays marked with this decorator will also be validated.
 */
function ValidateNested(validationOptions) {
  var opts = tslib_1.__assign({}, validationOptions);

  var eachPrefix = opts.each ? "each value in " : "";
  opts.message = opts.message || eachPrefix + "nested property $property must be either object or array";
  return function (object, propertyName) {
    var args = {
      type: _ValidationTypes.ValidationTypes.NESTED_VALIDATION,
      target: object.constructor,
      propertyName: propertyName,
      validationOptions: opts
    };
    (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(args));
  };
}
},{"tslib":"node_modules/tslib/tslib.es6.js","../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","../../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","../../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/class-validator/esm5/decorator/common/ValidatePromise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidatePromise = ValidatePromise;

var _ValidationTypes = require("../../validation/ValidationTypes");

var _ValidationMetadata = require("../../metadata/ValidationMetadata");

var _MetadataStorage = require("../../metadata/MetadataStorage");

/**
 * Resolve promise before validation
 */
function ValidatePromise(validationOptions) {
  return function (object, propertyName) {
    var args = {
      type: _ValidationTypes.ValidationTypes.PROMISE_VALIDATION,
      target: object.constructor,
      propertyName: propertyName,
      validationOptions: validationOptions
    };
    (0, _MetadataStorage.getMetadataStorage)().addValidationMetadata(new _ValidationMetadata.ValidationMetadata(args));
  };
}
},{"../../validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","../../metadata/ValidationMetadata":"node_modules/class-validator/esm5/metadata/ValidationMetadata.js","../../metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js"}],"node_modules/validator/lib/util/assertString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = assertString;

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function assertString(input) {
  var isString = typeof input === 'string' || input instanceof String;

  if (!isString) {
    var invalidType;

    if (input === null) {
      invalidType = 'null';
    } else {
      invalidType = _typeof(input);

      if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {
        invalidType = input.constructor.name;
      } else {
        invalidType = "a ".concat(invalidType);
      }
    }

    throw new TypeError("Expected string but received ".concat(invalidType, "."));
  }
}

module.exports = exports.default;
module.exports.default = exports.default;
},{}],"node_modules/validator/lib/toDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toDate;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toDate(date) {
  (0, _assertString.default)(date);
  date = Date.parse(date);
  return !isNaN(date) ? new Date(date) : null;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/alpha.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.commaDecimal = exports.dotDecimal = exports.arabicLocales = exports.englishLocales = exports.decimal = exports.alphanumeric = exports.alpha = void 0;
var alpha = {
  'en-US': /^[A-Z]+$/i,
  'bg-BG': /^[А-Я]+$/i,
  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
  'da-DK': /^[A-ZÆØÅ]+$/i,
  'de-DE': /^[A-ZÄÖÜß]+$/i,
  'el-GR': /^[Α-ώ]+$/i,
  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,
  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,
  'nb-NO': /^[A-ZÆØÅ]+$/i,
  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,
  'nn-NO': /^[A-ZÆØÅ]+$/i,
  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,
  'ru-RU': /^[А-ЯЁ]+$/i,
  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,
  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,
  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,
  'sv-SE': /^[A-ZÅÄÖ]+$/i,
  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,
  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,
  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,
  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,
  he: /^[א-ת]+$/,
  'fa-IR': /^['آابپتثجچهخدذرزژسشصضطظعغفقکگلمنوهی']+$/i
};
exports.alpha = alpha;
var alphanumeric = {
  'en-US': /^[0-9A-Z]+$/i,
  'bg-BG': /^[0-9А-Я]+$/i,
  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,
  'da-DK': /^[0-9A-ZÆØÅ]+$/i,
  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,
  'el-GR': /^[0-9Α-ω]+$/i,
  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,
  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,
  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,
  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,
  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,
  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,
  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,
  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,
  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,
  'ru-RU': /^[0-9А-ЯЁ]+$/i,
  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,
  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,
  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,
  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,
  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,
  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,
  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,
  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,
  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,
  he: /^[0-9א-ת]+$/,
  'fa-IR': /^['0-9آابپتثجچهخدذرزژسشصضطظعغفقکگلمنوهی۱۲۳۴۵۶۷۸۹۰']+$/i
};
exports.alphanumeric = alphanumeric;
var decimal = {
  'en-US': '.',
  ar: '٫'
};
exports.decimal = decimal;
var englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];
exports.englishLocales = englishLocales;

for (var locale, i = 0; i < englishLocales.length; i++) {
  locale = "en-".concat(englishLocales[i]);
  alpha[locale] = alpha['en-US'];
  alphanumeric[locale] = alphanumeric['en-US'];
  decimal[locale] = decimal['en-US'];
} // Source: http://www.localeplanet.com/java/


var arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];
exports.arabicLocales = arabicLocales;

for (var _locale, _i = 0; _i < arabicLocales.length; _i++) {
  _locale = "ar-".concat(arabicLocales[_i]);
  alpha[_locale] = alpha.ar;
  alphanumeric[_locale] = alphanumeric.ar;
  decimal[_locale] = decimal.ar;
} // Source: https://en.wikipedia.org/wiki/Decimal_mark


var dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];
exports.dotDecimal = dotDecimal;
var commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-FR', 'it-IT', 'ku-IQ', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA'];
exports.commaDecimal = commaDecimal;

for (var _i2 = 0; _i2 < dotDecimal.length; _i2++) {
  decimal[dotDecimal[_i2]] = decimal['en-US'];
}

for (var _i3 = 0; _i3 < commaDecimal.length; _i3++) {
  decimal[commaDecimal[_i3]] = ',';
}

alpha['pt-BR'] = alpha['pt-PT'];
alphanumeric['pt-BR'] = alphanumeric['pt-PT'];
decimal['pt-BR'] = decimal['pt-PT']; // see #862

alpha['pl-Pl'] = alpha['pl-PL'];
alphanumeric['pl-Pl'] = alphanumeric['pl-PL'];
decimal['pl-Pl'] = decimal['pl-PL'];
},{}],"node_modules/validator/lib/isFloat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFloat;
exports.locales = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _alpha = require("./alpha");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isFloat(str, options) {
  (0, _assertString.default)(str);
  options = options || {};
  var float = new RegExp("^(?:[-+])?(?:[0-9]+)?(?:\\".concat(options.locale ? _alpha.decimal[options.locale] : '.', "[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$"));

  if (str === '' || str === '.' || str === '-' || str === '+') {
    return false;
  }

  var value = parseFloat(str.replace(',', '.'));
  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);
}

var locales = Object.keys(_alpha.decimal);
exports.locales = locales;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./alpha":"node_modules/validator/lib/alpha.js"}],"node_modules/validator/lib/toFloat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toFloat;

var _isFloat = _interopRequireDefault(require("./isFloat"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toFloat(str) {
  if (!(0, _isFloat.default)(str)) return NaN;
  return parseFloat(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./isFloat":"node_modules/validator/lib/isFloat.js"}],"node_modules/validator/lib/toInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toInt;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toInt(str, radix) {
  (0, _assertString.default)(str);
  return parseInt(str, radix || 10);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/toBoolean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toBoolean;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toBoolean(str, strict) {
  (0, _assertString.default)(str);

  if (strict) {
    return str === '1' || /^true$/i.test(str);
  }

  return str !== '0' && !/^false$/i.test(str) && str !== '';
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/equals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = equals;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function equals(str, comparison) {
  (0, _assertString.default)(str);
  return str === comparison;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/util/toString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = toString;

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function toString(input) {
  if (_typeof(input) === 'object' && input !== null) {
    if (typeof input.toString === 'function') {
      input = input.toString();
    } else {
      input = '[object Object]';
    }
  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {
    input = '';
  }

  return String(input);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{}],"node_modules/validator/lib/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = contains;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _toString = _interopRequireDefault(require("./util/toString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function contains(str, elem) {
  (0, _assertString.default)(str);
  return str.indexOf((0, _toString.default)(elem)) >= 0;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/toString":"node_modules/validator/lib/util/toString.js"}],"node_modules/validator/lib/matches.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = matches;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function matches(str, pattern, modifiers) {
  (0, _assertString.default)(str);

  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
    pattern = new RegExp(pattern, modifiers);
  }

  return pattern.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/util/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = merge;

function merge() {
  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var defaults = arguments.length > 1 ? arguments[1] : undefined;

  for (var key in defaults) {
    if (typeof obj[key] === 'undefined') {
      obj[key] = defaults[key];
    }
  }

  return obj;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{}],"node_modules/validator/lib/isByteLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isByteLength;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
/* eslint-disable prefer-rest-params */


function isByteLength(str, options) {
  (0, _assertString.default)(str);
  var min;
  var max;

  if (_typeof(options) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isByteLength(str, min [, max])
    min = arguments[1];
    max = arguments[2];
  }

  var len = encodeURI(str).split(/%..|./).length - 1;
  return len >= min && (typeof max === 'undefined' || len <= max);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isFQDN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFQDN;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _merge = _interopRequireDefault(require("./util/merge"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var default_fqdn_options = {
  require_tld: true,
  allow_underscores: false,
  allow_trailing_dot: false
};

function isFQDN(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_fqdn_options);
  /* Remove the optional trailing dot before checking validity */

  if (options.allow_trailing_dot && str[str.length - 1] === '.') {
    str = str.substring(0, str.length - 1);
  }

  var parts = str.split('.');

  for (var i = 0; i < parts.length; i++) {
    if (parts[i].length > 63) {
      return false;
    }
  }

  if (options.require_tld) {
    var tld = parts.pop();

    if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
      return false;
    } // disallow spaces


    if (/[\s\u2002-\u200B\u202F\u205F\u3000\uFEFF\uDB40\uDC20]/.test(tld)) {
      return false;
    }
  }

  for (var part, _i = 0; _i < parts.length; _i++) {
    part = parts[_i];

    if (options.allow_underscores) {
      part = part.replace(/_/g, '');
    }

    if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
      return false;
    } // disallow full-width chars


    if (/[\uff01-\uff5e]/.test(part)) {
      return false;
    }

    if (part[0] === '-' || part[part.length - 1] === '-') {
      return false;
    }
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/merge":"node_modules/validator/lib/util/merge.js"}],"node_modules/validator/lib/isIP.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIP;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/**
11.3.  Examples

   The following addresses

             fe80::1234 (on the 1st link of the node)
             ff02::5678 (on the 5th link of the node)
             ff08::9abc (on the 10th organization of the node)

   would be represented as follows:

             fe80::1234%1
             ff02::5678%5
             ff08::9abc%10

   (Here we assume a natural translation from a zone index to the
   <zone_id> part, where the Nth zone of any scope is translated into
   "N".)

   If we use interface names as <zone_id>, those addresses could also be
   represented as follows:

            fe80::1234%ne0
            ff02::5678%pvc1.3
            ff08::9abc%interface10

   where the interface "ne0" belongs to the 1st link, "pvc1.3" belongs
   to the 5th link, and "interface10" belongs to the 10th organization.
 * * */


var ipv4Maybe = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;
var ipv6Block = /^[0-9A-F]{1,4}$/i;

function isIP(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  (0, _assertString.default)(str);
  version = String(version);

  if (!version) {
    return isIP(str, 4) || isIP(str, 6);
  } else if (version === '4') {
    if (!ipv4Maybe.test(str)) {
      return false;
    }

    var parts = str.split('.').sort(function (a, b) {
      return a - b;
    });
    return parts[3] <= 255;
  } else if (version === '6') {
    var addressAndZone = [str]; // ipv6 addresses could have scoped architecture
    // according to https://tools.ietf.org/html/rfc4007#section-11

    if (str.includes('%')) {
      addressAndZone = str.split('%');

      if (addressAndZone.length !== 2) {
        // it must be just two parts
        return false;
      }

      if (!addressAndZone[0].includes(':')) {
        // the first part must be the address
        return false;
      }

      if (addressAndZone[1] === '') {
        // the second part must not be empty
        return false;
      }
    }

    var blocks = addressAndZone[0].split(':');
    var foundOmissionBlock = false; // marker to indicate ::
    // At least some OS accept the last 32 bits of an IPv6 address
    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
    // and '::a.b.c.d' is deprecated, but also valid.

    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);
    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

    if (blocks.length > expectedNumberOfBlocks) {
      return false;
    } // initial or final ::


    if (str === '::') {
      return true;
    } else if (str.substr(0, 2) === '::') {
      blocks.shift();
      blocks.shift();
      foundOmissionBlock = true;
    } else if (str.substr(str.length - 2) === '::') {
      blocks.pop();
      blocks.pop();
      foundOmissionBlock = true;
    }

    for (var i = 0; i < blocks.length; ++i) {
      // test for a :: which can not be at the string start/end
      // since those cases have been handled above
      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {
        if (foundOmissionBlock) {
          return false; // multiple :: in address
        }

        foundOmissionBlock = true;
      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {// it has been checked before that the last
        // block is a valid IPv4 address
      } else if (!ipv6Block.test(blocks[i])) {
        return false;
      }
    }

    if (foundOmissionBlock) {
      return blocks.length >= 1;
    }

    return blocks.length === expectedNumberOfBlocks;
  }

  return false;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isEmail.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmail;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _merge = _interopRequireDefault(require("./util/merge"));

var _isByteLength = _interopRequireDefault(require("./isByteLength"));

var _isFQDN = _interopRequireDefault(require("./isFQDN"));

var _isIP = _interopRequireDefault(require("./isIP"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

var default_email_options = {
  allow_display_name: false,
  require_display_name: false,
  allow_utf8_local_part: true,
  require_tld: true
};
/* eslint-disable max-len */

/* eslint-disable no-control-regex */

var splitNameAddress = /^([^\x00-\x1F\x7F-\x9F\cX]+)<(.+)>$/i;
var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
var gmailUserPart = /^[a-z\d]+$/;
var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;
var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;
var defaultMaxEmailLength = 254;
/* eslint-enable max-len */

/* eslint-enable no-control-regex */

/**
 * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2
 * @param {String} display_name
 */

function validateDisplayName(display_name) {
  var trim_quotes = display_name.match(/^"(.+)"$/i);
  var display_name_without_quotes = trim_quotes ? trim_quotes[1] : display_name; // display name with only spaces is not valid

  if (!display_name_without_quotes.trim()) {
    return false;
  } // check whether display name contains illegal character


  var contains_illegal = /[\.";<>]/.test(display_name_without_quotes);

  if (contains_illegal) {
    // if contains illegal characters,
    // must to be enclosed in double-quotes, otherwise it's not a valid display name
    if (!trim_quotes) {
      return false;
    } // the quotes in display name must start with character symbol \


    var all_start_with_back_slash = display_name_without_quotes.split('"').length === display_name_without_quotes.split('\\"').length;

    if (!all_start_with_back_slash) {
      return false;
    }
  }

  return true;
}

function isEmail(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_email_options);

  if (options.require_display_name || options.allow_display_name) {
    var display_email = str.match(splitNameAddress);

    if (display_email) {
      var display_name;

      var _display_email = _slicedToArray(display_email, 3);

      display_name = _display_email[1];
      str = _display_email[2]; // sometimes need to trim the last space to get the display name
      // because there may be a space between display name and email address
      // eg. myname <address@gmail.com>
      // the display name is `myname` instead of `myname `, so need to trim the last space

      if (display_name.endsWith(' ')) {
        display_name = display_name.substr(0, display_name.length - 1);
      }

      if (!validateDisplayName(display_name)) {
        return false;
      }
    } else if (options.require_display_name) {
      return false;
    }
  }

  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {
    return false;
  }

  var parts = str.split('@');
  var domain = parts.pop();
  var user = parts.join('@');
  var lower_domain = domain.toLowerCase();

  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {
    /*
      Previously we removed dots for gmail addresses before validating.
      This was removed because it allows `multiple..dots@gmail.com`
      to be reported as valid, but it is not.
      Gmail only normalizes single dots, removing them from here is pointless,
      should be done in normalizeEmail
    */
    user = user.toLowerCase(); // Removing sub-address from username before gmail validation

    var username = user.split('+')[0]; // Dots are not included in gmail length restriction

    if (!(0, _isByteLength.default)(username.replace('.', ''), {
      min: 6,
      max: 30
    })) {
      return false;
    }

    var _user_parts = username.split('.');

    for (var i = 0; i < _user_parts.length; i++) {
      if (!gmailUserPart.test(_user_parts[i])) {
        return false;
      }
    }
  }

  if (!(0, _isByteLength.default)(user, {
    max: 64
  }) || !(0, _isByteLength.default)(domain, {
    max: 254
  })) {
    return false;
  }

  if (!(0, _isFQDN.default)(domain, {
    require_tld: options.require_tld
  })) {
    if (!options.allow_ip_domain) {
      return false;
    }

    if (!(0, _isIP.default)(domain)) {
      if (!domain.startsWith('[') || !domain.endsWith(']')) {
        return false;
      }

      var noBracketdomain = domain.substr(1, domain.length - 2);

      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {
        return false;
      }
    }
  }

  if (user[0] === '"') {
    user = user.slice(1, user.length - 1);
    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);
  }

  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;
  var user_parts = user.split('.');

  for (var _i2 = 0; _i2 < user_parts.length; _i2++) {
    if (!pattern.test(user_parts[_i2])) {
      return false;
    }
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/merge":"node_modules/validator/lib/util/merge.js","./isByteLength":"node_modules/validator/lib/isByteLength.js","./isFQDN":"node_modules/validator/lib/isFQDN.js","./isIP":"node_modules/validator/lib/isIP.js"}],"node_modules/validator/lib/isURL.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isURL;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _isFQDN = _interopRequireDefault(require("./isFQDN"));

var _isIP = _interopRequireDefault(require("./isIP"));

var _merge = _interopRequireDefault(require("./util/merge"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/*
options for isURL method

require_protocol - if set as true isURL will return false if protocol is not present in the URL
require_valid_protocol - isURL will check if the URL's protocol is present in the protocols option
protocols - valid protocols can be modified with this option
require_host - if set as false isURL will not check if host is present in the URL
allow_protocol_relative_urls - if set as true protocol relative URLs will be allowed

*/


var default_url_options = {
  protocols: ['http', 'https', 'ftp'],
  require_tld: true,
  require_protocol: false,
  require_host: true,
  require_valid_protocol: true,
  allow_underscores: false,
  allow_trailing_dot: false,
  allow_protocol_relative_urls: false
};
var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;

function isRegExp(obj) {
  return Object.prototype.toString.call(obj) === '[object RegExp]';
}

function checkHost(host, matches) {
  for (var i = 0; i < matches.length; i++) {
    var match = matches[i];

    if (host === match || isRegExp(match) && match.test(host)) {
      return true;
    }
  }

  return false;
}

function isURL(url, options) {
  (0, _assertString.default)(url);

  if (!url || url.length >= 2083 || /[\s<>]/.test(url)) {
    return false;
  }

  if (url.indexOf('mailto:') === 0) {
    return false;
  }

  options = (0, _merge.default)(options, default_url_options);
  var protocol, auth, host, hostname, port, port_str, split, ipv6;
  split = url.split('#');
  url = split.shift();
  split = url.split('?');
  url = split.shift();
  split = url.split('://');

  if (split.length > 1) {
    protocol = split.shift().toLowerCase();

    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
      return false;
    }
  } else if (options.require_protocol) {
    return false;
  } else if (url.substr(0, 2) === '//') {
    if (!options.allow_protocol_relative_urls) {
      return false;
    }

    split[0] = url.substr(2);
  }

  url = split.join('://');

  if (url === '') {
    return false;
  }

  split = url.split('/');
  url = split.shift();

  if (url === '' && !options.require_host) {
    return true;
  }

  split = url.split('@');

  if (split.length > 1) {
    if (options.disallow_auth) {
      return false;
    }

    auth = split.shift();

    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
      return false;
    }
  }

  hostname = split.join('@');
  port_str = null;
  ipv6 = null;
  var ipv6_match = hostname.match(wrapped_ipv6);

  if (ipv6_match) {
    host = '';
    ipv6 = ipv6_match[1];
    port_str = ipv6_match[2] || null;
  } else {
    split = hostname.split(':');
    host = split.shift();

    if (split.length) {
      port_str = split.join(':');
    }
  }

  if (port_str !== null) {
    port = parseInt(port_str, 10);

    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
      return false;
    }
  }

  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {
    return false;
  }

  host = host || ipv6;

  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {
    return false;
  }

  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
    return false;
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./isFQDN":"node_modules/validator/lib/isFQDN.js","./isIP":"node_modules/validator/lib/isIP.js","./util/merge":"node_modules/validator/lib/util/merge.js"}],"node_modules/validator/lib/isMACAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMACAddress;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;
var macAddressNoColons = /^([0-9a-fA-F]){12}$/;
var macAddressWithHyphen = /^([0-9a-fA-F][0-9a-fA-F]-){5}([0-9a-fA-F][0-9a-fA-F])$/;
var macAddressWithSpaces = /^([0-9a-fA-F][0-9a-fA-F]\s){5}([0-9a-fA-F][0-9a-fA-F])$/;
var macAddressWithDots = /^([0-9a-fA-F]{4}).([0-9a-fA-F]{4}).([0-9a-fA-F]{4})$/;

function isMACAddress(str, options) {
  (0, _assertString.default)(str);

  if (options && options.no_colons) {
    return macAddressNoColons.test(str);
  }

  return macAddress.test(str) || macAddressWithHyphen.test(str) || macAddressWithSpaces.test(str) || macAddressWithDots.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isIPRange.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIPRange;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _isIP = _interopRequireDefault(require("./isIP"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var subnetMaybe = /^\d{1,2}$/;

function isIPRange(str) {
  (0, _assertString.default)(str);
  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet

  if (parts.length !== 2) {
    return false;
  }

  if (!subnetMaybe.test(parts[1])) {
    return false;
  } // Disallow preceding 0 i.e. 01, 02, ...


  if (parts[1].length > 1 && parts[1].startsWith('0')) {
    return false;
  }

  return (0, _isIP.default)(parts[0], 4) && parts[1] <= 32 && parts[1] >= 0;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./isIP":"node_modules/validator/lib/isIP.js"}],"node_modules/validator/lib/isBoolean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBoolean;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isBoolean(str) {
  (0, _assertString.default)(str);
  return ['true', 'false', '1', '0'].indexOf(str) >= 0;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isLocale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isLocale;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var localeReg = /^[A-z]{2,4}([_-]([A-z]{4}|[\d]{3}))?([_-]([A-z]{2}|[\d]{3}))?$/;

function isLocale(str) {
  (0, _assertString.default)(str);

  if (str === 'en_US_POSIX' || str === 'ca_ES_VALENCIA') {
    return true;
  }

  return localeReg.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isAlpha.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAlpha;
exports.locales = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _alpha = require("./alpha");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isAlpha(str) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';
  (0, _assertString.default)(str);

  if (locale in _alpha.alpha) {
    return _alpha.alpha[locale].test(str);
  }

  throw new Error("Invalid locale '".concat(locale, "'"));
}

var locales = Object.keys(_alpha.alpha);
exports.locales = locales;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./alpha":"node_modules/validator/lib/alpha.js"}],"node_modules/validator/lib/isAlphanumeric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAlphanumeric;
exports.locales = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _alpha = require("./alpha");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isAlphanumeric(str) {
  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';
  (0, _assertString.default)(str);

  if (locale in _alpha.alphanumeric) {
    return _alpha.alphanumeric[locale].test(str);
  }

  throw new Error("Invalid locale '".concat(locale, "'"));
}

var locales = Object.keys(_alpha.alphanumeric);
exports.locales = locales;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./alpha":"node_modules/validator/lib/alpha.js"}],"node_modules/validator/lib/isNumeric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isNumeric;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var numeric = /^[+-]?([0-9]*[.])?[0-9]+$/;
var numericNoSymbols = /^[0-9]+$/;

function isNumeric(str, options) {
  (0, _assertString.default)(str);

  if (options && options.no_symbols) {
    return numericNoSymbols.test(str);
  }

  return numeric.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isPassportNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isPassportNumber;
/**
 * Reference:
 * https://en.wikipedia.org/ -- Wikipedia
 * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number
 * https://countrycode.org/ -- Country Codes
 */

var passportRegexByCountryCode = {
  AM: /^[A-Z]{2}\d{7}$/,
  // ARMENIA
  AR: /^[A-Z]{3}\d{6}$/,
  // ARGENTINA
  AT: /^[A-Z]\d{7}$/,
  // AUSTRIA
  AU: /^[A-Z]\d{7}$/,
  // AUSTRALIA
  BE: /^[A-Z]{2}\d{6}$/,
  // BELGIUM
  BG: /^\d{9}$/,
  // BULGARIA
  CA: /^[A-Z]{2}\d{6}$/,
  // CANADA
  CH: /^[A-Z]\d{7}$/,
  // SWITZERLAND
  CN: /^[GE]\d{8}$/,
  // CHINA [G=Ordinary, E=Electronic] followed by 8-digits
  CY: /^[A-Z](\d{6}|\d{8})$/,
  // CYPRUS
  CZ: /^\d{8}$/,
  // CZECH REPUBLIC
  DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,
  // GERMANY
  DK: /^\d{9}$/,
  // DENMARK
  DZ: /^\d{9}$/,
  // ALGERIA
  EE: /^([A-Z]\d{7}|[A-Z]{2}\d{7})$/,
  // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits
  ES: /^[A-Z0-9]{2}([A-Z0-9]?)\d{6}$/,
  // SPAIN
  FI: /^[A-Z]{2}\d{7}$/,
  // FINLAND
  FR: /^\d{2}[A-Z]{2}\d{5}$/,
  // FRANCE
  GB: /^\d{9}$/,
  // UNITED KINGDOM
  GR: /^[A-Z]{2}\d{7}$/,
  // GREECE
  HR: /^\d{9}$/,
  // CROATIA
  HU: /^[A-Z]{2}(\d{6}|\d{7})$/,
  // HUNGARY
  IE: /^[A-Z0-9]{2}\d{7}$/,
  // IRELAND
  IS: /^(A)\d{7}$/,
  // ICELAND
  IT: /^[A-Z0-9]{2}\d{7}$/,
  // ITALY
  JP: /^[A-Z]{2}\d{7}$/,
  // JAPAN
  KR: /^[MS]\d{8}$/,
  // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]
  LT: /^[A-Z0-9]{8}$/,
  // LITHUANIA
  LU: /^[A-Z0-9]{8}$/,
  // LUXEMBURG
  LV: /^[A-Z0-9]{2}\d{7}$/,
  // LATVIA
  MT: /^\d{7}$/,
  // MALTA
  NL: /^[A-Z]{2}[A-Z0-9]{6}\d$/,
  // NETHERLANDS
  PO: /^[A-Z]{2}\d{7}$/,
  // POLAND
  PT: /^[A-Z]\d{6}$/,
  // PORTUGAL
  RO: /^\d{8,9}$/,
  // ROMANIA
  SE: /^\d{8}$/,
  // SWEDEN
  SL: /^(P)[A-Z]\d{7}$/,
  // SLOVANIA
  SK: /^[0-9A-Z]\d{7}$/,
  // SLOVAKIA
  TR: /^[A-Z]\d{8}$/,
  // TURKEY
  UA: /^[A-Z]{2}\d{6}$/,
  // UKRAINE
  US: /^\d{9}$/ // UNITED STATES

};
/**
 * Check if str is a valid passport number
 * relative to provided ISO Country Code.
 *
 * @param {string} str
 * @param {string} countryCode
 * @return {boolean}
 */

function isPassportNumber(str, countryCode) {
  /** Remove All Whitespaces, Convert to UPPERCASE */
  var normalizedStr = str.replace(/\s/g, '').toUpperCase();
  return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{}],"node_modules/validator/lib/isInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isInt;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;
var intLeadingZeroes = /^[-+]?[0-9]+$/;

function isInt(str, options) {
  (0, _assertString.default)(str);
  options = options || {}; // Get the regex to use for testing, based on whether
  // leading zeroes are allowed or not.

  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt

  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;
  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;
  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;
  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;
  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isPort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isPort;

var _isInt = _interopRequireDefault(require("./isInt"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isPort(str) {
  return (0, _isInt.default)(str, {
    min: 0,
    max: 65535
  });
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./isInt":"node_modules/validator/lib/isInt.js"}],"node_modules/validator/lib/isLowercase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isLowercase;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isLowercase(str) {
  (0, _assertString.default)(str);
  return str === str.toLowerCase();
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isUppercase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isUppercase;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isUppercase(str) {
  (0, _assertString.default)(str);
  return str === str.toUpperCase();
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isAscii.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAscii;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* eslint-disable no-control-regex */


var ascii = /^[\x00-\x7F]+$/;
/* eslint-enable no-control-regex */

function isAscii(str) {
  (0, _assertString.default)(str);
  return ascii.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isFullWidth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isFullWidth;
exports.fullWidth = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;
exports.fullWidth = fullWidth;

function isFullWidth(str) {
  (0, _assertString.default)(str);
  return fullWidth.test(str);
}
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isHalfWidth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHalfWidth;
exports.halfWidth = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;
exports.halfWidth = halfWidth;

function isHalfWidth(str) {
  (0, _assertString.default)(str);
  return halfWidth.test(str);
}
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isVariableWidth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isVariableWidth;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _isFullWidth = require("./isFullWidth");

var _isHalfWidth = require("./isHalfWidth");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isVariableWidth(str) {
  (0, _assertString.default)(str);
  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./isFullWidth":"node_modules/validator/lib/isFullWidth.js","./isHalfWidth":"node_modules/validator/lib/isHalfWidth.js"}],"node_modules/validator/lib/isMultibyte.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMultibyte;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* eslint-disable no-control-regex */


var multibyte = /[^\x00-\x7F]/;
/* eslint-enable no-control-regex */

function isMultibyte(str) {
  (0, _assertString.default)(str);
  return multibyte.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/util/multilineRegex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = multilineRegexp;
/**
 * Build RegExp object from an array
 * of multiple/multi-line regexp parts
 *
 * @param {string[]} parts
 * @param {string} flags
 * @return {object} - RegExp object
 */

function multilineRegexp(parts) {
  var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var regexpAsStringLiteral = parts.join('');
  return new RegExp(regexpAsStringLiteral, flags);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{}],"node_modules/validator/lib/isSemVer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isSemVer;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _multilineRegex = _interopRequireDefault(require("./util/multilineRegex"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/**
 * Regular Expression to match
 * semantic versioning (SemVer)
 * built from multi-line, multi-parts regexp
 * Reference: https://semver.org/
 */


var semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)', '(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))', '?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$']);

function isSemVer(str) {
  (0, _assertString.default)(str);
  return semanticVersioningRegex.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/multilineRegex":"node_modules/validator/lib/util/multilineRegex.js"}],"node_modules/validator/lib/isSurrogatePair.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isSurrogatePair;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

function isSurrogatePair(str) {
  (0, _assertString.default)(str);
  return surrogatePair.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/util/includes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var includes = function includes(arr, val) {
  return arr.some(function (arrVal) {
    return val === arrVal;
  });
};

var _default = includes;
exports.default = _default;
module.exports = exports.default;
module.exports.default = exports.default;
},{}],"node_modules/validator/lib/isDecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDecimal;

var _merge = _interopRequireDefault(require("./util/merge"));

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _includes = _interopRequireDefault(require("./util/includes"));

var _alpha = require("./alpha");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function decimalRegExp(options) {
  var regExp = new RegExp("^[-+]?([0-9]+)?(\\".concat(_alpha.decimal[options.locale], "[0-9]{").concat(options.decimal_digits, "})").concat(options.force_decimal ? '' : '?', "$"));
  return regExp;
}

var default_decimal_options = {
  force_decimal: false,
  decimal_digits: '1,',
  locale: 'en-US'
};
var blacklist = ['', '-', '+'];

function isDecimal(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_decimal_options);

  if (options.locale in _alpha.decimal) {
    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);
  }

  throw new Error("Invalid locale '".concat(options.locale, "'"));
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/merge":"node_modules/validator/lib/util/merge.js","./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/includes":"node_modules/validator/lib/util/includes.js","./alpha":"node_modules/validator/lib/alpha.js"}],"node_modules/validator/lib/isHexadecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHexadecimal;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;

function isHexadecimal(str) {
  (0, _assertString.default)(str);
  return hexadecimal.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isOctal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isOctal;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var octal = /^(0o)?[0-7]+$/i;

function isOctal(str) {
  (0, _assertString.default)(str);
  return octal.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isDivisibleBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDivisibleBy;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _toFloat = _interopRequireDefault(require("./toFloat"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isDivisibleBy(str, num) {
  (0, _assertString.default)(str);
  return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./toFloat":"node_modules/validator/lib/toFloat.js"}],"node_modules/validator/lib/isHexColor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHexColor;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;

function isHexColor(str) {
  (0, _assertString.default)(str);
  return hexcolor.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isRgbColor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isRgbColor;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var rgbColor = /^rgb\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\)$/;
var rgbaColor = /^rgba\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\.\d|1(\.0)?|0(\.0)?)\)$/;
var rgbColorPercent = /^rgb\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\)/;
var rgbaColorPercent = /^rgba\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\.\d|1(\.0)?|0(\.0)?)\)/;

function isRgbColor(str) {
  var includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  (0, _assertString.default)(str);

  if (!includePercentValues) {
    return rgbColor.test(str) || rgbaColor.test(str);
  }

  return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isHSL.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHSL;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var hslcomma = /^(hsl)a?\(\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?))(deg|grad|rad|turn|\s*)(\s*,\s*(\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%){2}\s*(,\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%?)\s*)?\)$/i;
var hslspace = /^(hsl)a?\(\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?))(deg|grad|rad|turn|\s)(\s*(\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%){2}\s*(\/\s*((\+|\-)?([0-9]+(\.[0-9]+)?(e(\+|\-)?[0-9]+)?|\.[0-9]+(e(\+|\-)?[0-9]+)?)%?)\s*)?\)$/i;

function isHSL(str) {
  (0, _assertString.default)(str);
  return hslcomma.test(str) || hslspace.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isISRC.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISRC;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} // see http://isrc.ifpi.org/en/isrc-standard/code-syntax


var isrc = /^[A-Z]{2}[0-9A-Z]{3}\d{2}\d{5}$/;

function isISRC(str) {
  (0, _assertString.default)(str);
  return isrc.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isIBAN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIBAN;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/**
 * List of country codes with
 * corresponding IBAN regular expression
 * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number
 */


var ibanRegexThroughCountryCode = {
  AD: /^(AD[0-9]{2})\d{8}[A-Z0-9]{12}$/,
  AE: /^(AE[0-9]{2})\d{3}\d{16}$/,
  AL: /^(AL[0-9]{2})\d{8}[A-Z0-9]{16}$/,
  AT: /^(AT[0-9]{2})\d{16}$/,
  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\d{20}$/,
  BA: /^(BA[0-9]{2})\d{16}$/,
  BE: /^(BE[0-9]{2})\d{12}$/,
  BG: /^(BG[0-9]{2})[A-Z]{4}\d{6}[A-Z0-9]{8}$/,
  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,
  BR: /^(BR[0-9]{2})\d{23}[A-Z]{1}[A-Z0-9]{1}$/,
  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\d{20}$/,
  CH: /^(CH[0-9]{2})\d{5}[A-Z0-9]{12}$/,
  CR: /^(CR[0-9]{2})\d{18}$/,
  CY: /^(CY[0-9]{2})\d{8}[A-Z0-9]{16}$/,
  CZ: /^(CZ[0-9]{2})\d{20}$/,
  DE: /^(DE[0-9]{2})\d{18}$/,
  DK: /^(DK[0-9]{2})\d{14}$/,
  DO: /^(DO[0-9]{2})[A-Z]{4}\d{20}$/,
  EE: /^(EE[0-9]{2})\d{16}$/,
  ES: /^(ES[0-9]{2})\d{20}$/,
  FI: /^(FI[0-9]{2})\d{14}$/,
  FO: /^(FO[0-9]{2})\d{14}$/,
  FR: /^(FR[0-9]{2})\d{10}[A-Z0-9]{11}\d{2}$/,
  GB: /^(GB[0-9]{2})[A-Z]{4}\d{14}$/,
  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\d{16}$/,
  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,
  GL: /^(GL[0-9]{2})\d{14}$/,
  GR: /^(GR[0-9]{2})\d{7}[A-Z0-9]{16}$/,
  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,
  HR: /^(HR[0-9]{2})\d{17}$/,
  HU: /^(HU[0-9]{2})\d{24}$/,
  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\d{14}$/,
  IL: /^(IL[0-9]{2})\d{19}$/,
  IQ: /^(IQ[0-9]{2})[A-Z]{4}\d{15}$/,
  IS: /^(IS[0-9]{2})\d{22}$/,
  IT: /^(IT[0-9]{2})[A-Z]{1}\d{10}[A-Z0-9]{12}$/,
  JO: /^(JO[0-9]{2})[A-Z]{4}\d{22}$/,
  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,
  KZ: /^(KZ[0-9]{2})\d{3}[A-Z0-9]{13}$/,
  LB: /^(LB[0-9]{2})\d{4}[A-Z0-9]{20}$/,
  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,
  LI: /^(LI[0-9]{2})\d{5}[A-Z0-9]{12}$/,
  LT: /^(LT[0-9]{2})\d{16}$/,
  LU: /^(LU[0-9]{2})\d{3}[A-Z0-9]{13}$/,
  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,
  MC: /^(MC[0-9]{2})\d{10}[A-Z0-9]{11}\d{2}$/,
  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,
  ME: /^(ME[0-9]{2})\d{18}$/,
  MK: /^(MK[0-9]{2})\d{3}[A-Z0-9]{10}\d{2}$/,
  MR: /^(MR[0-9]{2})\d{23}$/,
  MT: /^(MT[0-9]{2})[A-Z]{4}\d{5}[A-Z0-9]{18}$/,
  MU: /^(MU[0-9]{2})[A-Z]{4}\d{19}[A-Z]{3}$/,
  NL: /^(NL[0-9]{2})[A-Z]{4}\d{10}$/,
  NO: /^(NO[0-9]{2})\d{11}$/,
  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\d{16}$/,
  PL: /^(PL[0-9]{2})\d{24}$/,
  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\d{21}$/,
  PT: /^(PT[0-9]{2})\d{21}$/,
  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,
  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,
  RS: /^(RS[0-9]{2})\d{18}$/,
  SA: /^(SA[0-9]{2})\d{2}[A-Z0-9]{18}$/,
  SC: /^(SC[0-9]{2})[A-Z]{4}\d{20}[A-Z]{3}$/,
  SE: /^(SE[0-9]{2})\d{20}$/,
  SI: /^(SI[0-9]{2})\d{15}$/,
  SK: /^(SK[0-9]{2})\d{20}$/,
  SM: /^(SM[0-9]{2})[A-Z]{1}\d{10}[A-Z0-9]{12}$/,
  TL: /^(TL[0-9]{2})\d{19}$/,
  TN: /^(TN[0-9]{2})\d{20}$/,
  TR: /^(TR[0-9]{2})\d{5}[A-Z0-9]{17}$/,
  UA: /^(UA[0-9]{2})\d{6}[A-Z0-9]{19}$/,
  VA: /^(VA[0-9]{2})\d{18}$/,
  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\d{16}$/,
  XK: /^(XK[0-9]{2})\d{16}$/
};
/**
 * Check whether string has correct universal IBAN format
 * The IBAN consists of up to 34 alphanumeric characters, as follows:
 * Country Code using ISO 3166-1 alpha-2, two letters
 * check digits, two digits and
 * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.
 * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]
 *
 * @param {string} str - string under validation
 * @return {boolean}
 */

function hasValidIbanFormat(str) {
  // Strip white spaces and hyphens
  var strippedStr = str.replace(/[\s\-]+/gi, '').toUpperCase();
  var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();
  return isoCountryCode in ibanRegexThroughCountryCode && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);
}
/**
   * Check whether string has valid IBAN Checksum
   * by performing basic mod-97 operation and
   * the remainder should equal 1
   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string
   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35
   * -- Interpret the string as a decimal integer and
   * -- compute the remainder on division by 97 (mod 97)
   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number
   *
   * @param {string} str
   * @return {boolean}
   */


function hasValidIbanChecksum(str) {
  var strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic

  var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);
  var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (char) {
    return char.charCodeAt(0) - 55;
  });
  var remainder = alphaCapsReplacedWithDigits.match(/\d{1,7}/g).reduce(function (acc, value) {
    return Number(acc + value) % 97;
  }, '');
  return remainder === 1;
}

function isIBAN(str) {
  (0, _assertString.default)(str);
  return hasValidIbanFormat(str) && hasValidIbanChecksum(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isBIC.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBIC;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var isBICReg = /^[A-z]{4}[A-z]{2}\w{2}(\w{3})?$/;

function isBIC(str) {
  (0, _assertString.default)(str);
  return isBICReg.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isMD5.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMD5;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var md5 = /^[a-f0-9]{32}$/;

function isMD5(str) {
  (0, _assertString.default)(str);
  return md5.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isHash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isHash;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var lengths = {
  md5: 32,
  md4: 32,
  sha1: 40,
  sha256: 64,
  sha384: 96,
  sha512: 128,
  ripemd128: 32,
  ripemd160: 40,
  tiger128: 32,
  tiger160: 40,
  tiger192: 48,
  crc32: 8,
  crc32b: 8
};

function isHash(str, algorithm) {
  (0, _assertString.default)(str);
  var hash = new RegExp("^[a-fA-F0-9]{".concat(lengths[algorithm], "}$"));
  return hash.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isJWT.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isJWT;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var jwt = /^([A-Za-z0-9\-_~+\/]+[=]{0,2})\.([A-Za-z0-9\-_~+\/]+[=]{0,2})(?:\.([A-Za-z0-9\-_~+\/]+[=]{0,2}))?$/;

function isJWT(str) {
  (0, _assertString.default)(str);
  return jwt.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isJSON.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isJSON;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function isJSON(str) {
  (0, _assertString.default)(str);

  try {
    var obj = JSON.parse(str);
    return !!obj && _typeof(obj) === 'object';
  } catch (e) {
    /* ignore */
  }

  return false;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEmpty;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _merge = _interopRequireDefault(require("./util/merge"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var default_is_empty_options = {
  ignore_whitespace: false
};

function isEmpty(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_is_empty_options);
  return (options.ignore_whitespace ? str.trim().length : str.length) === 0;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/merge":"node_modules/validator/lib/util/merge.js"}],"node_modules/validator/lib/isLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isLength;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
/* eslint-disable prefer-rest-params */


function isLength(str, options) {
  (0, _assertString.default)(str);
  var min;
  var max;

  if (_typeof(options) === 'object') {
    min = options.min || 0;
    max = options.max;
  } else {
    // backwards compatibility: isLength(str, min [, max])
    min = arguments[1] || 0;
    max = arguments[2];
  }

  var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
  var len = str.length - surrogatePairs.length;
  return len >= min && (typeof max === 'undefined' || len <= max);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isUUID.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isUUID;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var uuid = {
  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
};

function isUUID(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';
  (0, _assertString.default)(str);
  var pattern = uuid[version];
  return pattern && pattern.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isMongoId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMongoId;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _isHexadecimal = _interopRequireDefault(require("./isHexadecimal"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isMongoId(str) {
  (0, _assertString.default)(str);
  return (0, _isHexadecimal.default)(str) && str.length === 24;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./isHexadecimal":"node_modules/validator/lib/isHexadecimal.js"}],"node_modules/validator/lib/isAfter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isAfter;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _toDate = _interopRequireDefault(require("./toDate"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isAfter(str) {
  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());
  (0, _assertString.default)(str);
  var comparison = (0, _toDate.default)(date);
  var original = (0, _toDate.default)(str);
  return !!(original && comparison && original > comparison);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./toDate":"node_modules/validator/lib/toDate.js"}],"node_modules/validator/lib/isBefore.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBefore;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _toDate = _interopRequireDefault(require("./toDate"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isBefore(str) {
  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());
  (0, _assertString.default)(str);
  var comparison = (0, _toDate.default)(date);
  var original = (0, _toDate.default)(str);
  return !!(original && comparison && original < comparison);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./toDate":"node_modules/validator/lib/toDate.js"}],"node_modules/validator/lib/isIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIn;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _toString = _interopRequireDefault(require("./util/toString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function isIn(str, options) {
  (0, _assertString.default)(str);
  var i;

  if (Object.prototype.toString.call(options) === '[object Array]') {
    var array = [];

    for (i in options) {
      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
      // istanbul ignore else
      if ({}.hasOwnProperty.call(options, i)) {
        array[i] = (0, _toString.default)(options[i]);
      }
    }

    return array.indexOf(str) >= 0;
  } else if (_typeof(options) === 'object') {
    return options.hasOwnProperty(str);
  } else if (options && typeof options.indexOf === 'function') {
    return options.indexOf(str) >= 0;
  }

  return false;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/toString":"node_modules/validator/lib/util/toString.js"}],"node_modules/validator/lib/isCreditCard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCreditCard;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* eslint-disable max-len */


var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11}|6[27][0-9]{14})$/;
/* eslint-enable max-len */

function isCreditCard(str) {
  (0, _assertString.default)(str);
  var sanitized = str.replace(/[- ]+/g, '');

  if (!creditCard.test(sanitized)) {
    return false;
  }

  var sum = 0;
  var digit;
  var tmpNum;
  var shouldDouble;

  for (var i = sanitized.length - 1; i >= 0; i--) {
    digit = sanitized.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);

    if (shouldDouble) {
      tmpNum *= 2;

      if (tmpNum >= 10) {
        sum += tmpNum % 10 + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }

    shouldDouble = !shouldDouble;
  }

  return !!(sum % 10 === 0 ? sanitized : false);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isIdentityCard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isIdentityCard;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var validators = {
  ES: function ES(str) {
    (0, _assertString.default)(str);
    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;
    var charsValue = {
      X: 0,
      Y: 1,
      Z: 2
    };
    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input

    var sanitized = str.trim().toUpperCase(); // validate the data structure

    if (!DNI.test(sanitized)) {
      return false;
    } // validate the control digit


    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {
      return charsValue[char];
    });
    return sanitized.endsWith(controlDigits[number % 23]);
  },
  'he-IL': function heIL(str) {
    var DNI = /^\d{9}$/; // sanitize user input

    var sanitized = str.trim(); // validate the data structure

    if (!DNI.test(sanitized)) {
      return false;
    }

    var id = sanitized;
    var sum = 0,
        incNum;

    for (var i = 0; i < id.length; i++) {
      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2

      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total
    }

    return sum % 10 === 0;
  },
  'zh-TW': function zhTW(str) {
    var ALPHABET_CODES = {
      A: 10,
      B: 11,
      C: 12,
      D: 13,
      E: 14,
      F: 15,
      G: 16,
      H: 17,
      I: 34,
      J: 18,
      K: 19,
      L: 20,
      M: 21,
      N: 22,
      O: 35,
      P: 23,
      Q: 24,
      R: 25,
      S: 26,
      T: 27,
      U: 28,
      V: 29,
      W: 32,
      X: 30,
      Y: 31,
      Z: 33
    };
    var sanitized = str.trim().toUpperCase();
    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;
    return Array.from(sanitized).reduce(function (sum, number, index) {
      if (index === 0) {
        var code = ALPHABET_CODES[number];
        return code % 10 * 9 + Math.floor(code / 10);
      }

      if (index === 9) {
        return (10 - sum % 10 - Number(number)) % 10 === 0;
      }

      return sum + Number(number) * (9 - index);
    }, 0);
  }
};

function isIdentityCard(str, locale) {
  (0, _assertString.default)(str);

  if (locale in validators) {
    return validators[locale](str);
  } else if (locale === 'any') {
    for (var key in validators) {
      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
      // istanbul ignore else
      if (validators.hasOwnProperty(key)) {
        var validator = validators[key];

        if (validator(str)) {
          return true;
        }
      }
    }

    return false;
  }

  throw new Error("Invalid locale '".concat(locale, "'"));
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isEAN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEAN;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/**
 * The most commonly used EAN standard is
 * the thirteen-digit EAN-13, while the
 * less commonly used 8-digit EAN-8 barcode was
 * introduced for use on small packages.
 * EAN consists of:
 * GS1 prefix, manufacturer code, product code and check digit
 * Reference: https://en.wikipedia.org/wiki/International_Article_Number
 */

/**
 * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13
 * and Regular Expression for valid EANs (EAN-8, EAN-13),
 * with exact numberic matching of 8 or 13 digits [0-9]
 */


var LENGTH_EAN_8 = 8;
var validEanRegex = /^(\d{8}|\d{13})$/;
/**
 * Get position weight given:
 * EAN length and digit index/position
 *
 * @param {number} length
 * @param {number} index
 * @return {number}
 */

function getPositionWeightThroughLengthAndIndex(length, index) {
  if (length === LENGTH_EAN_8) {
    return index % 2 === 0 ? 3 : 1;
  }

  return index % 2 === 0 ? 1 : 3;
}
/**
 * Calculate EAN Check Digit
 * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit
 *
 * @param {string} ean
 * @return {number}
 */


function calculateCheckDigit(ean) {
  var checksum = ean.slice(0, -1).split('').map(function (char, index) {
    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);
  }).reduce(function (acc, partialSum) {
    return acc + partialSum;
  }, 0);
  var remainder = 10 - checksum % 10;
  return remainder < 10 ? remainder : 0;
}
/**
 * Check if string is valid EAN:
 * Matches EAN-8/EAN-13 regex
 * Has valid check digit.
 *
 * @param {string} str
 * @return {boolean}
 */


function isEAN(str) {
  (0, _assertString.default)(str);
  var actualCheckDigit = Number(str.slice(-1));
  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isISIN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISIN;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

function isISIN(str) {
  (0, _assertString.default)(str);

  if (!isin.test(str)) {
    return false;
  }

  var checksumStr = str.replace(/[A-Z]/g, function (character) {
    return parseInt(character, 36);
  });
  var sum = 0;
  var digit;
  var tmpNum;
  var shouldDouble = true;

  for (var i = checksumStr.length - 2; i >= 0; i--) {
    digit = checksumStr.substring(i, i + 1);
    tmpNum = parseInt(digit, 10);

    if (shouldDouble) {
      tmpNum *= 2;

      if (tmpNum >= 10) {
        sum += tmpNum + 1;
      } else {
        sum += tmpNum;
      }
    } else {
      sum += tmpNum;
    }

    shouldDouble = !shouldDouble;
  }

  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isISBN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISBN;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;
var isbn13Maybe = /^(?:[0-9]{13})$/;
var factor = [1, 3];

function isISBN(str) {
  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  (0, _assertString.default)(str);
  version = String(version);

  if (!version) {
    return isISBN(str, 10) || isISBN(str, 13);
  }

  var sanitized = str.replace(/[\s-]+/g, '');
  var checksum = 0;
  var i;

  if (version === '10') {
    if (!isbn10Maybe.test(sanitized)) {
      return false;
    }

    for (i = 0; i < 9; i++) {
      checksum += (i + 1) * sanitized.charAt(i);
    }

    if (sanitized.charAt(9) === 'X') {
      checksum += 10 * 10;
    } else {
      checksum += 10 * sanitized.charAt(9);
    }

    if (checksum % 11 === 0) {
      return !!sanitized;
    }
  } else if (version === '13') {
    if (!isbn13Maybe.test(sanitized)) {
      return false;
    }

    for (i = 0; i < 12; i++) {
      checksum += factor[i % 2] * sanitized.charAt(i);
    }

    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {
      return !!sanitized;
    }
  }

  return false;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isISSN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISSN;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var issn = '^\\d{4}-?\\d{3}[\\dX]$';

function isISSN(str) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  (0, _assertString.default)(str);
  var testIssn = issn;
  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;
  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');

  if (!testIssn.test(str)) {
    return false;
  }

  var digits = str.replace('-', '').toUpperCase();
  var checksum = 0;

  for (var i = 0; i < digits.length; i++) {
    var digit = digits[i];
    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);
  }

  return checksum % 11 === 0;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isMobilePhone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMobilePhone;
exports.locales = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* eslint-disable max-len */


var phones = {
  'am-AM': /^(\+?374|0)((10|[9|7][0-9])\d{6}$|[2-4]\d{7}$)/,
  'ar-AE': /^((\+?971)|0)?5[024568]\d{7}$/,
  'ar-BH': /^(\+?973)?(3|6)\d{7}$/,
  'ar-DZ': /^(\+?213|0)(5|6|7)\d{8}$/,
  'ar-EG': /^((\+?20)|0)?1[0125]\d{8}$/,
  'ar-IQ': /^(\+?964|0)?7[0-9]\d{8}$/,
  'ar-JO': /^(\+?962|0)?7[789]\d{7}$/,
  'ar-KW': /^(\+?965)[569]\d{7}$/,
  'ar-SA': /^(!?(\+?966)|0)?5\d{8}$/,
  'ar-SY': /^(!?(\+?963)|0)?9\d{8}$/,
  'ar-TN': /^(\+?216)?[2459]\d{7}$/,
  'be-BY': /^(\+?375)?(24|25|29|33|44)\d{7}$/,
  'bg-BG': /^(\+?359|0)?8[789]\d{7}$/,
  'bn-BD': /^(\+?880|0)1[13456789][0-9]{8}$/,
  'cs-CZ': /^(\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
  'da-DK': /^(\+?45)?\s?\d{2}\s?\d{2}\s?\d{2}\s?\d{2}$/,
  'de-DE': /^(\+49)?0?1(5[0-25-9]\d|6([23]|0\d?)|7([0-57-9]|6\d))\d{7}$/,
  'de-AT': /^(\+43|0)\d{1,4}\d{3,12}$/,
  'el-GR': /^(\+?30|0)?(69\d{8})$/,
  'en-AU': /^(\+?61|0)4\d{8}$/,
  'en-GB': /^(\+?44|0)7\d{9}$/,
  'en-GG': /^(\+?44|0)1481\d{6}$/,
  'en-GH': /^(\+233|0)(20|50|24|54|27|57|26|56|23|28)\d{7}$/,
  'en-HK': /^(\+?852[-\s]?)?[456789]\d{3}[-\s]?\d{4}$/,
  'en-MO': /^(\+?853[-\s]?)?[6]\d{3}[-\s]?\d{4}$/,
  'en-IE': /^(\+?353|0)8[356789]\d{7}$/,
  'en-IN': /^(\+?91|0)?[6789]\d{9}$/,
  'en-KE': /^(\+?254|0)(7|1)\d{8}$/,
  'en-MT': /^(\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,
  'en-MU': /^(\+?230|0)?\d{8}$/,
  'en-NG': /^(\+?234|0)?[789]\d{9}$/,
  'en-NZ': /^(\+?64|0)[28]\d{7,9}$/,
  'en-PK': /^((\+92)|(0092))-{0,1}\d{3}-{0,1}\d{7}$|^\d{11}$|^\d{4}-\d{7}$/,
  'en-RW': /^(\+?250|0)?[7]\d{8}$/,
  'en-SG': /^(\+65)?[89]\d{7}$/,
  'en-TZ': /^(\+?255|0)?[67]\d{8}$/,
  'en-UG': /^(\+?256|0)?[7]\d{8}$/,
  'en-US': /^((\+1|1)?( |-)?)?(\([2-9][0-9]{2}\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,
  'en-ZA': /^(\+?27|0)\d{9}$/,
  'en-ZM': /^(\+?26)?09[567]\d{7}$/,
  'es-CL': /^(\+?56|0)[2-9]\d{1}\d{7}$/,
  'es-EC': /^(\+?593|0)([2-7]|9[2-9])\d{7}$/,
  'es-ES': /^(\+?34)?(6\d{1}|7[1234])\d{7}$/,
  'es-MX': /^(\+?52)?(1|01)?\d{10,11}$/,
  'es-PA': /^(\+?507)\d{7,8}$/,
  'es-PY': /^(\+?595|0)9[9876]\d{7}$/,
  'es-UY': /^(\+598|0)9[1-9][\d]{6}$/,
  'et-EE': /^(\+?372)?\s?(5|8[1-4])\s?([0-9]\s?){6,7}$/,
  'fa-IR': /^(\+?98[\-\s]?|0)9[0-39]\d[\-\s]?\d{3}[\-\s]?\d{4}$/,
  'fi-FI': /^(\+?358|0)\s?(4(0|1|2|4|5|6)?|50)\s?(\d\s?){4,8}\d$/,
  'fj-FJ': /^(\+?679)?\s?\d{3}\s?\d{4}$/,
  'fo-FO': /^(\+?298)?\s?\d{2}\s?\d{2}\s?\d{2}$/,
  'fr-FR': /^(\+?33|0)[67]\d{8}$/,
  'fr-GF': /^(\+?594|0|00594)[67]\d{8}$/,
  'fr-GP': /^(\+?590|0|00590)[67]\d{8}$/,
  'fr-MQ': /^(\+?596|0|00596)[67]\d{8}$/,
  'fr-RE': /^(\+?262|0|00262)[67]\d{8}$/,
  'he-IL': /^(\+972|0)([23489]|5[012345689]|77)[1-9]\d{6}$/,
  'hu-HU': /^(\+?36)(20|30|70)\d{7}$/,
  'id-ID': /^(\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\s?|\d]{5,11})$/,
  'it-IT': /^(\+?39)?\s?3\d{2} ?\d{6,7}$/,
  'ja-JP': /^(\+81[ \-]?(\(0\))?|0)[6789]0[ \-]?\d{4}[ \-]?\d{4}$/,
  'kk-KZ': /^(\+?7|8)?7\d{9}$/,
  'kl-GL': /^(\+?299)?\s?\d{2}\s?\d{2}\s?\d{2}$/,
  'ko-KR': /^((\+?82)[ \-]?)?0?1([0|1|6|7|8|9]{1})[ \-]?\d{3,4}[ \-]?\d{4}$/,
  'lt-LT': /^(\+370|8)\d{8}$/,
  'ms-MY': /^(\+?6?01){1}(([0145]{1}(\-|\s)?\d{7,8})|([236789]{1}(\s|\-)?\d{7}))$/,
  'nb-NO': /^(\+?47)?[49]\d{7}$/,
  'ne-NP': /^(\+?977)?9[78]\d{8}$/,
  'nl-BE': /^(\+?32|0)4?\d{8}$/,
  'nl-NL': /^(\+?31|0)6?\d{8}$/,
  'nn-NO': /^(\+?47)?[49]\d{7}$/,
  'pl-PL': /^(\+?48)? ?[5-8]\d ?\d{3} ?\d{2} ?\d{2}$/,
  'pt-BR': /(?=^(\+?5{2}\-?|0)[1-9]{2}\-?\d{4}\-?\d{4}$)(^(\+?5{2}\-?|0)[1-9]{2}\-?[6-9]{1}\d{3}\-?\d{4}$)|(^(\+?5{2}\-?|0)[1-9]{2}\-?9[6-9]{1}\d{3}\-?\d{4}$)/,
  'pt-PT': /^(\+?351)?9[1236]\d{7}$/,
  'ro-RO': /^(\+?4?0)\s?7\d{2}(\/|\s|\.|\-)?\d{3}(\s|\.|\-)?\d{3}$/,
  'ru-RU': /^(\+?7|8)?9\d{9}$/,
  'sl-SI': /^(\+386\s?|0)(\d{1}\s?\d{3}\s?\d{2}\s?\d{2}|\d{2}\s?\d{3}\s?\d{3})$/,
  'sk-SK': /^(\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,
  'sr-RS': /^(\+3816|06)[- \d]{5,9}$/,
  'sv-SE': /^(\+?46|0)[\s\-]?7[\s\-]?[02369]([\s\-]?\d){7}$/,
  'th-TH': /^(\+66|66|0)\d{9}$/,
  'tr-TR': /^(\+?90|0)?5\d{9}$/,
  'uk-UA': /^(\+?38|8)?0\d{9}$/,
  'vi-VN': /^(\+?84|0)((3([2-9]))|(5([2689]))|(7([0|6-9]))|(8([1-6|89]))|(9([0-9])))([0-9]{7})$/,
  'zh-CN': /^((\+|00)86)?1([358][0-9]|4[579]|6[67]|7[01235678]|9[189])[0-9]{8}$/,
  'zh-TW': /^(\+?886\-?|0)?9\d{8}$/
};
/* eslint-enable max-len */
// aliases

phones['en-CA'] = phones['en-US'];
phones['fr-BE'] = phones['nl-BE'];
phones['zh-HK'] = phones['en-HK'];
phones['zh-MO'] = phones['en-MO'];

function isMobilePhone(str, locale, options) {
  (0, _assertString.default)(str);

  if (options && options.strictMode && !str.startsWith('+')) {
    return false;
  }

  if (Array.isArray(locale)) {
    return locale.some(function (key) {
      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
      // istanbul ignore else
      if (phones.hasOwnProperty(key)) {
        var phone = phones[key];

        if (phone.test(str)) {
          return true;
        }
      }

      return false;
    });
  } else if (locale in phones) {
    return phones[locale].test(str); // alias falsey locale as 'any'
  } else if (!locale || locale === 'any') {
    for (var key in phones) {
      // istanbul ignore else
      if (phones.hasOwnProperty(key)) {
        var phone = phones[key];

        if (phone.test(str)) {
          return true;
        }
      }
    }

    return false;
  }

  throw new Error("Invalid locale '".concat(locale, "'"));
}

var locales = Object.keys(phones);
exports.locales = locales;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isEthereumAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isEthereumAddress;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var eth = /^(0x)[0-9a-f]{40}$/i;

function isEthereumAddress(str) {
  (0, _assertString.default)(str);
  return eth.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isCurrency.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isCurrency;

var _merge = _interopRequireDefault(require("./util/merge"));

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function currencyRegex(options) {
  var decimal_digits = "\\d{".concat(options.digits_after_decimal[0], "}");
  options.digits_after_decimal.forEach(function (digit, index) {
    if (index !== 0) decimal_digits = "".concat(decimal_digits, "|\\d{").concat(digit, "}");
  });
  var symbol = "(\\".concat(options.symbol.replace(/\./g, '\\.'), ")").concat(options.require_symbol ? '' : '?'),
      negative = '-?',
      whole_dollar_amount_without_sep = '[1-9]\\d*',
      whole_dollar_amount_with_sep = "[1-9]\\d{0,2}(\\".concat(options.thousands_separator, "\\d{3})*"),
      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],
      whole_dollar_amount = "(".concat(valid_whole_dollar_amounts.join('|'), ")?"),
      decimal_amount = "(\\".concat(options.decimal_separator, "(").concat(decimal_digits, "))").concat(options.require_decimal ? '' : '?');
  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)

  if (options.allow_negatives && !options.parens_for_negatives) {
    if (options.negative_sign_after_digits) {
      pattern += negative;
    } else if (options.negative_sign_before_digits) {
      pattern = negative + pattern;
    }
  } // South African Rand, for example, uses R 123 (space) and R-123 (no space)


  if (options.allow_negative_sign_placeholder) {
    pattern = "( (?!\\-))?".concat(pattern);
  } else if (options.allow_space_after_symbol) {
    pattern = " ?".concat(pattern);
  } else if (options.allow_space_after_digits) {
    pattern += '( (?!$))?';
  }

  if (options.symbol_after_digits) {
    pattern += symbol;
  } else {
    pattern = symbol + pattern;
  }

  if (options.allow_negatives) {
    if (options.parens_for_negatives) {
      pattern = "(\\(".concat(pattern, "\\)|").concat(pattern, ")");
    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
      pattern = negative + pattern;
    }
  } // ensure there's a dollar and/or decimal amount, and that
  // it doesn't start with a space or a negative sign followed by a space


  return new RegExp("^(?!-? )(?=.*\\d)".concat(pattern, "$"));
}

var default_currency_options = {
  symbol: '$',
  require_symbol: false,
  allow_space_after_symbol: false,
  symbol_after_digits: false,
  allow_negatives: true,
  parens_for_negatives: false,
  negative_sign_before_digits: false,
  negative_sign_after_digits: false,
  allow_negative_sign_placeholder: false,
  thousands_separator: ',',
  decimal_separator: '.',
  allow_decimal: true,
  require_decimal: false,
  digits_after_decimal: [2],
  allow_space_after_digits: false
};

function isCurrency(str, options) {
  (0, _assertString.default)(str);
  options = (0, _merge.default)(options, default_currency_options);
  return currencyRegex(options).test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/merge":"node_modules/validator/lib/util/merge.js","./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isBtcAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBtcAddress;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} // supports Bech32 addresses


var btc = /^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$/;

function isBtcAddress(str) {
  (0, _assertString.default)(str);
  return btc.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isISO8601.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISO8601;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* eslint-disable max-len */
// from http://goo.gl/0ejHHW


var iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;
/* eslint-enable max-len */

var isValidDate = function isValidDate(str) {
  // str must have passed the ISO8601 check
  // this check is meant to catch invalid dates
  // like 2009-02-31
  // first check for ordinal dates
  var ordinalMatch = str.match(/^(\d{4})-?(\d{3})([ T]{1}\.*|$)/);

  if (ordinalMatch) {
    var oYear = Number(ordinalMatch[1]);
    var oDay = Number(ordinalMatch[2]); // if is leap year

    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;
    return oDay <= 365;
  }

  var match = str.match(/(\d{4})-?(\d{0,2})-?(\d*)/).map(Number);
  var year = match[1];
  var month = match[2];
  var day = match[3];
  var monthString = month ? "0".concat(month).slice(-2) : month;
  var dayString = day ? "0".concat(day).slice(-2) : day; // create a date object and compare

  var d = new Date("".concat(year, "-").concat(monthString || '01', "-").concat(dayString || '01'));

  if (month && day) {
    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;
  }

  return true;
};

function isISO8601(str, options) {
  (0, _assertString.default)(str);
  var check = iso8601.test(str);
  if (!options) return check;
  if (check && options.strict) return isValidDate(str);
  return check;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isRFC3339.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isRFC3339;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */


var dateFullYear = /[0-9]{4}/;
var dateMonth = /(0[1-9]|1[0-2])/;
var dateMDay = /([12]\d|0[1-9]|3[01])/;
var timeHour = /([01][0-9]|2[0-3])/;
var timeMinute = /[0-5][0-9]/;
var timeSecond = /([0-5][0-9]|60)/;
var timeSecFrac = /(\.[0-9]+)?/;
var timeNumOffset = new RegExp("[-+]".concat(timeHour.source, ":").concat(timeMinute.source));
var timeOffset = new RegExp("([zZ]|".concat(timeNumOffset.source, ")"));
var partialTime = new RegExp("".concat(timeHour.source, ":").concat(timeMinute.source, ":").concat(timeSecond.source).concat(timeSecFrac.source));
var fullDate = new RegExp("".concat(dateFullYear.source, "-").concat(dateMonth.source, "-").concat(dateMDay.source));
var fullTime = new RegExp("".concat(partialTime.source).concat(timeOffset.source));
var rfc3339 = new RegExp("".concat(fullDate.source, "[ tT]").concat(fullTime.source));

function isRFC3339(str) {
  (0, _assertString.default)(str);
  return rfc3339.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isISO31661Alpha2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISO31661Alpha2;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _includes = _interopRequireDefault(require("./util/includes"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} // from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2


var validISO31661Alpha2CountriesCodes = ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM', 'ZW'];

function isISO31661Alpha2(str) {
  (0, _assertString.default)(str);
  return (0, _includes.default)(validISO31661Alpha2CountriesCodes, str.toUpperCase());
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/includes":"node_modules/validator/lib/util/includes.js"}],"node_modules/validator/lib/isISO31661Alpha3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isISO31661Alpha3;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _includes = _interopRequireDefault(require("./util/includes"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} // from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3


var validISO31661Alpha3CountriesCodes = ['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE'];

function isISO31661Alpha3(str) {
  (0, _assertString.default)(str);
  return (0, _includes.default)(validISO31661Alpha3CountriesCodes, str.toUpperCase());
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./util/includes":"node_modules/validator/lib/util/includes.js"}],"node_modules/validator/lib/isBase32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBase32;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var base32 = /^[A-Z2-7]+=*$/;

function isBase32(str) {
  (0, _assertString.default)(str);
  var len = str.length;

  if (len > 0 && len % 8 === 0 && base32.test(str)) {
    return true;
  }

  return false;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isBase64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isBase64;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var notBase64 = /[^A-Z0-9+\/=]/i;

function isBase64(str) {
  (0, _assertString.default)(str);
  var len = str.length;

  if (!len || len % 4 !== 0 || notBase64.test(str)) {
    return false;
  }

  var firstPaddingChar = str.indexOf('=');
  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isDataURI.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isDataURI;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var validMediaType = /^[a-z]+\/[a-z0-9\-\+]+$/i;
var validAttribute = /^[a-z\-]+=[a-z0-9\-]+$/i;
var validData = /^[a-z0-9!\$&'\(\)\*\+,;=\-\._~:@\/\?%\s]*$/i;

function isDataURI(str) {
  (0, _assertString.default)(str);
  var data = str.split(',');

  if (data.length < 2) {
    return false;
  }

  var attributes = data.shift().trim().split(';');
  var schemeAndMediaType = attributes.shift();

  if (schemeAndMediaType.substr(0, 5) !== 'data:') {
    return false;
  }

  var mediaType = schemeAndMediaType.substr(5);

  if (mediaType !== '' && !validMediaType.test(mediaType)) {
    return false;
  }

  for (var i = 0; i < attributes.length; i++) {
    if (i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') {// ok
    } else if (!validAttribute.test(attributes[i])) {
      return false;
    }
  }

  for (var _i = 0; _i < data.length; _i++) {
    if (!validData.test(data[_i])) {
      return false;
    }
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isMagnetURI.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMagnetURI;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var magnetURI = /^magnet:\?xt=urn:[a-z0-9]+:[a-z0-9]{32,40}&dn=.+&tr=.+$/i;

function isMagnetURI(url) {
  (0, _assertString.default)(url);
  return magnetURI.test(url.trim());
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isMimeType.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isMimeType;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/*
  Checks if the provided string matches to a correct Media type format (MIME type)

  This function only checks is the string format follows the
  etablished rules by the according RFC specifications.
  This function supports 'charset' in textual media types
  (https://tools.ietf.org/html/rfc6657).

  This function does not check against all the media types listed
  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)
  because of lightness purposes : it would require to include
  all these MIME types in this librairy, which would weigh it
  significantly. This kind of effort maybe is not worth for the use that
  this function has in this entire librairy.

  More informations in the RFC specifications :
  - https://tools.ietf.org/html/rfc2045
  - https://tools.ietf.org/html/rfc2046
  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1
  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5
*/
// Match simple MIME types
// NB :
//   Subtype length must not exceed 100 characters.
//   This rule does not comply to the RFC specs (what is the max length ?).


var mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\/[a-zA-Z0-9\.\-\+]{1,100}$/i; // eslint-disable-line max-len
// Handle "charset" in "text/*"

var mimeTypeText = /^text\/[a-zA-Z0-9\.\-\+]{1,100};\s?charset=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?$/i; // eslint-disable-line max-len
// Handle "boundary" in "multipart/*"

var mimeTypeMultipart = /^multipart\/[a-zA-Z0-9\.\-\+]{1,100}(;\s?(boundary|charset)=("[a-zA-Z0-9\.\-\+\s]{0,70}"|[a-zA-Z0-9\.\-\+]{0,70})(\s?\([a-zA-Z0-9\.\-\+\s]{1,20}\))?){0,2}$/i; // eslint-disable-line max-len

function isMimeType(str) {
  (0, _assertString.default)(str);
  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isLatLong.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var lat = /^\(?[+-]?(90(\.0+)?|[1-8]?\d(\.\d+)?)$/;
var long = /^\s?[+-]?(180(\.0+)?|1[0-7]\d(\.\d+)?|\d{1,2}(\.\d+)?)\)?$/;

function _default(str) {
  (0, _assertString.default)(str);
  if (!str.includes(',')) return false;
  var pair = str.split(',');
  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;
  return lat.test(pair[0]) && long.test(pair[1]);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isPostalCode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.locales = void 0;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} // common patterns


var threeDigit = /^\d{3}$/;
var fourDigit = /^\d{4}$/;
var fiveDigit = /^\d{5}$/;
var sixDigit = /^\d{6}$/;
var patterns = {
  AD: /^AD\d{3}$/,
  AT: fourDigit,
  AU: fourDigit,
  BE: fourDigit,
  BG: fourDigit,
  BR: /^\d{5}-\d{3}$/,
  CA: /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][\s\-]?\d[ABCEGHJ-NPRSTV-Z]\d$/i,
  CH: fourDigit,
  CZ: /^\d{3}\s?\d{2}$/,
  DE: fiveDigit,
  DK: fourDigit,
  DZ: fiveDigit,
  EE: fiveDigit,
  ES: fiveDigit,
  FI: fiveDigit,
  FR: /^\d{2}\s?\d{3}$/,
  GB: /^(gir\s?0aa|[a-z]{1,2}\d[\da-z]?\s?(\d[a-z]{2})?)$/i,
  GR: /^\d{3}\s?\d{2}$/,
  HR: /^([1-5]\d{4}$)/,
  HU: fourDigit,
  ID: fiveDigit,
  IE: /^(?!.*(?:o))[A-z]\d[\dw]\s\w{4}$/i,
  IL: fiveDigit,
  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,
  IS: threeDigit,
  IT: fiveDigit,
  JP: /^\d{3}\-\d{4}$/,
  KE: fiveDigit,
  LI: /^(948[5-9]|949[0-7])$/,
  LT: /^LT\-\d{5}$/,
  LU: fourDigit,
  LV: /^LV\-\d{4}$/,
  MX: fiveDigit,
  MT: /^[A-Za-z]{3}\s{0,1}\d{4}$/,
  NL: /^\d{4}\s?[a-z]{2}$/i,
  NO: fourDigit,
  NZ: fourDigit,
  PL: /^\d{2}\-\d{3}$/,
  PR: /^00[679]\d{2}([ -]\d{4})?$/,
  PT: /^\d{4}\-\d{3}?$/,
  RO: sixDigit,
  RU: sixDigit,
  SA: fiveDigit,
  SE: /^[1-9]\d{2}\s?\d{2}$/,
  SI: fourDigit,
  SK: /^\d{3}\s?\d{2}$/,
  TN: fourDigit,
  TW: /^\d{3}(\d{2})?$/,
  UA: fiveDigit,
  US: /^\d{5}(-\d{4})?$/,
  ZA: fourDigit,
  ZM: fiveDigit
};
var locales = Object.keys(patterns);
exports.locales = locales;

function _default(str, locale) {
  (0, _assertString.default)(str);

  if (locale in patterns) {
    return patterns[locale].test(str);
  } else if (locale === 'any') {
    for (var key in patterns) {
      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes
      // istanbul ignore else
      if (patterns.hasOwnProperty(key)) {
        var pattern = patterns[key];

        if (pattern.test(str)) {
          return true;
        }
      }
    }

    return false;
  }

  throw new Error("Invalid locale '".concat(locale, "'"));
}
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/ltrim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ltrim;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function ltrim(str, chars) {
  (0, _assertString.default)(str); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping

  var pattern = chars ? new RegExp("^[".concat(chars.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), "]+"), 'g') : /^\s+/g;
  return str.replace(pattern, '');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/rtrim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rtrim;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function rtrim(str, chars) {
  (0, _assertString.default)(str); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping

  var pattern = chars ? new RegExp("[".concat(chars.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), "]+$"), 'g') : /\s+$/g;
  return str.replace(pattern, '');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/trim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = trim;

var _rtrim = _interopRequireDefault(require("./rtrim"));

var _ltrim = _interopRequireDefault(require("./ltrim"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function trim(str, chars) {
  return (0, _rtrim.default)((0, _ltrim.default)(str, chars), chars);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./rtrim":"node_modules/validator/lib/rtrim.js","./ltrim":"node_modules/validator/lib/ltrim.js"}],"node_modules/validator/lib/escape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = escape;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function escape(str) {
  (0, _assertString.default)(str);
  return str.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\//g, '&#x2F;').replace(/\\/g, '&#x5C;').replace(/`/g, '&#96;');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/unescape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = unescape;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function unescape(str) {
  (0, _assertString.default)(str);
  return str.replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\').replace(/&#96;/g, '`');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/blacklist.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = blacklist;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function blacklist(str, chars) {
  (0, _assertString.default)(str);
  return str.replace(new RegExp("[".concat(chars, "]+"), 'g'), '');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/stripLow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = stripLow;

var _assertString = _interopRequireDefault(require("./util/assertString"));

var _blacklist = _interopRequireDefault(require("./blacklist"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function stripLow(str, keep_new_lines) {
  (0, _assertString.default)(str);
  var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
  return (0, _blacklist.default)(str, chars);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js","./blacklist":"node_modules/validator/lib/blacklist.js"}],"node_modules/validator/lib/whitelist.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = whitelist;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function whitelist(str, chars) {
  (0, _assertString.default)(str);
  return str.replace(new RegExp("[^".concat(chars, "]+"), 'g'), '');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/isWhitelisted.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isWhitelisted;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function isWhitelisted(str, chars) {
  (0, _assertString.default)(str);

  for (var i = str.length - 1; i >= 0; i--) {
    if (chars.indexOf(str[i]) === -1) {
      return false;
    }
  }

  return true;
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/lib/normalizeEmail.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = normalizeEmail;

var _merge = _interopRequireDefault(require("./util/merge"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var default_normalize_email_options = {
  // The following options apply to all email addresses
  // Lowercases the local part of the email address.
  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).
  // The domain is always lowercased, as per RFC 1035
  all_lowercase: true,
  // The following conversions are specific to GMail
  // Lowercases the local part of the GMail address (known to be case-insensitive)
  gmail_lowercase: true,
  // Removes dots from the local part of the email address, as that's ignored by GMail
  gmail_remove_dots: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  gmail_remove_subaddress: true,
  // Conversts the googlemail.com domain to gmail.com
  gmail_convert_googlemaildotcom: true,
  // The following conversions are specific to Outlook.com / Windows Live / Hotmail
  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)
  outlookdotcom_lowercase: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  outlookdotcom_remove_subaddress: true,
  // The following conversions are specific to Yahoo
  // Lowercases the local part of the Yahoo address (known to be case-insensitive)
  yahoo_lowercase: true,
  // Removes the subaddress (e.g. "-foo") from the email address
  yahoo_remove_subaddress: true,
  // The following conversions are specific to Yandex
  // Lowercases the local part of the Yandex address (known to be case-insensitive)
  yandex_lowercase: true,
  // The following conversions are specific to iCloud
  // Lowercases the local part of the iCloud address (known to be case-insensitive)
  icloud_lowercase: true,
  // Removes the subaddress (e.g. "+foo") from the email address
  icloud_remove_subaddress: true
}; // List of domains used by iCloud

var icloud_domains = ['icloud.com', 'me.com']; // List of domains used by Outlook.com and its predecessors
// This list is likely incomplete.
// Partial reference:
// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/

var outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com']; // List of domains used by Yahoo Mail
// This list is likely incomplete

var yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com']; // List of domains used by yandex.ru

var yandex_domains = ['yandex.ru', 'yandex.ua', 'yandex.kz', 'yandex.com', 'yandex.by', 'ya.ru']; // replace single dots, but not multiple consecutive dots

function dotsReplacer(match) {
  if (match.length > 1) {
    return match;
  }

  return '';
}

function normalizeEmail(email, options) {
  options = (0, _merge.default)(options, default_normalize_email_options);
  var raw_parts = email.split('@');
  var domain = raw_parts.pop();
  var user = raw_parts.join('@');
  var parts = [user, domain]; // The domain is always lowercased, as it's case-insensitive per RFC 1035

  parts[1] = parts[1].toLowerCase();

  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
    // Address is GMail
    if (options.gmail_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }

    if (options.gmail_remove_dots) {
      // this does not replace consecutive dots like example..email@gmail.com
      parts[0] = parts[0].replace(/\.+/g, dotsReplacer);
    }

    if (!parts[0].length) {
      return false;
    }

    if (options.all_lowercase || options.gmail_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }

    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];
  } else if (icloud_domains.indexOf(parts[1]) >= 0) {
    // Address is iCloud
    if (options.icloud_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }

    if (!parts[0].length) {
      return false;
    }

    if (options.all_lowercase || options.icloud_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {
    // Address is Outlook.com
    if (options.outlookdotcom_remove_subaddress) {
      parts[0] = parts[0].split('+')[0];
    }

    if (!parts[0].length) {
      return false;
    }

    if (options.all_lowercase || options.outlookdotcom_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (yahoo_domains.indexOf(parts[1]) >= 0) {
    // Address is Yahoo
    if (options.yahoo_remove_subaddress) {
      var components = parts[0].split('-');
      parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];
    }

    if (!parts[0].length) {
      return false;
    }

    if (options.all_lowercase || options.yahoo_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }
  } else if (yandex_domains.indexOf(parts[1]) >= 0) {
    if (options.all_lowercase || options.yandex_lowercase) {
      parts[0] = parts[0].toLowerCase();
    }

    parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preffered
  } else if (options.all_lowercase) {
    // Any other address
    parts[0] = parts[0].toLowerCase();
  }

  return parts.join('@');
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/merge":"node_modules/validator/lib/util/merge.js"}],"node_modules/validator/lib/isSlug.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isSlug;

var _assertString = _interopRequireDefault(require("./util/assertString"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var charsetRegex = /^[^-_](?!.*?[-_]{2,})([a-z0-9\\-]{1,}).*[^-_]$/;

function isSlug(str) {
  (0, _assertString.default)(str);
  return charsetRegex.test(str);
}

module.exports = exports.default;
module.exports.default = exports.default;
},{"./util/assertString":"node_modules/validator/lib/util/assertString.js"}],"node_modules/validator/index.js":[function(require,module,exports) {
"use strict";

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toDate = _interopRequireDefault(require("./lib/toDate"));

var _toFloat = _interopRequireDefault(require("./lib/toFloat"));

var _toInt = _interopRequireDefault(require("./lib/toInt"));

var _toBoolean = _interopRequireDefault(require("./lib/toBoolean"));

var _equals = _interopRequireDefault(require("./lib/equals"));

var _contains = _interopRequireDefault(require("./lib/contains"));

var _matches = _interopRequireDefault(require("./lib/matches"));

var _isEmail = _interopRequireDefault(require("./lib/isEmail"));

var _isURL = _interopRequireDefault(require("./lib/isURL"));

var _isMACAddress = _interopRequireDefault(require("./lib/isMACAddress"));

var _isIP = _interopRequireDefault(require("./lib/isIP"));

var _isIPRange = _interopRequireDefault(require("./lib/isIPRange"));

var _isFQDN = _interopRequireDefault(require("./lib/isFQDN"));

var _isBoolean = _interopRequireDefault(require("./lib/isBoolean"));

var _isLocale = _interopRequireDefault(require("./lib/isLocale"));

var _isAlpha = _interopRequireWildcard(require("./lib/isAlpha"));

var _isAlphanumeric = _interopRequireWildcard(require("./lib/isAlphanumeric"));

var _isNumeric = _interopRequireDefault(require("./lib/isNumeric"));

var _isPassportNumber = _interopRequireDefault(require("./lib/isPassportNumber"));

var _isPort = _interopRequireDefault(require("./lib/isPort"));

var _isLowercase = _interopRequireDefault(require("./lib/isLowercase"));

var _isUppercase = _interopRequireDefault(require("./lib/isUppercase"));

var _isAscii = _interopRequireDefault(require("./lib/isAscii"));

var _isFullWidth = _interopRequireDefault(require("./lib/isFullWidth"));

var _isHalfWidth = _interopRequireDefault(require("./lib/isHalfWidth"));

var _isVariableWidth = _interopRequireDefault(require("./lib/isVariableWidth"));

var _isMultibyte = _interopRequireDefault(require("./lib/isMultibyte"));

var _isSemVer = _interopRequireDefault(require("./lib/isSemVer"));

var _isSurrogatePair = _interopRequireDefault(require("./lib/isSurrogatePair"));

var _isInt = _interopRequireDefault(require("./lib/isInt"));

var _isFloat = _interopRequireWildcard(require("./lib/isFloat"));

var _isDecimal = _interopRequireDefault(require("./lib/isDecimal"));

var _isHexadecimal = _interopRequireDefault(require("./lib/isHexadecimal"));

var _isOctal = _interopRequireDefault(require("./lib/isOctal"));

var _isDivisibleBy = _interopRequireDefault(require("./lib/isDivisibleBy"));

var _isHexColor = _interopRequireDefault(require("./lib/isHexColor"));

var _isRgbColor = _interopRequireDefault(require("./lib/isRgbColor"));

var _isHSL = _interopRequireDefault(require("./lib/isHSL"));

var _isISRC = _interopRequireDefault(require("./lib/isISRC"));

var _isIBAN = _interopRequireDefault(require("./lib/isIBAN"));

var _isBIC = _interopRequireDefault(require("./lib/isBIC"));

var _isMD = _interopRequireDefault(require("./lib/isMD5"));

var _isHash = _interopRequireDefault(require("./lib/isHash"));

var _isJWT = _interopRequireDefault(require("./lib/isJWT"));

var _isJSON = _interopRequireDefault(require("./lib/isJSON"));

var _isEmpty = _interopRequireDefault(require("./lib/isEmpty"));

var _isLength = _interopRequireDefault(require("./lib/isLength"));

var _isByteLength = _interopRequireDefault(require("./lib/isByteLength"));

var _isUUID = _interopRequireDefault(require("./lib/isUUID"));

var _isMongoId = _interopRequireDefault(require("./lib/isMongoId"));

var _isAfter = _interopRequireDefault(require("./lib/isAfter"));

var _isBefore = _interopRequireDefault(require("./lib/isBefore"));

var _isIn = _interopRequireDefault(require("./lib/isIn"));

var _isCreditCard = _interopRequireDefault(require("./lib/isCreditCard"));

var _isIdentityCard = _interopRequireDefault(require("./lib/isIdentityCard"));

var _isEAN = _interopRequireDefault(require("./lib/isEAN"));

var _isISIN = _interopRequireDefault(require("./lib/isISIN"));

var _isISBN = _interopRequireDefault(require("./lib/isISBN"));

var _isISSN = _interopRequireDefault(require("./lib/isISSN"));

var _isMobilePhone = _interopRequireWildcard(require("./lib/isMobilePhone"));

var _isEthereumAddress = _interopRequireDefault(require("./lib/isEthereumAddress"));

var _isCurrency = _interopRequireDefault(require("./lib/isCurrency"));

var _isBtcAddress = _interopRequireDefault(require("./lib/isBtcAddress"));

var _isISO = _interopRequireDefault(require("./lib/isISO8601"));

var _isRFC = _interopRequireDefault(require("./lib/isRFC3339"));

var _isISO31661Alpha = _interopRequireDefault(require("./lib/isISO31661Alpha2"));

var _isISO31661Alpha2 = _interopRequireDefault(require("./lib/isISO31661Alpha3"));

var _isBase = _interopRequireDefault(require("./lib/isBase32"));

var _isBase2 = _interopRequireDefault(require("./lib/isBase64"));

var _isDataURI = _interopRequireDefault(require("./lib/isDataURI"));

var _isMagnetURI = _interopRequireDefault(require("./lib/isMagnetURI"));

var _isMimeType = _interopRequireDefault(require("./lib/isMimeType"));

var _isLatLong = _interopRequireDefault(require("./lib/isLatLong"));

var _isPostalCode = _interopRequireWildcard(require("./lib/isPostalCode"));

var _ltrim = _interopRequireDefault(require("./lib/ltrim"));

var _rtrim = _interopRequireDefault(require("./lib/rtrim"));

var _trim = _interopRequireDefault(require("./lib/trim"));

var _escape = _interopRequireDefault(require("./lib/escape"));

var _unescape = _interopRequireDefault(require("./lib/unescape"));

var _stripLow = _interopRequireDefault(require("./lib/stripLow"));

var _whitelist = _interopRequireDefault(require("./lib/whitelist"));

var _blacklist = _interopRequireDefault(require("./lib/blacklist"));

var _isWhitelisted = _interopRequireDefault(require("./lib/isWhitelisted"));

var _normalizeEmail = _interopRequireDefault(require("./lib/normalizeEmail"));

var _isSlug = _interopRequireDefault(require("./lib/isSlug"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var version = '13.0.0';
var validator = {
  version: version,
  toDate: _toDate.default,
  toFloat: _toFloat.default,
  toInt: _toInt.default,
  toBoolean: _toBoolean.default,
  equals: _equals.default,
  contains: _contains.default,
  matches: _matches.default,
  isEmail: _isEmail.default,
  isURL: _isURL.default,
  isMACAddress: _isMACAddress.default,
  isIP: _isIP.default,
  isIPRange: _isIPRange.default,
  isFQDN: _isFQDN.default,
  isBoolean: _isBoolean.default,
  isIBAN: _isIBAN.default,
  isBIC: _isBIC.default,
  isAlpha: _isAlpha.default,
  isAlphaLocales: _isAlpha.locales,
  isAlphanumeric: _isAlphanumeric.default,
  isAlphanumericLocales: _isAlphanumeric.locales,
  isNumeric: _isNumeric.default,
  isPassportNumber: _isPassportNumber.default,
  isPort: _isPort.default,
  isLowercase: _isLowercase.default,
  isUppercase: _isUppercase.default,
  isAscii: _isAscii.default,
  isFullWidth: _isFullWidth.default,
  isHalfWidth: _isHalfWidth.default,
  isVariableWidth: _isVariableWidth.default,
  isMultibyte: _isMultibyte.default,
  isSemVer: _isSemVer.default,
  isSurrogatePair: _isSurrogatePair.default,
  isInt: _isInt.default,
  isFloat: _isFloat.default,
  isFloatLocales: _isFloat.locales,
  isDecimal: _isDecimal.default,
  isHexadecimal: _isHexadecimal.default,
  isOctal: _isOctal.default,
  isDivisibleBy: _isDivisibleBy.default,
  isHexColor: _isHexColor.default,
  isRgbColor: _isRgbColor.default,
  isHSL: _isHSL.default,
  isISRC: _isISRC.default,
  isMD5: _isMD.default,
  isHash: _isHash.default,
  isJWT: _isJWT.default,
  isJSON: _isJSON.default,
  isEmpty: _isEmpty.default,
  isLength: _isLength.default,
  isLocale: _isLocale.default,
  isByteLength: _isByteLength.default,
  isUUID: _isUUID.default,
  isMongoId: _isMongoId.default,
  isAfter: _isAfter.default,
  isBefore: _isBefore.default,
  isIn: _isIn.default,
  isCreditCard: _isCreditCard.default,
  isIdentityCard: _isIdentityCard.default,
  isEAN: _isEAN.default,
  isISIN: _isISIN.default,
  isISBN: _isISBN.default,
  isISSN: _isISSN.default,
  isMobilePhone: _isMobilePhone.default,
  isMobilePhoneLocales: _isMobilePhone.locales,
  isPostalCode: _isPostalCode.default,
  isPostalCodeLocales: _isPostalCode.locales,
  isEthereumAddress: _isEthereumAddress.default,
  isCurrency: _isCurrency.default,
  isBtcAddress: _isBtcAddress.default,
  isISO8601: _isISO.default,
  isRFC3339: _isRFC.default,
  isISO31661Alpha2: _isISO31661Alpha.default,
  isISO31661Alpha3: _isISO31661Alpha2.default,
  isBase32: _isBase.default,
  isBase64: _isBase2.default,
  isDataURI: _isDataURI.default,
  isMagnetURI: _isMagnetURI.default,
  isMimeType: _isMimeType.default,
  isLatLong: _isLatLong.default,
  ltrim: _ltrim.default,
  rtrim: _rtrim.default,
  trim: _trim.default,
  escape: _escape.default,
  unescape: _unescape.default,
  stripLow: _stripLow.default,
  whitelist: _whitelist.default,
  blacklist: _blacklist.default,
  isWhitelisted: _isWhitelisted.default,
  normalizeEmail: _normalizeEmail.default,
  toString: toString,
  isSlug: _isSlug.default
};
var _default = validator;
exports.default = _default;
module.exports = exports.default;
module.exports.default = exports.default;
},{"./lib/toDate":"node_modules/validator/lib/toDate.js","./lib/toFloat":"node_modules/validator/lib/toFloat.js","./lib/toInt":"node_modules/validator/lib/toInt.js","./lib/toBoolean":"node_modules/validator/lib/toBoolean.js","./lib/equals":"node_modules/validator/lib/equals.js","./lib/contains":"node_modules/validator/lib/contains.js","./lib/matches":"node_modules/validator/lib/matches.js","./lib/isEmail":"node_modules/validator/lib/isEmail.js","./lib/isURL":"node_modules/validator/lib/isURL.js","./lib/isMACAddress":"node_modules/validator/lib/isMACAddress.js","./lib/isIP":"node_modules/validator/lib/isIP.js","./lib/isIPRange":"node_modules/validator/lib/isIPRange.js","./lib/isFQDN":"node_modules/validator/lib/isFQDN.js","./lib/isBoolean":"node_modules/validator/lib/isBoolean.js","./lib/isLocale":"node_modules/validator/lib/isLocale.js","./lib/isAlpha":"node_modules/validator/lib/isAlpha.js","./lib/isAlphanumeric":"node_modules/validator/lib/isAlphanumeric.js","./lib/isNumeric":"node_modules/validator/lib/isNumeric.js","./lib/isPassportNumber":"node_modules/validator/lib/isPassportNumber.js","./lib/isPort":"node_modules/validator/lib/isPort.js","./lib/isLowercase":"node_modules/validator/lib/isLowercase.js","./lib/isUppercase":"node_modules/validator/lib/isUppercase.js","./lib/isAscii":"node_modules/validator/lib/isAscii.js","./lib/isFullWidth":"node_modules/validator/lib/isFullWidth.js","./lib/isHalfWidth":"node_modules/validator/lib/isHalfWidth.js","./lib/isVariableWidth":"node_modules/validator/lib/isVariableWidth.js","./lib/isMultibyte":"node_modules/validator/lib/isMultibyte.js","./lib/isSemVer":"node_modules/validator/lib/isSemVer.js","./lib/isSurrogatePair":"node_modules/validator/lib/isSurrogatePair.js","./lib/isInt":"node_modules/validator/lib/isInt.js","./lib/isFloat":"node_modules/validator/lib/isFloat.js","./lib/isDecimal":"node_modules/validator/lib/isDecimal.js","./lib/isHexadecimal":"node_modules/validator/lib/isHexadecimal.js","./lib/isOctal":"node_modules/validator/lib/isOctal.js","./lib/isDivisibleBy":"node_modules/validator/lib/isDivisibleBy.js","./lib/isHexColor":"node_modules/validator/lib/isHexColor.js","./lib/isRgbColor":"node_modules/validator/lib/isRgbColor.js","./lib/isHSL":"node_modules/validator/lib/isHSL.js","./lib/isISRC":"node_modules/validator/lib/isISRC.js","./lib/isIBAN":"node_modules/validator/lib/isIBAN.js","./lib/isBIC":"node_modules/validator/lib/isBIC.js","./lib/isMD5":"node_modules/validator/lib/isMD5.js","./lib/isHash":"node_modules/validator/lib/isHash.js","./lib/isJWT":"node_modules/validator/lib/isJWT.js","./lib/isJSON":"node_modules/validator/lib/isJSON.js","./lib/isEmpty":"node_modules/validator/lib/isEmpty.js","./lib/isLength":"node_modules/validator/lib/isLength.js","./lib/isByteLength":"node_modules/validator/lib/isByteLength.js","./lib/isUUID":"node_modules/validator/lib/isUUID.js","./lib/isMongoId":"node_modules/validator/lib/isMongoId.js","./lib/isAfter":"node_modules/validator/lib/isAfter.js","./lib/isBefore":"node_modules/validator/lib/isBefore.js","./lib/isIn":"node_modules/validator/lib/isIn.js","./lib/isCreditCard":"node_modules/validator/lib/isCreditCard.js","./lib/isIdentityCard":"node_modules/validator/lib/isIdentityCard.js","./lib/isEAN":"node_modules/validator/lib/isEAN.js","./lib/isISIN":"node_modules/validator/lib/isISIN.js","./lib/isISBN":"node_modules/validator/lib/isISBN.js","./lib/isISSN":"node_modules/validator/lib/isISSN.js","./lib/isMobilePhone":"node_modules/validator/lib/isMobilePhone.js","./lib/isEthereumAddress":"node_modules/validator/lib/isEthereumAddress.js","./lib/isCurrency":"node_modules/validator/lib/isCurrency.js","./lib/isBtcAddress":"node_modules/validator/lib/isBtcAddress.js","./lib/isISO8601":"node_modules/validator/lib/isISO8601.js","./lib/isRFC3339":"node_modules/validator/lib/isRFC3339.js","./lib/isISO31661Alpha2":"node_modules/validator/lib/isISO31661Alpha2.js","./lib/isISO31661Alpha3":"node_modules/validator/lib/isISO31661Alpha3.js","./lib/isBase32":"node_modules/validator/lib/isBase32.js","./lib/isBase64":"node_modules/validator/lib/isBase64.js","./lib/isDataURI":"node_modules/validator/lib/isDataURI.js","./lib/isMagnetURI":"node_modules/validator/lib/isMagnetURI.js","./lib/isMimeType":"node_modules/validator/lib/isMimeType.js","./lib/isLatLong":"node_modules/validator/lib/isLatLong.js","./lib/isPostalCode":"node_modules/validator/lib/isPostalCode.js","./lib/ltrim":"node_modules/validator/lib/ltrim.js","./lib/rtrim":"node_modules/validator/lib/rtrim.js","./lib/trim":"node_modules/validator/lib/trim.js","./lib/escape":"node_modules/validator/lib/escape.js","./lib/unescape":"node_modules/validator/lib/unescape.js","./lib/stripLow":"node_modules/validator/lib/stripLow.js","./lib/whitelist":"node_modules/validator/lib/whitelist.js","./lib/blacklist":"node_modules/validator/lib/blacklist.js","./lib/isWhitelisted":"node_modules/validator/lib/isWhitelisted.js","./lib/normalizeEmail":"node_modules/validator/lib/normalizeEmail.js","./lib/isSlug":"node_modules/validator/lib/isSlug.js"}],"node_modules/class-validator/esm5/decorator/common/IsLatLong.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLatLong = isLatLong;
exports.IsLatLong = IsLatLong;
exports.IS_LATLONG = void 0;

var _ValidateBy = require("./ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_LATLONG = "isLatLong";
/**
 * Checks if a value is string in format a "latitude,longitude".
 */

exports.IS_LATLONG = IS_LATLONG;

function isLatLong(value) {
  return typeof value === "string" && _validator.default.isLatLong(value);
}
/**
 * Checks if a value is string in format a "latitude,longitude".
 */


function IsLatLong(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_LATLONG,
    validator: {
      validate: function (value, args) {
        return isLatLong(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a latitude,longitude string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"./ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/common/IsLatitude.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLatitude = isLatitude;
exports.IsLatitude = IsLatitude;
exports.IS_LATITUDE = void 0;

var _ValidateBy = require("./ValidateBy");

var _IsLatLong = require("./IsLatLong");

var IS_LATITUDE = "isLatitude";
/**
 * Checks if a given value is a latitude.
 */

exports.IS_LATITUDE = IS_LATITUDE;

function isLatitude(value) {
  return (typeof value === "number" || typeof value === "string") && (0, _IsLatLong.isLatLong)(value + ",0");
}
/**
 * Checks if a given value is a latitude.
 */


function IsLatitude(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_LATITUDE,
    validator: {
      validate: function (value, args) {
        return isLatitude(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a latitude string or number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"./ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","./IsLatLong":"node_modules/class-validator/esm5/decorator/common/IsLatLong.js"}],"node_modules/class-validator/esm5/decorator/common/IsLongitude.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLongitude = isLongitude;
exports.IsLongitude = IsLongitude;
exports.IS_LONGITUDE = void 0;

var _ValidateBy = require("./ValidateBy");

var _IsLatLong = require("./IsLatLong");

var IS_LONGITUDE = "isLongitude";
/**
 * Checks if a given value is a longitude.
 */

exports.IS_LONGITUDE = IS_LONGITUDE;

function isLongitude(value) {
  return (typeof value === "number" || typeof value === "string") && (0, _IsLatLong.isLatLong)("0," + value);
}
/**
 * Checks if a given value is a longitude.
 */


function IsLongitude(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_LONGITUDE,
    validator: {
      validate: function (value, args) {
        return isLongitude(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a longitude string or number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"./ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","./IsLatLong":"node_modules/class-validator/esm5/decorator/common/IsLatLong.js"}],"node_modules/class-validator/esm5/decorator/common/Equals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equals = equals;
exports.Equals = Equals;
exports.EQUALS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var EQUALS = "equals";
/**
 * Checks if value matches ("===") the comparison.
 */

exports.EQUALS = EQUALS;

function equals(value, comparison) {
  return value === comparison;
}
/**
 * Checks if value matches ("===") the comparison.
 */


function Equals(comparison, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: EQUALS,
    constraints: [comparison],
    validator: {
      validate: function (value, args) {
        return equals(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be equal to $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/common/NotEquals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notEquals = notEquals;
exports.NotEquals = NotEquals;
exports.NOT_EQUALS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var NOT_EQUALS = "notEquals";
/**
 * Checks if value does not match ("!==") the comparison.
 */

exports.NOT_EQUALS = NOT_EQUALS;

function notEquals(value, comparison) {
  return value !== comparison;
}
/**
 * Checks if value does not match ("!==") the comparison.
 */


function NotEquals(comparison, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: NOT_EQUALS,
    constraints: [comparison],
    validator: {
      validate: function (value, args) {
        return notEquals(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not be equal to $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/common/IsEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEmpty = isEmpty;
exports.IsEmpty = IsEmpty;
exports.IS_EMPTY = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_EMPTY = "isEmpty";
/**
 * Checks if given value is empty (=== '', === null, === undefined).
 */

exports.IS_EMPTY = IS_EMPTY;

function isEmpty(value) {
  return value === "" || value === null || value === undefined;
}
/**
 * Checks if given value is empty (=== '', === null, === undefined).
 */


function IsEmpty(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_EMPTY,
    validator: {
      validate: function (value, args) {
        return isEmpty(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be empty";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/common/IsNotEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNotEmpty = isNotEmpty;
exports.IsNotEmpty = IsNotEmpty;
exports.IS_NOT_EMPTY = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_NOT_EMPTY = "isNotEmpty";
/**
 * Checks if given value is not empty (!== '', !== null, !== undefined).
 */

exports.IS_NOT_EMPTY = IS_NOT_EMPTY;

function isNotEmpty(value) {
  return value !== "" && value !== null && value !== undefined;
}
/**
 * Checks if given value is not empty (!== '', !== null, !== undefined).
 */


function IsNotEmpty(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_NOT_EMPTY,
    validator: {
      validate: function (value, args) {
        return isNotEmpty(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not be empty";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/common/IsIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIn = isIn;
exports.IsIn = IsIn;
exports.IS_IN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_IN = "isIn";
/**
 * Checks if given value is in a array of allowed values.
 */

exports.IS_IN = IS_IN;

function isIn(value, possibleValues) {
  return !(possibleValues instanceof Array) || possibleValues.some(function (possibleValue) {
    return possibleValue === value;
  });
}
/**
 * Checks if given value is in a array of allowed values.
 */


function IsIn(values, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_IN,
    constraints: [values],
    validator: {
      validate: function (value, args) {
        return isIn(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be one of the following values: $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/common/IsNotIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNotIn = isNotIn;
exports.IsNotIn = IsNotIn;
exports.IS_NOT_IN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_NOT_IN = "isNotIn";
/**
 * Checks if given value not in a array of allowed values.
 */

exports.IS_NOT_IN = IS_NOT_IN;

function isNotIn(value, possibleValues) {
  return !(possibleValues instanceof Array) || !possibleValues.some(function (possibleValue) {
    return possibleValue === value;
  });
}
/**
 * Checks if given value not in a array of allowed values.
 */


function IsNotIn(values, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_NOT_IN,
    constraints: [values],
    validator: {
      validate: function (value, args) {
        return isNotIn(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not be one of the following values: $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/number/IsDivisibleBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDivisibleBy = isDivisibleBy;
exports.IsDivisibleBy = IsDivisibleBy;
exports.IS_DIVISIBLE_BY = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_DIVISIBLE_BY = "isDivisibleBy";
/**
 * Checks if value is a number that's divisible by another.
 */

exports.IS_DIVISIBLE_BY = IS_DIVISIBLE_BY;

function isDivisibleBy(value, num) {
  return typeof value === "number" && typeof num === "number" && _validator.default.isDivisibleBy(String(value), num);
}
/**
 * Checks if value is a number that's divisible by another.
 */


function IsDivisibleBy(num, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_DIVISIBLE_BY,
    constraints: [num],
    validator: {
      validate: function (value, args) {
        return isDivisibleBy(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be divisible by $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/number/IsPositive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPositive = isPositive;
exports.IsPositive = IsPositive;
exports.IS_POSITIVE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_POSITIVE = "isPositive";
/**
 * Checks if the value is a positive number.
 */

exports.IS_POSITIVE = IS_POSITIVE;

function isPositive(value) {
  return typeof value === "number" && value > 0;
}
/**
 * Checks if the value is a positive number.
 */


function IsPositive(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_POSITIVE,
    validator: {
      validate: function (value, args) {
        return isPositive(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a positive number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/number/IsNegative.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNegative = isNegative;
exports.IsNegative = IsNegative;
exports.IS_NEGATIVE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_NEGATIVE = "isNegative";
/**
 * Checks if the value is a negative number.
 */

exports.IS_NEGATIVE = IS_NEGATIVE;

function isNegative(value) {
  return typeof value === "number" && value < 0;
}
/**
 * Checks if the value is a negative number.
 */


function IsNegative(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_NEGATIVE,
    validator: {
      validate: function (value, args) {
        return isNegative(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a negative number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/number/Max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = max;
exports.Max = Max;
exports.MAX = void 0;

var _ValidateBy = require("../common/ValidateBy");

var MAX = "max";
/**
 * Checks if the first number is less than or equal to the second.
 */

exports.MAX = MAX;

function max(num, max) {
  return typeof num === "number" && typeof max === "number" && num <= max;
}
/**
 * Checks if the first number is less than or equal to the second.
 */


function Max(maxValue, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: MAX,
    constraints: [maxValue],
    validator: {
      validate: function (value, args) {
        return max(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must not be greater than $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/number/Min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.min = min;
exports.Min = Min;
exports.MIN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var MIN = "min";
/**
 * Checks if the first number is greater than or equal to the second.
 */

exports.MIN = MIN;

function min(num, min) {
  return typeof num === "number" && typeof min === "number" && num >= min;
}
/**
 * Checks if the first number is greater than or equal to the second.
 */


function Min(minValue, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: MIN,
    constraints: [minValue],
    validator: {
      validate: function (value, args) {
        return min(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must not be less than $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/date/MinDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minDate = minDate;
exports.MinDate = MinDate;
exports.MIN_DATE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var MIN_DATE = "minDate";
/**
 * Checks if the value is a date that's after the specified date.
 */

exports.MIN_DATE = MIN_DATE;

function minDate(date, minDate) {
  return date instanceof Date && date.getTime() >= minDate.getTime();
}
/**
 * Checks if the value is a date that's after the specified date.
 */


function MinDate(date, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: MIN_DATE,
    constraints: [date],
    validator: {
      validate: function (value, args) {
        return minDate(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return "minimal allowed date for " + eachPrefix + "$property is $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/date/MaxDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maxDate = maxDate;
exports.MaxDate = MaxDate;
exports.MAX_DATE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var MAX_DATE = "maxDate";
/**
* Checks if the value is a date that's before the specified date.
*/

exports.MAX_DATE = MAX_DATE;

function maxDate(date, maxDate) {
  return date instanceof Date && date.getTime() <= maxDate.getTime();
}
/**
 * Checks if the value is a date that's after the specified date.
 */


function MaxDate(date, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: MAX_DATE,
    constraints: [date],
    validator: {
      validate: function (value, args) {
        return maxDate(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return "maximal allowed date for " + eachPrefix + "$property is $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/string/Contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.contains = contains;
exports.Contains = Contains;
exports.CONTAINS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CONTAINS = "contains";
/**
 * Checks if the string contains the seed.
 * If given value is not a string, then it returns false.
 */

exports.CONTAINS = CONTAINS;

function contains(value, seed) {
  return typeof value === "string" && _validator.default.contains(value, seed);
}
/**
 * Checks if the string contains the seed.
 * If given value is not a string, then it returns false.
 */


function Contains(seed, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: CONTAINS,
    constraints: [seed],
    validator: {
      validate: function (value, args) {
        return contains(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain a $constraint1 string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/NotContains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.notContains = notContains;
exports.NotContains = NotContains;
exports.NOT_CONTAINS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NOT_CONTAINS = "notContains";
/**
 * Checks if the string does not contain the seed.
 * If given value is not a string, then it returns false.
 */

exports.NOT_CONTAINS = NOT_CONTAINS;

function notContains(value, seed) {
  return typeof value === "string" && !_validator.default.contains(value, seed);
}
/**
 * Checks if the string does not contain the seed.
 * If given value is not a string, then it returns false.
 */


function NotContains(seed, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: NOT_CONTAINS,
    constraints: [seed],
    validator: {
      validate: function (value, args) {
        return notContains(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not contain a $constraint1 string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsAlpha.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAlpha = isAlpha;
exports.IsAlpha = IsAlpha;
exports.IS_ALPHA = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ALPHA = "isAlpha";
/**
 * Checks if the string contains only letters (a-zA-Z).
 * If given value is not a string, then it returns false.
 */

exports.IS_ALPHA = IS_ALPHA;

function isAlpha(value, locale) {
  return typeof value === "string" && _validator.default.isAlpha(value, locale);
}
/**
 * Checks if the string contains only letters (a-zA-Z).
 * If given value is not a string, then it returns false.
 */


function IsAlpha(locale, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ALPHA,
    constraints: [locale],
    validator: {
      validate: function (value, args) {
        return isAlpha(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain only letters (a-zA-Z)";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsAlphanumeric.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAlphanumeric = isAlphanumeric;
exports.IsAlphanumeric = IsAlphanumeric;
exports.IS_ALPHANUMERIC = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ALPHANUMERIC = "isAlphanumeric";
/**
 * Checks if the string contains only letters and numbers.
 * If given value is not a string, then it returns false.
 */

exports.IS_ALPHANUMERIC = IS_ALPHANUMERIC;

function isAlphanumeric(value, locale) {
  return typeof value === "string" && _validator.default.isAlphanumeric(value, locale);
}
/**
 * Checks if the string contains only letters and numbers.
 * If given value is not a string, then it returns false.
 */


function IsAlphanumeric(locale, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ALPHANUMERIC,
    constraints: [locale],
    validator: {
      validate: function (value, args) {
        return isAlphanumeric(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain only letters and numbers";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsDecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDecimal = isDecimal;
exports.IsDecimal = IsDecimal;
exports.IS_DECIMAL = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_DECIMAL = "isDecimal";
/**
 * Checks if the string is a valid decimal.
 * If given value is not a string, then it returns false.
 */

exports.IS_DECIMAL = IS_DECIMAL;

function isDecimal(value, options) {
  return typeof value === "string" && _validator.default.isDecimal(value, options);
}
/**
 * Checks if the string contains only letters and numbers.
 * If given value is not a string, then it returns false.
 */


function IsDecimal(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_DECIMAL,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isDecimal(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property is not a valid decimal number.";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsAscii.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isAscii = isAscii;
exports.IsAscii = IsAscii;
exports.IS_ASCII = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ASCII = "isAscii";
/**
 * Checks if the string contains ASCII chars only.
 * If given value is not a string, then it returns false.
 */

exports.IS_ASCII = IS_ASCII;

function isAscii(value) {
  return typeof value === "string" && _validator.default.isAscii(value);
}
/**
 * Checks if the string contains ASCII chars only.
 * If given value is not a string, then it returns false.
 */


function IsAscii(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ASCII,
    validator: {
      validate: function (value, args) {
        return isAscii(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain only ASCII characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsBase64.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBase64 = isBase64;
exports.IsBase64 = IsBase64;
exports.IS_BASE64 = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_BASE64 = "isBase64";
/**
 * Checks if a string is base64 encoded.
 * If given value is not a string, then it returns false.
 */

exports.IS_BASE64 = IS_BASE64;

function isBase64(value) {
  return typeof value === "string" && _validator.default.isBase64(value);
}
/**
 * Checks if a string is base64 encoded.
 * If given value is not a string, then it returns false.
 */


function IsBase64(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BASE64,
    validator: {
      validate: function (value, args) {
        return isBase64(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be base64 encoded";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsByteLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isByteLength = isByteLength;
exports.IsByteLength = IsByteLength;
exports.IS_BYTE_LENGTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_BYTE_LENGTH = "isByteLength";
/**
 * Checks if the string's length (in bytes) falls in a range.
 * If given value is not a string, then it returns false.
 */

exports.IS_BYTE_LENGTH = IS_BYTE_LENGTH;

function isByteLength(value, min, max) {
  return typeof value === "string" && _validator.default.isByteLength(value, {
    min: min,
    max: max
  });
}
/**
 * Checks if the string's length (in bytes) falls in a range.
 * If given value is not a string, then it returns false.
 */


function IsByteLength(min, max, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BYTE_LENGTH,
    constraints: [min, max],
    validator: {
      validate: function (value, args) {
        return isByteLength(value, args.constraints[0], args.constraints[1]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property's byte length must fall into ($constraint1, $constraint2) range";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsCreditCard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCreditCard = isCreditCard;
exports.IsCreditCard = IsCreditCard;
exports.IS_CREDIT_CARD = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_CREDIT_CARD = "isCreditCard";
/**
 * Checks if the string is a credit card.
 * If given value is not a string, then it returns false.
 */

exports.IS_CREDIT_CARD = IS_CREDIT_CARD;

function isCreditCard(value) {
  return typeof value === "string" && _validator.default.isCreditCard(value);
}
/**
 * Checks if the string is a credit card.
 * If given value is not a string, then it returns false.
 */


function IsCreditCard(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_CREDIT_CARD,
    validator: {
      validate: function (value, args) {
        return isCreditCard(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a credit card";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsCurrency.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCurrency = isCurrency;
exports.IsCurrency = IsCurrency;
exports.IS_CURRENCY = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_CURRENCY = "isCurrency";
/**
 * Checks if the string is a valid currency amount.
 * If given value is not a string, then it returns false.
 */

exports.IS_CURRENCY = IS_CURRENCY;

function isCurrency(value, options) {
  return typeof value === "string" && _validator.default.isCurrency(value, options);
}
/**
 * Checks if the string is a valid currency amount.
 * If given value is not a string, then it returns false.
 */


function IsCurrency(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_CURRENCY,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isCurrency(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a currency";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsEmail.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEmail = isEmail;
exports.IsEmail = IsEmail;
exports.IS_EMAIL = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_EMAIL = "isEmail";
/**
 * Checks if the string is an email.
 * If given value is not a string, then it returns false.
 */

exports.IS_EMAIL = IS_EMAIL;

function isEmail(value, options) {
  return typeof value === "string" && _validator.default.isEmail(value, options);
}
/**
 * Checks if the string is an email.
 * If given value is not a string, then it returns false.
 */


function IsEmail(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_EMAIL,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isEmail(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an email";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsFQDN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFQDN = isFQDN;
exports.IsFQDN = IsFQDN;
exports.IS_FQDN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_FQDN = "isFqdn";
/**
 * Checks if the string is a fully qualified domain name (e.g. domain.com).
 * If given value is not a string, then it returns false.
 */

exports.IS_FQDN = IS_FQDN;

function isFQDN(value, options) {
  return typeof value === "string" && _validator.default.isFQDN(value, options);
}
/**
 * Checks if the string is a fully qualified domain name (e.g. domain.com).
 * If given value is not a string, then it returns false.
 */


function IsFQDN(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_FQDN,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isFQDN(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid domain name";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsFullWidth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFullWidth = isFullWidth;
exports.IsFullWidth = IsFullWidth;
exports.IS_FULL_WIDTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_FULL_WIDTH = "isFullWidth";
/**
 * Checks if the string contains any full-width chars.
 * If given value is not a string, then it returns false.
 */

exports.IS_FULL_WIDTH = IS_FULL_WIDTH;

function isFullWidth(value) {
  return typeof value === "string" && _validator.default.isFullWidth(value);
}
/**
 * Checks if the string contains any full-width chars.
 * If given value is not a string, then it returns false.
 */


function IsFullWidth(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_FULL_WIDTH,
    validator: {
      validate: function (value, args) {
        return isFullWidth(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain a full-width characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsHalfWidth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHalfWidth = isHalfWidth;
exports.IsHalfWidth = IsHalfWidth;
exports.IS_HALF_WIDTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_HALF_WIDTH = "isHalfWidth";
/**
 * Checks if the string contains any half-width chars.
 * If given value is not a string, then it returns false.
 */

exports.IS_HALF_WIDTH = IS_HALF_WIDTH;

function isHalfWidth(value) {
  return typeof value === "string" && _validator.default.isHalfWidth(value);
}
/**
 * Checks if the string contains any full-width chars.
 * If given value is not a string, then it returns false.
 */


function IsHalfWidth(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_HALF_WIDTH,
    validator: {
      validate: function (value, args) {
        return isHalfWidth(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain a half-width characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsVariableWidth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isVariableWidth = isVariableWidth;
exports.IsVariableWidth = IsVariableWidth;
exports.IS_VARIABLE_WIDTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_VARIABLE_WIDTH = "isVariableWidth";
/**
 * Checks if the string contains variable-width chars.
 * If given value is not a string, then it returns false.
 */

exports.IS_VARIABLE_WIDTH = IS_VARIABLE_WIDTH;

function isVariableWidth(value) {
  return typeof value === "string" && _validator.default.isVariableWidth(value);
}
/**
 * Checks if the string contains variable-width chars.
 * If given value is not a string, then it returns false.
 */


function IsVariableWidth(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_VARIABLE_WIDTH,
    validator: {
      validate: function (value, args) {
        return isVariableWidth(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain a full-width and half-width characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsHexColor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHexColor = isHexColor;
exports.IsHexColor = IsHexColor;
exports.IS_HEX_COLOR = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_HEX_COLOR = "isHexColor";
/**
 * Checks if the string is a hexadecimal color.
 * If given value is not a string, then it returns false.
 */

exports.IS_HEX_COLOR = IS_HEX_COLOR;

function isHexColor(value) {
  return typeof value === "string" && _validator.default.isHexColor(value);
}
/**
 * Checks if the string is a hexadecimal color.
 * If given value is not a string, then it returns false.
 */


function IsHexColor(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_HEX_COLOR,
    validator: {
      validate: function (value, args) {
        return isHexColor(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a hexadecimal color";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsHexadecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHexadecimal = isHexadecimal;
exports.IsHexadecimal = IsHexadecimal;
exports.IS_HEXADECIMAL = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_HEXADECIMAL = "isHexadecimal";
/**
 * Checks if the string is a hexadecimal number.
 * If given value is not a string, then it returns false.
 */

exports.IS_HEXADECIMAL = IS_HEXADECIMAL;

function isHexadecimal(value) {
  return typeof value === "string" && _validator.default.isHexadecimal(value);
}
/**
 * Checks if the string is a hexadecimal number.
 * If given value is not a string, then it returns false.
 */


function IsHexadecimal(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_HEXADECIMAL,
    validator: {
      validate: function (value, args) {
        return isHexadecimal(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a hexadecimal number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/ValidationOptions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidationOptions = isValidationOptions;

function isValidationOptions(val) {
  if (!val) {
    return false;
  }

  return "each" in val || "message" in val || "groups" in val || "always" in val || "context" in val;
}
},{}],"node_modules/class-validator/esm5/decorator/string/IsMacAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMACAddress = isMACAddress;
exports.IsMACAddress = IsMACAddress;
exports.IS_MAC_ADDRESS = void 0;

var _ValidationOptions = require("../ValidationOptions");

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MAC_ADDRESS = "isMacAddress";
/**
 * Check if the string is a MAC address.
 * If given value is not a string, then it returns false.
 */

exports.IS_MAC_ADDRESS = IS_MAC_ADDRESS;

function isMACAddress(value, options) {
  return typeof value === "string" && _validator.default.isMACAddress(value, options);
}

function IsMACAddress(optionsOrValidationOptionsArg, validationOptionsArg) {
  var options = !(0, _ValidationOptions.isValidationOptions)(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;
  var validationOptions = (0, _ValidationOptions.isValidationOptions)(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : validationOptionsArg;
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MAC_ADDRESS,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isMACAddress(value, options);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a MAC Address";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../ValidationOptions":"node_modules/class-validator/esm5/decorator/ValidationOptions.js","../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsIP.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIP = isIP;
exports.IsIP = IsIP;
exports.IS_IP = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_IP = "isIp";
/**
 * Checks if the string is an IP (version 4 or 6).
 * If given value is not a string, then it returns false.
 */

exports.IS_IP = IS_IP;

function isIP(value, version) {
  var versionStr = version ? "" + version : undefined;
  return typeof value === "string" && _validator.default.isIP(value, versionStr);
}
/**
 * Checks if the string is an IP (version 4 or 6).
 * If given value is not a string, then it returns false.
 */


function IsIP(version, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_IP,
    constraints: [version],
    validator: {
      validate: function (value, args) {
        return isIP(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an ip address";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsPort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPort = isPort;
exports.IsPort = IsPort;
exports.IS_PORT = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_PORT = "isPort";
/**
 * Check if the string is a valid port number.
 */

exports.IS_PORT = IS_PORT;

function isPort(value) {
  return typeof value === "string" && _validator.default.isPort(value);
}
/**
 * Check if the string is a valid port number.
 */


function IsPort(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_PORT,
    validator: {
      validate: function (value, args) {
        return isPort(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a port";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISBN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISBN = isISBN;
exports.IsISBN = IsISBN;
exports.IS_ISBN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISBN = "isIsbn";
/**
 * Checks if the string is an ISBN (version 10 or 13).
 * If given value is not a string, then it returns false.
 */

exports.IS_ISBN = IS_ISBN;

function isISBN(value, version) {
  var versionStr = version ? "" + version : undefined;
  return typeof value === "string" && _validator.default.isISBN(value, versionStr);
}
/**
 * Checks if the string is an ISBN (version 10 or 13).
 * If given value is not a string, then it returns false.
 */


function IsISBN(version, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISBN,
    constraints: [version],
    validator: {
      validate: function (value, args) {
        return isISBN(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an ISBN";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISIN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISIN = isISIN;
exports.IsISIN = IsISIN;
exports.IS_ISIN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISIN = "isIsin";
/**
 * Checks if the string is an ISIN (stock/security identifier).
 * If given value is not a string, then it returns false.
 */

exports.IS_ISIN = IS_ISIN;

function isISIN(value) {
  return typeof value === "string" && _validator.default.isISIN(value);
}
/**
 * Checks if the string is an ISIN (stock/security identifier).
 * If given value is not a string, then it returns false.
 */


function IsISIN(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISIN,
    validator: {
      validate: function (value, args) {
        return isISIN(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an ISIN (stock/security identifier)";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISO8601.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISO8601 = isISO8601;
exports.IsISO8601 = IsISO8601;
exports.IS_ISO8601 = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISO8601 = "isIso8601";
/**
 * Checks if the string is a valid ISO 8601 date.
 * If given value is not a string, then it returns false.
 * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.
 */

exports.IS_ISO8601 = IS_ISO8601;

function isISO8601(value, options) {
  return typeof value === "string" && _validator.default.isISO8601(value, options);
}
/**
 * Checks if the string is a valid ISO 8601 date.
 * If given value is not a string, then it returns false.
 * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.
 */


function IsISO8601(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISO8601,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isISO8601(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid ISO 8601 date string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsJSON.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isJSON = isJSON;
exports.IsJSON = IsJSON;
exports.IS_JSON = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_JSON = "isJson";
/**
 * Checks if the string is valid JSON (note: uses JSON.parse).
 * If given value is not a string, then it returns false.
 */

exports.IS_JSON = IS_JSON;

function isJSON(value) {
  return typeof value === "string" && _validator.default.isJSON(value);
}
/**
 * Checks if the string is valid JSON (note: uses JSON.parse).
 * If given value is not a string, then it returns false.
 */


function IsJSON(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_JSON,
    validator: {
      validate: function (value, args) {
        return isJSON(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a json string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsJWT.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isJWT = isJWT;
exports.IsJWT = IsJWT;
exports.IS_JWT = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_JWT = "isJwt";
/**
 * Checks if the string is valid JWT token.
 * If given value is not a string, then it returns false.
 */

exports.IS_JWT = IS_JWT;

function isJWT(value) {
  return typeof value === "string" && _validator.default.isJWT(value);
}
/**
 * Checks if the string is valid JWT token.
 * If given value is not a string, then it returns false.
 */


function IsJWT(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_JWT,
    validator: {
      validate: function (value, args) {
        return isJWT(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a jwt string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsLowercase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLowercase = isLowercase;
exports.IsLowercase = IsLowercase;
exports.IS_LOWERCASE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_LOWERCASE = "isLowercase";
/**
 * Checks if the string is lowercase.
 * If given value is not a string, then it returns false.
 */

exports.IS_LOWERCASE = IS_LOWERCASE;

function isLowercase(value) {
  return typeof value === "string" && _validator.default.isLowercase(value);
}
/**
 * Checks if the string is lowercase.
 * If given value is not a string, then it returns false.
 */


function IsLowercase(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_LOWERCASE,
    validator: {
      validate: function (value, args) {
        return isLowercase(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a lowercase string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsMobilePhone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMobilePhone = isMobilePhone;
exports.IsMobilePhone = IsMobilePhone;
exports.IS_MOBILE_PHONE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MOBILE_PHONE = "isMobilePhone";
/**
 * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])
 * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',
 * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',
 * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',
 * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',
 * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',
 * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',
 * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',
 * 'zh-HK', 'zh-MO', 'zh-TW']
 * If given value is not a string, then it returns false.
 */

exports.IS_MOBILE_PHONE = IS_MOBILE_PHONE;

function isMobilePhone(value, locale, options) {
  return typeof value === "string" && _validator.default.isMobilePhone(value, locale, options);
}
/**
 * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])
 * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',
 * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',
 * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',
 * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',
 * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',
 * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',
 * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',
 * 'zh-HK', 'zh-MO', 'zh-TW']
 * If given value is not a string, then it returns false.
 */


function IsMobilePhone(locale, options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MOBILE_PHONE,
    constraints: [locale, options],
    validator: {
      validate: function (value, args) {
        return isMobilePhone(value, args.constraints[0], args.constraints[1]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a phone number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISO31661Alpha2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISO31661Alpha2 = isISO31661Alpha2;
exports.IsISO31661Alpha2 = IsISO31661Alpha2;
exports.IS_ISO31661_ALPHA_2 = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISO31661_ALPHA_2 = "isISO31661Alpha2";
/**
 * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.
 */

exports.IS_ISO31661_ALPHA_2 = IS_ISO31661_ALPHA_2;

function isISO31661Alpha2(value) {
  return typeof value === "string" && _validator.default.isISO31661Alpha2(value);
}
/**
 * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.
 */


function IsISO31661Alpha2(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISO31661_ALPHA_2,
    validator: {
      validate: function (value, args) {
        return isISO31661Alpha2(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid ISO31661 Alpha2 code";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISO31661Alpha3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISO31661Alpha3 = isISO31661Alpha3;
exports.IsISO31661Alpha3 = IsISO31661Alpha3;
exports.IS_ISO31661_ALPHA_3 = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISO31661_ALPHA_3 = "isISO31661Alpha3";
/**
 * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.
 */

exports.IS_ISO31661_ALPHA_3 = IS_ISO31661_ALPHA_3;

function isISO31661Alpha3(value) {
  return typeof value === "string" && _validator.default.isISO31661Alpha3(value);
}
/**
 * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.
 */


function IsISO31661Alpha3(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISO31661_ALPHA_3,
    validator: {
      validate: function (value, args) {
        return isISO31661Alpha3(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid ISO31661 Alpha3 code";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsMongoId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMongoId = isMongoId;
exports.IsMongoId = IsMongoId;
exports.IS_MONGO_ID = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MONGO_ID = "isMongoId";
/**
 * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.
 * If given value is not a string, then it returns false.
 */

exports.IS_MONGO_ID = IS_MONGO_ID;

function isMongoId(value) {
  return typeof value === "string" && _validator.default.isMongoId(value);
}
/**
 * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.
 * If given value is not a string, then it returns false.
 */


function IsMongoId(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MONGO_ID,
    validator: {
      validate: function (value, args) {
        return isMongoId(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a mongodb id";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsMultibyte.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMultibyte = isMultibyte;
exports.IsMultibyte = IsMultibyte;
exports.IS_MULTIBYTE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MULTIBYTE = "isMultibyte";
/**
 * Checks if the string contains one or more multibyte chars.
 * If given value is not a string, then it returns false.
 */

exports.IS_MULTIBYTE = IS_MULTIBYTE;

function isMultibyte(value) {
  return typeof value === "string" && _validator.default.isMultibyte(value);
}
/**
 * Checks if the string contains one or more multibyte chars.
 * If given value is not a string, then it returns false.
 */


function IsMultibyte(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MULTIBYTE,
    validator: {
      validate: function (value, args) {
        return isMultibyte(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain one or more multibyte chars";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsSurrogatePair.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSurrogatePair = isSurrogatePair;
exports.IsSurrogatePair = IsSurrogatePair;
exports.IS_SURROGATE_PAIR = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_SURROGATE_PAIR = "isSurrogatePair";
/**
 * Checks if the string contains any surrogate pairs chars.
 * If given value is not a string, then it returns false.
 */

exports.IS_SURROGATE_PAIR = IS_SURROGATE_PAIR;

function isSurrogatePair(value) {
  return typeof value === "string" && _validator.default.isSurrogatePair(value);
}
/**
 * Checks if the string contains any surrogate pairs chars.
 * If given value is not a string, then it returns false.
 */


function IsSurrogatePair(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_SURROGATE_PAIR,
    validator: {
      validate: function (value, args) {
        return isSurrogatePair(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain any surrogate pairs chars";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsUrl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isURL = isURL;
exports.IsUrl = IsUrl;
exports.IS_URL = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_URL = "isUrl";
/**
 * Checks if the string is an url.
 * If given value is not a string, then it returns false.
 */

exports.IS_URL = IS_URL;

function isURL(value, options) {
  return typeof value === "string" && _validator.default.isURL(value, options);
}
/**
 * Checks if the string is an url.
 * If given value is not a string, then it returns false.
 */


function IsUrl(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_URL,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isURL(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an URL address";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsUUID.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUUID = isUUID;
exports.IsUUID = IsUUID;
exports.IS_UUID = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_UUID = "isUuid";
/**
 * Checks if the string is a UUID (version 3, 4 or 5).
 * If given value is not a string, then it returns false.
 */

exports.IS_UUID = IS_UUID;

function isUUID(value, version) {
  return typeof value === "string" && _validator.default.isUUID(value, version);
}
/**
 * Checks if the string is a UUID (version 3, 4 or 5).
 * If given value is not a string, then it returns false.
 */


function IsUUID(version, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_UUID,
    constraints: [version],
    validator: {
      validate: function (value, args) {
        return isUUID(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an UUID";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsFirebasePushId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFirebasePushId = isFirebasePushId;
exports.IsFirebasePushId = IsFirebasePushId;
exports.IS_FIREBASE_PUSH_ID = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_FIREBASE_PUSH_ID = "IsFirebasePushId";
/**
 * Checks if the string is a Firebase Push Id
 * If given value is not a Firebase Push Id, it returns false
 */

exports.IS_FIREBASE_PUSH_ID = IS_FIREBASE_PUSH_ID;

function isFirebasePushId(value) {
  var webSafeRegex = /^[a-zA-Z0-9_-]*$/;
  return typeof value === "string" && value.length === 20 && webSafeRegex.test(value);
}
/**
 * Checks if the string is a Firebase Push Id
 * If given value is not a Firebase Push Id, it returns false
 */


function IsFirebasePushId(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_FIREBASE_PUSH_ID,
    validator: {
      validate: function (value, args) {
        return isFirebasePushId(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a Firebase Push Id";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/string/IsUppercase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUppercase = isUppercase;
exports.IsUppercase = IsUppercase;
exports.IS_UPPERCASE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_UPPERCASE = "isUppercase";
/**
 * Checks if the string is uppercase.
 * If given value is not a string, then it returns false.
 */

exports.IS_UPPERCASE = IS_UPPERCASE;

function isUppercase(value) {
  return typeof value === "string" && _validator.default.isUppercase(value);
}
/**
 * Checks if the string is uppercase.
 * If given value is not a string, then it returns false.
 */


function IsUppercase(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_UPPERCASE,
    validator: {
      validate: function (value, args) {
        return isUppercase(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be uppercase";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/Length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.length = length;
exports.Length = Length;
exports.LENGTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LENGTH = "length";
/**
 * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.
 * If given value is not a string, then it returns false.
 */

exports.LENGTH = LENGTH;

function length(value, min, max) {
  return typeof value === "string" && _validator.default.isLength(value, {
    min: min,
    max: max
  });
}
/**
 * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.
 * If given value is not a string, then it returns false.
 */


function Length(min, max, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: LENGTH,
    constraints: [min, max],
    validator: {
      validate: function (value, args) {
        return length(value, args.constraints[0], args.constraints[1]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix, args) {
        var isMinLength = args.constraints[0] !== null && args.constraints[0] !== undefined;
        var isMaxLength = args.constraints[1] !== null && args.constraints[1] !== undefined;

        if (isMinLength && (!args.value || args.value.length < args.constraints[0])) {
          return eachPrefix + "$property must be longer than or equal to $constraint1 characters";
        } else if (isMaxLength && args.value.length > args.constraints[1]) {
          return eachPrefix + "$property must be shorter than or equal to $constraint2 characters";
        }

        return eachPrefix + "$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/MaxLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maxLength = maxLength;
exports.MaxLength = MaxLength;
exports.MAX_LENGTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MAX_LENGTH = "maxLength";
/**
 * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.
 * If given value is not a string, then it returns false.
 */

exports.MAX_LENGTH = MAX_LENGTH;

function maxLength(value, max) {
  return typeof value === "string" && _validator.default.isLength(value, {
    min: 0,
    max: max
  });
}
/**
 * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.
 * If given value is not a string, then it returns false.
 */


function MaxLength(min, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: MAX_LENGTH,
    constraints: [min],
    validator: {
      validate: function (value, args) {
        return maxLength(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be shorter than or equal to $constraint1 characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/MinLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minLength = minLength;
exports.MinLength = MinLength;
exports.MIN_LENGTH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MIN_LENGTH = "minLength";
/**
 * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.
 * If given value is not a string, then it returns false.
 */

exports.MIN_LENGTH = MIN_LENGTH;

function minLength(value, min) {
  return typeof value === "string" && _validator.default.isLength(value, {
    min: min
  });
}
/**
 * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.
 * If given value is not a string, then it returns false.
 */


function MinLength(min, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: MIN_LENGTH,
    constraints: [min],
    validator: {
      validate: function (value, args) {
        return minLength(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be longer than or equal to $constraint1 characters";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/Matches.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matches = matches;
exports.Matches = Matches;
exports.MATCHES = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MATCHES = "matches";
exports.MATCHES = MATCHES;

function matches(value, pattern, modifiers) {
  return typeof value === "string" && _validator.default.matches(value, pattern, modifiers);
}

function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {
  var modifiers;

  if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {
    validationOptions = modifiersOrAnnotationOptions;
  } else {
    modifiers = modifiersOrAnnotationOptions;
  }

  return (0, _ValidateBy.ValidateBy)({
    name: MATCHES,
    constraints: [pattern, modifiers],
    validator: {
      validate: function (value, args) {
        return matches(value, args.constraints[0], args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix, args) {
        return eachPrefix + "$property must match $constraint1 regular expression";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/google-libphonenumber/dist/libphonenumber.js":[function(require,module,exports) {
var define;
var global = arguments[3];
(function (f) {
  if (typeof exports === "object" && typeof module !== "undefined") {
    module.exports = f();
  } else if (typeof define === "function" && define.amd) {
    define([], f);
  } else {
    var g;

    if (typeof window !== "undefined") {
      g = window;
    } else if (typeof global !== "undefined") {
      g = global;
    } else if (typeof self !== "undefined") {
      g = self;
    } else {
      g = this;
    }

    g.libphonenumber = f();
  }
})(function () {
  var define, module, exports;
  return function () {
    function r(e, n, t) {
      function o(i, f) {
        if (!n[i]) {
          if (!e[i]) {
            var c = "function" == typeof require && require;
            if (!f && c) return c(i, !0);
            if (u) return u(i, !0);
            var a = new Error("Cannot find module '" + i + "'");
            throw a.code = "MODULE_NOT_FOUND", a;
          }

          var p = n[i] = {
            exports: {}
          };
          e[i][0].call(p.exports, function (r) {
            var n = e[i][1][r];
            return o(n || r);
          }, p, p.exports, r, e, n, t);
        }

        return n[i].exports;
      }

      for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);

      return o;
    }

    return r;
  }()({
    1: [function (require, module, exports) {
      /*
      
       Copyright The Closure Library Authors.
       SPDX-License-Identifier: Apache-2.0
      */
      var COMPILED = !0,
          goog = goog || {};
      goog.global = this || self;

      goog.exportPath_ = function (a, b, c) {
        a = a.split(".");
        c = c || goog.global;
        a[0] in c || "undefined" == typeof c.execScript || c.execScript("var " + a[0]);

        for (var d; a.length && (d = a.shift());) {
          a.length || void 0 === b ? c = c[d] && c[d] !== Object.prototype[d] ? c[d] : c[d] = {} : c[d] = b;
        }
      };

      goog.define = function (a, b) {
        var c = b;

        if (!COMPILED) {
          var d = goog.global.CLOSURE_UNCOMPILED_DEFINES,
              e = goog.global.CLOSURE_DEFINES;
          d && void 0 === d.nodeType && Object.prototype.hasOwnProperty.call(d, a) ? c = d[a] : e && void 0 === e.nodeType && Object.prototype.hasOwnProperty.call(e, a) && (c = e[a]);
        }

        return c;
      };

      goog.FEATURESET_YEAR = 2012;
      goog.DEBUG = !0;
      goog.LOCALE = "en";
      goog.TRUSTED_SITE = !0;
      goog.STRICT_MODE_COMPATIBLE = !1;
      goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
      goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;

      goog.provide = function (a) {
        if (goog.isInModuleLoader_()) {
          throw Error("goog.provide cannot be used within a module.");
        }

        if (!COMPILED && goog.isProvided_(a)) {
          throw Error('Namespace "' + a + '" already declared.');
        }

        goog.constructNamespace_(a);
      };

      goog.constructNamespace_ = function (a, b) {
        if (!COMPILED) {
          delete goog.implicitNamespaces_[a];

          for (var c = a; (c = c.substring(0, c.lastIndexOf("."))) && !goog.getObjectByName(c);) {
            goog.implicitNamespaces_[c] = !0;
          }
        }

        goog.exportPath_(a, b);
      };

      goog.getScriptNonce = function (a) {
        if (a && a != goog.global) {
          return goog.getScriptNonce_(a.document);
        }

        null === goog.cspNonce_ && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document));
        return goog.cspNonce_;
      };

      goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
      goog.cspNonce_ = null;

      goog.getScriptNonce_ = function (a) {
        return (a = a.querySelector && a.querySelector("script[nonce]")) && (a = a.nonce || a.getAttribute("nonce")) && goog.NONCE_PATTERN_.test(a) ? a : "";
      };

      goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;

      goog.module = function (a) {
        if ("string" !== typeof a || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {
          throw Error("Invalid module identifier");
        }

        if (!goog.isInGoogModuleLoader_()) {
          throw Error("Module " + a + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
        }

        if (goog.moduleLoaderState_.moduleName) {
          throw Error("goog.module may only be called once per module.");
        }

        goog.moduleLoaderState_.moduleName = a;

        if (!COMPILED) {
          if (goog.isProvided_(a)) {
            throw Error('Namespace "' + a + '" already declared.');
          }

          delete goog.implicitNamespaces_[a];
        }
      };

      goog.module.get = function (a) {
        return goog.module.getInternal_(a);
      };

      goog.module.getInternal_ = function (a) {
        if (!COMPILED) {
          if (a in goog.loadedModules_) {
            return goog.loadedModules_[a].exports;
          }

          if (!goog.implicitNamespaces_[a]) {
            return a = goog.getObjectByName(a), null != a ? a : null;
          }
        }

        return null;
      };

      goog.ModuleType = {
        ES6: "es6",
        GOOG: "goog"
      };
      goog.moduleLoaderState_ = null;

      goog.isInModuleLoader_ = function () {
        return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
      };

      goog.isInGoogModuleLoader_ = function () {
        return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
      };

      goog.isInEs6ModuleLoader_ = function () {
        if (goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6) {
          return !0;
        }

        var a = goog.global.$jscomp;
        return a ? "function" != typeof a.getCurrentModulePath ? !1 : !!a.getCurrentModulePath() : !1;
      };

      goog.module.declareLegacyNamespace = function () {
        if (!COMPILED && !goog.isInGoogModuleLoader_()) {
          throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
        }

        if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
          throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
        }

        goog.moduleLoaderState_.declareLegacyNamespace = !0;
      };

      goog.declareModuleId = function (a) {
        if (!COMPILED) {
          if (!goog.isInEs6ModuleLoader_()) {
            throw Error("goog.declareModuleId may only be called from within an ES6 module");
          }

          if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
            throw Error("goog.declareModuleId may only be called once per module.");
          }

          if (a in goog.loadedModules_) {
            throw Error('Module with namespace "' + a + '" already exists.');
          }
        }

        if (goog.moduleLoaderState_) {
          goog.moduleLoaderState_.moduleName = a;
        } else {
          var b = goog.global.$jscomp;

          if (!b || "function" != typeof b.getCurrentModulePath) {
            throw Error('Module with namespace "' + a + '" has been loaded incorrectly.');
          }

          b = b.require(b.getCurrentModulePath());
          goog.loadedModules_[a] = {
            exports: b,
            type: goog.ModuleType.ES6,
            moduleId: a
          };
        }
      };

      goog.setTestOnly = function (a) {
        if (goog.DISALLOW_TEST_ONLY_CODE) {
          throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : "."));
        }
      };

      goog.forwardDeclare = function (a) {};

      COMPILED || (goog.isProvided_ = function (a) {
        return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && null != goog.getObjectByName(a);
      }, goog.implicitNamespaces_ = {
        "goog.module": !0
      });

      goog.getObjectByName = function (a, b) {
        for (var c = a.split("."), d = b || goog.global, e = 0; e < c.length; e++) {
          if (d = d[c[e]], null == d) {
            return null;
          }
        }

        return d;
      };

      goog.globalize = function (a, b) {
        var c = b || goog.global,
            d;

        for (d in a) {
          c[d] = a[d];
        }
      };

      goog.addDependency = function (a, b, c, d) {
        !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(a, b, c, d);
      };

      goog.ENABLE_DEBUG_LOADER = !0;

      goog.logToConsole_ = function (a) {
        goog.global.console && goog.global.console.error(a);
      };

      goog.require = function (a) {
        if (!COMPILED) {
          goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(a);

          if (goog.isProvided_(a)) {
            if (goog.isInModuleLoader_()) {
              return goog.module.getInternal_(a);
            }
          } else {
            if (goog.ENABLE_DEBUG_LOADER) {
              var b = goog.moduleLoaderState_;
              goog.moduleLoaderState_ = null;

              try {
                goog.debugLoader_.load_(a);
              } finally {
                goog.moduleLoaderState_ = b;
              }
            }
          }

          return null;
        }
      };

      goog.requireType = function (a) {
        return {};
      };

      goog.basePath = "";

      goog.nullFunction = function () {};

      goog.abstractMethod = function () {
        throw Error("unimplemented abstract method");
      };

      goog.addSingletonGetter = function (a) {
        a.instance_ = void 0;

        a.getInstance = function () {
          if (a.instance_) {
            return a.instance_;
          }

          goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);
          return a.instance_ = new a();
        };
      };

      goog.instantiatedSingletons_ = [];
      goog.LOAD_MODULE_USING_EVAL = !0;
      goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
      goog.loadedModules_ = {};
      goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
      goog.TRANSPILE = "detect";
      goog.ASSUME_ES_MODULES_TRANSPILED = !1;
      goog.TRANSPILE_TO_LANGUAGE = "";
      goog.TRANSPILER = "transpile.js";
      goog.hasBadLetScoping = null;

      goog.useSafari10Workaround = function () {
        if (null == goog.hasBadLetScoping) {
          try {
            var a = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
          } catch (b) {
            a = !1;
          }

          goog.hasBadLetScoping = a;
        }

        return goog.hasBadLetScoping;
      };

      goog.workaroundSafari10EvalBug = function (a) {
        return "(function(){" + a + "\n;})();\n";
      };

      goog.loadModule = function (a) {
        var b = goog.moduleLoaderState_;

        try {
          goog.moduleLoaderState_ = {
            moduleName: "",
            declareLegacyNamespace: !1,
            type: goog.ModuleType.GOOG
          };

          if (goog.isFunction(a)) {
            var c = a.call(void 0, {});
          } else {
            if ("string" === typeof a) {
              goog.useSafari10Workaround() && (a = goog.workaroundSafari10EvalBug(a)), c = goog.loadModuleFromSource_.call(void 0, a);
            } else {
              throw Error("Invalid module definition");
            }
          }

          var d = goog.moduleLoaderState_.moduleName;

          if ("string" === typeof d && d) {
            goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof c && null != c && Object.seal(c), goog.loadedModules_[d] = {
              exports: c,
              type: goog.ModuleType.GOOG,
              moduleId: goog.moduleLoaderState_.moduleName
            };
          } else {
            throw Error('Invalid module name "' + d + '"');
          }
        } finally {
          goog.moduleLoaderState_ = b;
        }
      };

      goog.loadModuleFromSource_ = function (a) {
        eval(a);
        return {};
      };

      goog.normalizePath_ = function (a) {
        a = a.split("/");

        for (var b = 0; b < a.length;) {
          "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++;
        }

        return a.join("/");
      };

      goog.loadFileSync_ = function (a) {
        if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
          return goog.global.CLOSURE_LOAD_FILE_SYNC(a);
        }

        try {
          var b = new goog.global.XMLHttpRequest();
          b.open("get", a, !1);
          b.send();
          return 0 == b.status || 200 == b.status ? b.responseText : null;
        } catch (c) {
          return null;
        }
      };

      goog.transpile_ = function (a, b, c) {
        var d = goog.global.$jscomp;
        d || (goog.global.$jscomp = d = {});
        var e = d.transpile;

        if (!e) {
          var f = goog.basePath + goog.TRANSPILER,
              g = goog.loadFileSync_(f);

          if (g) {
            (function () {
              (0, eval)(g + "\n//# sourceURL=" + f);
            }).call(goog.global);

            if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
              throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
            }

            goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
            d = goog.global.$jscomp;
            e = d.transpile;
          }
        }

        e || (e = d.transpile = function (a, b) {
          goog.logToConsole_(b + " requires transpilation but no transpiler was found.");
          return a;
        });
        return e(a, b, c);
      };

      goog.typeOf = function (a) {
        var b = typeof a;

        if ("object" == b) {
          if (a) {
            if (a instanceof Array) {
              return "array";
            }

            if (a instanceof Object) {
              return b;
            }

            var c = Object.prototype.toString.call(a);

            if ("[object Window]" == c) {
              return "object";
            }

            if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) {
              return "array";
            }

            if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) {
              return "function";
            }
          } else {
            return "null";
          }
        } else {
          if ("function" == b && "undefined" == typeof a.call) {
            return "object";
          }
        }

        return b;
      };

      goog.isArray = function (a) {
        return "array" == goog.typeOf(a);
      };

      goog.isArrayLike = function (a) {
        var b = goog.typeOf(a);
        return "array" == b || "object" == b && "number" == typeof a.length;
      };

      goog.isDateLike = function (a) {
        return goog.isObject(a) && "function" == typeof a.getFullYear;
      };

      goog.isFunction = function (a) {
        return "function" == goog.typeOf(a);
      };

      goog.isObject = function (a) {
        var b = typeof a;
        return "object" == b && null != a || "function" == b;
      };

      goog.getUid = function (a) {
        return Object.prototype.hasOwnProperty.call(a, goog.UID_PROPERTY_) && a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);
      };

      goog.hasUid = function (a) {
        return !!a[goog.UID_PROPERTY_];
      };

      goog.removeUid = function (a) {
        null !== a && "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);

        try {
          delete a[goog.UID_PROPERTY_];
        } catch (b) {}
      };

      goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
      goog.uidCounter_ = 0;
      goog.getHashCode = goog.getUid;
      goog.removeHashCode = goog.removeUid;

      goog.cloneObject = function (a) {
        var b = goog.typeOf(a);

        if ("object" == b || "array" == b) {
          if ("function" === typeof a.clone) {
            return a.clone();
          }

          b = "array" == b ? [] : {};

          for (var c in a) {
            b[c] = goog.cloneObject(a[c]);
          }

          return b;
        }

        return a;
      };

      goog.bindNative_ = function (a, b, c) {
        return a.call.apply(a.bind, arguments);
      };

      goog.bindJs_ = function (a, b, c) {
        if (!a) {
          throw Error();
        }

        if (2 < arguments.length) {
          var d = Array.prototype.slice.call(arguments, 2);
          return function () {
            var c = Array.prototype.slice.call(arguments);
            Array.prototype.unshift.apply(c, d);
            return a.apply(b, c);
          };
        }

        return function () {
          return a.apply(b, arguments);
        };
      };

      goog.bind = function (a, b, c) {
        Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
        return goog.bind.apply(null, arguments);
      };

      goog.partial = function (a, b) {
        var c = Array.prototype.slice.call(arguments, 1);
        return function () {
          var b = c.slice();
          b.push.apply(b, arguments);
          return a.apply(this, b);
        };
      };

      goog.mixin = function (a, b) {
        for (var c in b) {
          a[c] = b[c];
        }
      };

      goog.now = goog.TRUSTED_SITE && Date.now || function () {
        return +new Date();
      };

      goog.globalEval = function (a) {
        if (goog.global.execScript) {
          goog.global.execScript(a, "JavaScript");
        } else {
          if (goog.global.eval) {
            if (null == goog.evalWorksForGlobals_) {
              try {
                goog.global.eval("var _evalTest_ = 1;");
              } catch (d) {}

              if ("undefined" != typeof goog.global._evalTest_) {
                try {
                  delete goog.global._evalTest_;
                } catch (d) {}

                goog.evalWorksForGlobals_ = !0;
              } else {
                goog.evalWorksForGlobals_ = !1;
              }
            }

            if (goog.evalWorksForGlobals_) {
              goog.global.eval(a);
            } else {
              var b = goog.global.document,
                  c = b.createElement("script");
              c.type = "text/javascript";
              c.defer = !1;
              c.appendChild(b.createTextNode(a));
              b.head.appendChild(c);
              b.head.removeChild(c);
            }
          } else {
            throw Error("goog.globalEval not available");
          }
        }
      };

      goog.evalWorksForGlobals_ = null;

      goog.getCssName = function (a, b) {
        if ("." == String(a).charAt(0)) {
          throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a);
        }

        var c = function (a) {
          return goog.cssNameMapping_[a] || a;
        },
            d = function (a) {
          a = a.split("-");

          for (var b = [], d = 0; d < a.length; d++) {
            b.push(c(a[d]));
          }

          return b.join("-");
        };

        d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function (a) {
          return a;
        };
        d = b ? a + "-" + d(b) : d(a);
        return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(d) : d;
      };

      goog.setCssNameMapping = function (a, b) {
        goog.cssNameMapping_ = a;
        goog.cssNameMappingStyle_ = b;
      };

      !COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);

      goog.getMsg = function (a, b, c) {
        c && c.html && (a = a.replace(/</g, "&lt;"));
        b && (a = a.replace(/\{\$([^}]+)}/g, function (a, c) {
          return null != b && c in b ? b[c] : a;
        }));
        return a;
      };

      goog.getMsgWithFallback = function (a, b) {
        return a;
      };

      goog.exportSymbol = function (a, b, c) {
        goog.exportPath_(a, b, c);
      };

      goog.exportProperty = function (a, b, c) {
        a[b] = c;
      };

      goog.inherits = function (a, b) {
        function c() {}

        c.prototype = b.prototype;
        a.superClass_ = b.prototype;
        a.prototype = new c();
        a.prototype.constructor = a;

        a.base = function (a, c, f) {
          for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) {
            d[e - 2] = arguments[e];
          }

          return b.prototype[c].apply(a, d);
        };
      };

      goog.scope = function (a) {
        if (goog.isInModuleLoader_()) {
          throw Error("goog.scope is not supported within a module.");
        }

        a.call(goog.global);
      };

      COMPILED || (goog.global.COMPILED = COMPILED);

      goog.defineClass = function (a, b) {
        var c = b.constructor,
            d = b.statics;
        c && c != Object.prototype.constructor || (c = function () {
          throw Error("cannot instantiate an interface (no constructor defined).");
        });
        c = goog.defineClass.createSealingConstructor_(c, a);
        a && goog.inherits(c, a);
        delete b.constructor;
        delete b.statics;
        goog.defineClass.applyProperties_(c.prototype, b);
        null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
        return c;
      };

      goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;

      goog.defineClass.createSealingConstructor_ = function (a, b) {
        if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
          return a;
        }

        var c = !goog.defineClass.isUnsealable_(b),
            d = function () {
          var b = a.apply(this, arguments) || this;
          b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];
          this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);
          return b;
        };

        return d;
      };

      goog.defineClass.isUnsealable_ = function (a) {
        return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
      };

      goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

      goog.defineClass.applyProperties_ = function (a, b) {
        for (var c in b) {
          Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
        }

        for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) {
          c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
        }
      };

      goog.tagUnsealableClass = function (a) {
        !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);
      };

      goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
      !COMPILED && goog.DEPENDENCIES_ENABLED && (goog.inHtmlDocument_ = function () {
        var a = goog.global.document;
        return null != a && "write" in a;
      }, goog.isDocumentLoading_ = function () {
        var a = goog.global.document;
        return a.attachEvent ? "complete" != a.readyState : "loading" == a.readyState;
      }, goog.findBasePath_ = function () {
        if (void 0 != goog.global.CLOSURE_BASE_PATH && "string" === typeof goog.global.CLOSURE_BASE_PATH) {
          goog.basePath = goog.global.CLOSURE_BASE_PATH;
        } else {
          if (goog.inHtmlDocument_()) {
            var a = goog.global.document,
                b = a.currentScript;
            a = b ? [b] : a.getElementsByTagName("SCRIPT");

            for (b = a.length - 1; 0 <= b; --b) {
              var c = a[b].src,
                  d = c.lastIndexOf("?");
              d = -1 == d ? c.length : d;

              if ("base.js" == c.substr(d - 7, 7)) {
                goog.basePath = c.substr(0, d - 7);
                break;
              }
            }
          }
        }
      }, goog.findBasePath_(), goog.Transpiler = function () {
        this.requiresTranspilation_ = null;
        this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
      }, goog.Transpiler.prototype.createRequiresTranspilation_ = function () {
        function a(a, b) {
          e ? d[a] = !0 : b() ? (c = a, d[a] = !1) : e = d[a] = !0;
        }

        function b(a) {
          try {
            return !!eval(a);
          } catch (h) {
            return !1;
          }
        }

        var c = "es3",
            d = {
          es3: !1
        },
            e = !1,
            f = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
        a("es5", function () {
          return b("[1,].length==1");
        });
        a("es6", function () {
          return f.match(/Edge\/(\d+)(\.\d)*/i) ? !1 : b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');
        });
        a("es7", function () {
          return b("2 ** 2 == 4");
        });
        a("es8", function () {
          return b("async () => 1, true");
        });
        a("es9", function () {
          return b("({...rest} = {}), true");
        });
        a("es_next", function () {
          return !1;
        });
        return {
          target: c,
          map: d
        };
      }, goog.Transpiler.prototype.needsTranspile = function (a, b) {
        if ("always" == goog.TRANSPILE) {
          return !0;
        }

        if ("never" == goog.TRANSPILE) {
          return !1;
        }

        if (!this.requiresTranspilation_) {
          var c = this.createRequiresTranspilation_();
          this.requiresTranspilation_ = c.map;
          this.transpilationTarget_ = this.transpilationTarget_ || c.target;
        }

        if (a in this.requiresTranspilation_) {
          return this.requiresTranspilation_[a] ? !0 : !goog.inHtmlDocument_() || "es6" != b || "noModule" in goog.global.document.createElement("script") ? !1 : !0;
        }

        throw Error("Unknown language mode: " + a);
      }, goog.Transpiler.prototype.transpile = function (a, b) {
        return goog.transpile_(a, b, this.transpilationTarget_);
      }, goog.transpiler_ = new goog.Transpiler(), goog.protectScriptTag_ = function (a) {
        return a.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
      }, goog.DebugLoader_ = function () {
        this.dependencies_ = {};
        this.idToPath_ = {};
        this.written_ = {};
        this.loadingDeps_ = [];
        this.depsToLoad_ = [];
        this.paused_ = !1;
        this.factory_ = new goog.DependencyFactory(goog.transpiler_);
        this.deferredCallbacks_ = {};
        this.deferredQueue_ = [];
      }, goog.DebugLoader_.prototype.bootstrap = function (a, b) {
        function c() {
          d && (goog.global.setTimeout(d, 0), d = null);
        }

        var d = b;

        if (a.length) {
          for (var e = [], f = 0; f < a.length; f++) {
            var g = this.getPathFromDeps_(a[f]);

            if (!g) {
              throw Error("Unregonized namespace: " + a[f]);
            }

            e.push(this.dependencies_[g]);
          }

          g = goog.require;
          var h = 0;

          for (f = 0; f < a.length; f++) {
            g(a[f]), e[f].onLoad(function () {
              ++h == a.length && c();
            });
          }
        } else {
          c();
        }
      }, goog.DebugLoader_.prototype.loadClosureDeps = function () {
        this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + "deps.js"), "deps.js", [], [], {}, !1));
        this.loadDeps_();
      }, goog.DebugLoader_.prototype.requested = function (a, b) {
        var c = this.getPathFromDeps_(a);

        if (c && (b || this.areDepsLoaded_(this.dependencies_[c].requires))) {
          var d = this.deferredCallbacks_[c];
          d && (delete this.deferredCallbacks_[c], d());
        }
      }, goog.DebugLoader_.prototype.setDependencyFactory = function (a) {
        this.factory_ = a;
      }, goog.DebugLoader_.prototype.load_ = function (a) {
        if (this.getPathFromDeps_(a)) {
          var b = this,
              c = [],
              d = function (a) {
            var e = b.getPathFromDeps_(a);

            if (!e) {
              throw Error("Bad dependency path or symbol: " + a);
            }

            if (!b.written_[e]) {
              b.written_[e] = !0;
              a = b.dependencies_[e];

              for (e = 0; e < a.requires.length; e++) {
                goog.isProvided_(a.requires[e]) || d(a.requires[e]);
              }

              c.push(a);
            }
          };

          d(a);
          a = !!this.depsToLoad_.length;
          this.depsToLoad_ = this.depsToLoad_.concat(c);
          this.paused_ || a || this.loadDeps_();
        } else {
          throw a = "goog.require could not find: " + a, goog.logToConsole_(a), Error(a);
        }
      }, goog.DebugLoader_.prototype.loadDeps_ = function () {
        for (var a = this, b = this.paused_; this.depsToLoad_.length && !b;) {
          (function () {
            var c = !1,
                d = a.depsToLoad_.shift(),
                e = !1;
            a.loading_(d);
            var f = {
              pause: function () {
                if (c) {
                  throw Error("Cannot call pause after the call to load.");
                }

                b = !0;
              },
              resume: function () {
                c ? a.resume_() : b = !1;
              },
              loaded: function () {
                if (e) {
                  throw Error("Double call to loaded.");
                }

                e = !0;
                a.loaded_(d);
              },
              pending: function () {
                for (var b = [], c = 0; c < a.loadingDeps_.length; c++) {
                  b.push(a.loadingDeps_[c]);
                }

                return b;
              },
              setModuleState: function (a) {
                goog.moduleLoaderState_ = {
                  type: a,
                  moduleName: "",
                  declareLegacyNamespace: !1
                };
              },
              registerEs6ModuleExports: function (a, b, c) {
                c && (goog.loadedModules_[c] = {
                  exports: b,
                  type: goog.ModuleType.ES6,
                  moduleId: c || ""
                });
              },
              registerGoogModuleExports: function (a, b) {
                goog.loadedModules_[a] = {
                  exports: b,
                  type: goog.ModuleType.GOOG,
                  moduleId: a
                };
              },
              clearModuleState: function () {
                goog.moduleLoaderState_ = null;
              },
              defer: function (b) {
                if (c) {
                  throw Error("Cannot register with defer after the call to load.");
                }

                a.defer_(d, b);
              },
              areDepsLoaded: function () {
                return a.areDepsLoaded_(d.requires);
              }
            };

            try {
              d.load(f);
            } finally {
              c = !0;
            }
          })();
        }

        b && this.pause_();
      }, goog.DebugLoader_.prototype.pause_ = function () {
        this.paused_ = !0;
      }, goog.DebugLoader_.prototype.resume_ = function () {
        this.paused_ && (this.paused_ = !1, this.loadDeps_());
      }, goog.DebugLoader_.prototype.loading_ = function (a) {
        this.loadingDeps_.push(a);
      }, goog.DebugLoader_.prototype.loaded_ = function (a) {
        for (var b = 0; b < this.loadingDeps_.length; b++) {
          if (this.loadingDeps_[b] == a) {
            this.loadingDeps_.splice(b, 1);
            break;
          }
        }

        for (b = 0; b < this.deferredQueue_.length; b++) {
          if (this.deferredQueue_[b] == a.path) {
            this.deferredQueue_.splice(b, 1);
            break;
          }
        }

        if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
          for (; this.deferredQueue_.length;) {
            this.requested(this.deferredQueue_.shift(), !0);
          }
        }

        a.loaded();
      }, goog.DebugLoader_.prototype.areDepsLoaded_ = function (a) {
        for (var b = 0; b < a.length; b++) {
          var c = this.getPathFromDeps_(a[b]);

          if (!c || !(c in this.deferredCallbacks_ || goog.isProvided_(a[b]))) {
            return !1;
          }
        }

        return !0;
      }, goog.DebugLoader_.prototype.getPathFromDeps_ = function (a) {
        return a in this.idToPath_ ? this.idToPath_[a] : a in this.dependencies_ ? a : null;
      }, goog.DebugLoader_.prototype.defer_ = function (a, b) {
        this.deferredCallbacks_[a.path] = b;
        this.deferredQueue_.push(a.path);
      }, goog.LoadController = function () {}, goog.LoadController.prototype.pause = function () {}, goog.LoadController.prototype.resume = function () {}, goog.LoadController.prototype.loaded = function () {}, goog.LoadController.prototype.pending = function () {}, goog.LoadController.prototype.registerEs6ModuleExports = function (a, b, c) {}, goog.LoadController.prototype.setModuleState = function (a) {}, goog.LoadController.prototype.clearModuleState = function () {}, goog.LoadController.prototype.defer = function (a) {}, goog.LoadController.prototype.areDepsLoaded = function () {}, goog.Dependency = function (a, b, c, d, e) {
        this.path = a;
        this.relativePath = b;
        this.provides = c;
        this.requires = d;
        this.loadFlags = e;
        this.loaded_ = !1;
        this.loadCallbacks_ = [];
      }, goog.Dependency.prototype.getPathName = function () {
        var a = this.path,
            b = a.indexOf("://");
        0 <= b && (a = a.substring(b + 3), b = a.indexOf("/"), 0 <= b && (a = a.substring(b + 1)));
        return a;
      }, goog.Dependency.prototype.onLoad = function (a) {
        this.loaded_ ? a() : this.loadCallbacks_.push(a);
      }, goog.Dependency.prototype.loaded = function () {
        this.loaded_ = !0;
        var a = this.loadCallbacks_;
        this.loadCallbacks_ = [];

        for (var b = 0; b < a.length; b++) {
          a[b]();
        }
      }, goog.Dependency.defer_ = !1, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function (a) {
        var b = Math.random().toString(32);
        goog.Dependency.callbackMap_[b] = a;
        return b;
      }, goog.Dependency.unregisterCallback_ = function (a) {
        delete goog.Dependency.callbackMap_[a];
      }, goog.Dependency.callback_ = function (a, b) {
        if (a in goog.Dependency.callbackMap_) {
          for (var c = goog.Dependency.callbackMap_[a], d = [], e = 1; e < arguments.length; e++) {
            d.push(arguments[e]);
          }

          c.apply(void 0, d);
        } else {
          throw Error("Callback key " + a + " does not exist (was base.js loaded more than once?).");
        }
      }, goog.Dependency.prototype.load = function (a) {
        if (goog.global.CLOSURE_IMPORT_SCRIPT) {
          goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();
        } else {
          if (goog.inHtmlDocument_()) {
            var b = goog.global.document;

            if ("complete" == b.readyState && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
              if (/\bdeps.js$/.test(this.path)) {
                a.loaded();
                return;
              }

              throw Error('Cannot write "' + this.path + '" after document load');
            }

            if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
              var c = goog.Dependency.registerCallback_(function (b) {
                goog.DebugLoader_.IS_OLD_IE_ && "complete" != b.readyState || (goog.Dependency.unregisterCallback_(c), a.loaded());
              }),
                  d = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ? ' nonce="' + goog.getScriptNonce() + '"' : "";
              d = '<script src="' + this.path + '" ' + (goog.DebugLoader_.IS_OLD_IE_ ? "onreadystatechange" : "onload") + "=\"goog.Dependency.callback_('" + c + '\', this)" type="text/javascript" ' + (goog.Dependency.defer_ ? "defer" : "") + d + ">\x3c/script>";
              b.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(d) : d);
            } else {
              var e = b.createElement("script");
              e.defer = goog.Dependency.defer_;
              e.async = !1;
              e.type = "text/javascript";
              (d = goog.getScriptNonce()) && e.setAttribute("nonce", d);
              goog.DebugLoader_.IS_OLD_IE_ ? (a.pause(), e.onreadystatechange = function () {
                if ("loaded" == e.readyState || "complete" == e.readyState) {
                  a.loaded(), a.resume();
                }
              }) : e.onload = function () {
                e.onload = null;
                a.loaded();
              };
              e.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
              b.head.appendChild(e);
            }
          } else {
            goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), "deps.js" == this.relativePath ? (goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."), a.loaded()) : a.pause();
          }
        }
      }, goog.Es6ModuleDependency = function (a, b, c, d, e) {
        goog.Dependency.call(this, a, b, c, d, e);
      }, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function (a) {
        function b(a, b) {
          var c = b ? '<script type="module" crossorigin>' + b + "\x3c/script>" : '<script type="module" crossorigin src="' + a + '">\x3c/script>';
          d.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(c) : c);
        }

        function c(a, b) {
          var c = d.createElement("script");
          c.defer = !0;
          c.async = !1;
          c.type = "module";
          c.setAttribute("crossorigin", !0);
          var e = goog.getScriptNonce();
          e && c.setAttribute("nonce", e);
          b ? c.textContent = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(b) : b : c.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(a) : a;
          d.head.appendChild(c);
        }

        if (goog.global.CLOSURE_IMPORT_SCRIPT) {
          goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();
        } else {
          if (goog.inHtmlDocument_()) {
            var d = goog.global.document,
                e = this;

            if (goog.isDocumentLoading_()) {
              var f = b;
              goog.Dependency.defer_ = !0;
            } else {
              f = c;
            }

            var g = goog.Dependency.registerCallback_(function () {
              goog.Dependency.unregisterCallback_(g);
              a.setModuleState(goog.ModuleType.ES6);
            });
            f(void 0, 'goog.Dependency.callback_("' + g + '")');
            f(this.path, void 0);
            var h = goog.Dependency.registerCallback_(function (b) {
              goog.Dependency.unregisterCallback_(h);
              a.registerEs6ModuleExports(e.path, b, goog.moduleLoaderState_.moduleName);
            });
            f(void 0, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + h + '", m)');
            var k = goog.Dependency.registerCallback_(function () {
              goog.Dependency.unregisterCallback_(k);
              a.clearModuleState();
              a.loaded();
            });
            f(void 0, 'goog.Dependency.callback_("' + k + '")');
          } else {
            goog.logToConsole_("Cannot use default debug loader outside of HTML documents."), a.pause();
          }
        }
      }, goog.TransformedDependency = function (a, b, c, d, e) {
        goog.Dependency.call(this, a, b, c, d, e);
        this.contents_ = null;
        this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
      }, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function (a) {
        function b() {
          e.contents_ = goog.loadFileSync_(e.path);
          e.contents_ && (e.contents_ = e.transform(e.contents_), e.contents_ && (e.contents_ += "\n//# sourceURL=" + e.path));
        }

        function c() {
          e.lazyFetch_ && b();

          if (e.contents_) {
            f && a.setModuleState(goog.ModuleType.ES6);

            try {
              var c = e.contents_;
              e.contents_ = null;
              goog.globalEval(c);

              if (f) {
                var d = goog.moduleLoaderState_.moduleName;
              }
            } finally {
              f && a.clearModuleState();
            }

            f && goog.global.$jscomp.require.ensure([e.getPathName()], function () {
              a.registerEs6ModuleExports(e.path, goog.global.$jscomp.require(e.getPathName()), d);
            });
            a.loaded();
          }
        }

        function d() {
          var a = goog.global.document,
              b = goog.Dependency.registerCallback_(function () {
            goog.Dependency.unregisterCallback_(b);
            c();
          }),
              d = '<script type="text/javascript">' + goog.protectScriptTag_('goog.Dependency.callback_("' + b + '");') + "\x3c/script>";
          a.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(d) : d);
        }

        var e = this;

        if (goog.global.CLOSURE_IMPORT_SCRIPT) {
          b(), this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_) ? (this.contents_ = null, a.loaded()) : a.pause();
        } else {
          var f = this.loadFlags.module == goog.ModuleType.ES6;
          this.lazyFetch_ || b();
          var g = 1 < a.pending().length,
              h = g && goog.DebugLoader_.IS_OLD_IE_;
          g = goog.Dependency.defer_ && (g || goog.isDocumentLoading_());

          if (h || g) {
            a.defer(function () {
              c();
            });
          } else {
            var k = goog.global.document;
            h = goog.inHtmlDocument_() && "ActiveXObject" in goog.global;

            if (f && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !h) {
              goog.Dependency.defer_ = !0;
              a.pause();
              var l = k.onreadystatechange;

              k.onreadystatechange = function () {
                "interactive" == k.readyState && (k.onreadystatechange = l, c(), a.resume());
                goog.isFunction(l) && l.apply(void 0, arguments);
              };
            } else {
              !goog.DebugLoader_.IS_OLD_IE_ && goog.inHtmlDocument_() && goog.isDocumentLoading_() ? d() : c();
            }
          }
        }
      }, goog.TransformedDependency.prototype.transform = function (a) {}, goog.TranspiledDependency = function (a, b, c, d, e, f) {
        goog.TransformedDependency.call(this, a, b, c, d, e);
        this.transpiler = f;
      }, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function (a) {
        return this.transpiler.transpile(a, this.getPathName());
      }, goog.PreTranspiledEs6ModuleDependency = function (a, b, c, d, e) {
        goog.TransformedDependency.call(this, a, b, c, d, e);
      }, goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency), goog.PreTranspiledEs6ModuleDependency.prototype.transform = function (a) {
        return a;
      }, goog.GoogModuleDependency = function (a, b, c, d, e, f, g) {
        goog.TransformedDependency.call(this, a, b, c, d, e);
        this.needsTranspile_ = f;
        this.transpiler_ = g;
      }, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform = function (a) {
        this.needsTranspile_ && (a = this.transpiler_.transpile(a, this.getPathName()));
        return goog.LOAD_MODULE_USING_EVAL && void 0 !== goog.global.JSON ? "goog.loadModule(" + goog.global.JSON.stringify(a + "\n//# sourceURL=" + this.path + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + a + "\n;return exports});\n//# sourceURL=" + this.path + "\n";
      }, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function (a, b, c, d) {
        b = b || [];
        a = a.replace(/\\/g, "/");
        var e = goog.normalizePath_(goog.basePath + a);
        d && "boolean" !== typeof d || (d = d ? {
          module: goog.ModuleType.GOOG
        } : {});
        c = this.factory_.createDependency(e, a, b, c, d, goog.transpiler_.needsTranspile(d.lang || "es3", d.module));
        this.dependencies_[e] = c;

        for (c = 0; c < b.length; c++) {
          this.idToPath_[b[c]] = e;
        }

        this.idToPath_[a] = e;
      }, goog.DependencyFactory = function (a) {
        this.transpiler = a;
      }, goog.DependencyFactory.prototype.createDependency = function (a, b, c, d, e, f) {
        return e.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(a, b, c, d, e, f, this.transpiler) : f ? new goog.TranspiledDependency(a, b, c, d, e, this.transpiler) : e.module == goog.ModuleType.ES6 ? "never" == goog.TRANSPILE && goog.ASSUME_ES_MODULES_TRANSPILED ? new goog.PreTranspiledEs6ModuleDependency(a, b, c, d, e) : new goog.Es6ModuleDependency(a, b, c, d, e) : new goog.Dependency(a, b, c, d, e);
      }, goog.debugLoader_ = new goog.DebugLoader_(), goog.loadClosureDeps = function () {
        goog.debugLoader_.loadClosureDeps();
      }, goog.setDependencyFactory = function (a) {
        goog.debugLoader_.setDependencyFactory(a);
      }, goog.global.CLOSURE_NO_DEPS || goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function (a, b) {
        goog.debugLoader_.bootstrap(a, b);
      });
      goog.TRUSTED_TYPES_POLICY_NAME = "";

      goog.identity_ = function (a) {
        return a;
      };

      goog.createTrustedTypesPolicy = function (a) {
        var b = null,
            c = goog.global.trustedTypes || goog.global.TrustedTypes;

        if (!c || !c.createPolicy) {
          return b;
        }

        try {
          b = c.createPolicy(a, {
            createHTML: goog.identity_,
            createScript: goog.identity_,
            createScriptURL: goog.identity_,
            createURL: goog.identity_
          });
        } catch (d) {
          goog.logToConsole_(d.message);
        }

        return b;
      };

      goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
      goog.string = {};

      goog.string.StringBuffer = function (a, b) {
        null != a && this.append.apply(this, arguments);
      };

      goog.string.StringBuffer.prototype.buffer_ = "";

      goog.string.StringBuffer.prototype.set = function (a) {
        this.buffer_ = "" + a;
      };

      goog.string.StringBuffer.prototype.append = function (a, b, c) {
        this.buffer_ += String(a);

        if (null != b) {
          for (var d = 1; d < arguments.length; d++) {
            this.buffer_ += arguments[d];
          }
        }

        return this;
      };

      goog.string.StringBuffer.prototype.clear = function () {
        this.buffer_ = "";
      };

      goog.string.StringBuffer.prototype.getLength = function () {
        return this.buffer_.length;
      };

      goog.string.StringBuffer.prototype.toString = function () {
        return this.buffer_;
      };

      goog.debug = {};

      goog.debug.Error = function (a) {
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, goog.debug.Error);
        } else {
          var b = Error().stack;
          b && (this.stack = b);
        }

        a && (this.message = String(a));
        this.reportErrorToServer = !0;
      };

      goog.inherits(goog.debug.Error, Error);
      goog.debug.Error.prototype.name = "CustomError";
      goog.dom = {};
      goog.dom.NodeType = {
        ELEMENT: 1,
        ATTRIBUTE: 2,
        TEXT: 3,
        CDATA_SECTION: 4,
        ENTITY_REFERENCE: 5,
        ENTITY: 6,
        PROCESSING_INSTRUCTION: 7,
        COMMENT: 8,
        DOCUMENT: 9,
        DOCUMENT_TYPE: 10,
        DOCUMENT_FRAGMENT: 11,
        NOTATION: 12
      };
      goog.asserts = {};
      goog.asserts.ENABLE_ASSERTS = goog.DEBUG;

      goog.asserts.AssertionError = function (a, b) {
        goog.debug.Error.call(this, goog.asserts.subs_(a, b));
        this.messagePattern = a;
      };

      goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
      goog.asserts.AssertionError.prototype.name = "AssertionError";

      goog.asserts.DEFAULT_ERROR_HANDLER = function (a) {
        throw a;
      };

      goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;

      goog.asserts.subs_ = function (a, b) {
        for (var c = a.split("%s"), d = "", e = c.length - 1, f = 0; f < e; f++) {
          d += c[f] + (f < b.length ? b[f] : "%s");
        }

        return d + c[e];
      };

      goog.asserts.doAssertFailure_ = function (a, b, c, d) {
        var e = "Assertion failed";

        if (c) {
          e += ": " + c;
          var f = d;
        } else {
          a && (e += ": " + a, f = b);
        }

        a = new goog.asserts.AssertionError("" + e, f || []);
        goog.asserts.errorHandler_(a);
      };

      goog.asserts.setErrorHandler = function (a) {
        goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
      };

      goog.asserts.assert = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertExists = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && null == a && goog.asserts.doAssertFailure_("Expected to exist: %s.", [a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.fail = function (a, b) {
        goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)));
      };

      goog.asserts.assertNumber = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && "number" !== typeof a && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertString = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && "string" !== typeof a && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertFunction = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertObject = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertArray = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertBoolean = function (a, b, c) {
        goog.asserts.ENABLE_ASSERTS && "boolean" !== typeof a && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertElement = function (a, b, c) {
        !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertInstanceof = function (a, b, c, d) {
        !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));
        return a;
      };

      goog.asserts.assertFinite = function (a, b, c) {
        !goog.asserts.ENABLE_ASSERTS || "number" == typeof a && isFinite(a) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [a], b, Array.prototype.slice.call(arguments, 2));
        return a;
      };

      goog.asserts.assertObjectPrototypeIsIntact = function () {
        for (var a in Object.prototype) {
          goog.asserts.fail(a + " should not be enumerable in Object.prototype.");
        }
      };

      goog.asserts.getType_ = function (a) {
        return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
      };

      goog.array = {};
      goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
      goog.array.ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;

      goog.array.peek = function (a) {
        return a[a.length - 1];
      };

      goog.array.last = goog.array.peek;
      goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.indexOf.call(a, b, c);
      } : function (a, b, c) {
        c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;

        if ("string" === typeof a) {
          return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, c);
        }

        for (; c < a.length; c++) {
          if (c in a && a[c] === b) {
            return c;
          }
        }

        return -1;
      };
      goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);
      } : function (a, b, c) {
        c = null == c ? a.length - 1 : c;
        0 > c && (c = Math.max(0, a.length + c));

        if ("string" === typeof a) {
          return "string" !== typeof b || 1 != b.length ? -1 : a.lastIndexOf(b, c);
        }

        for (; 0 <= c; c--) {
          if (c in a && a[c] === b) {
            return c;
          }
        }

        return -1;
      };
      goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        Array.prototype.forEach.call(a, b, c);
      } : function (a, b, c) {
        for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
          f in e && b.call(c, e[f], f, a);
        }
      };

      goog.array.forEachRight = function (a, b, c) {
        var d = a.length,
            e = "string" === typeof a ? a.split("") : a;

        for (--d; 0 <= d; --d) {
          d in e && b.call(c, e[d], d, a);
        }
      };

      goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.filter.call(a, b, c);
      } : function (a, b, c) {
        for (var d = a.length, e = [], f = 0, g = "string" === typeof a ? a.split("") : a, h = 0; h < d; h++) {
          if (h in g) {
            var k = g[h];
            b.call(c, k, h, a) && (e[f++] = k);
          }
        }

        return e;
      };
      goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.map.call(a, b, c);
      } : function (a, b, c) {
        for (var d = a.length, e = Array(d), f = "string" === typeof a ? a.split("") : a, g = 0; g < d; g++) {
          g in f && (e[g] = b.call(c, f[g], g, a));
        }

        return e;
      };
      goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function (a, b, c, d) {
        goog.asserts.assert(null != a.length);
        d && (b = goog.bind(b, d));
        return Array.prototype.reduce.call(a, b, c);
      } : function (a, b, c, d) {
        var e = c;
        goog.array.forEach(a, function (c, g) {
          e = b.call(d, e, c, g, a);
        });
        return e;
      };
      goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function (a, b, c, d) {
        goog.asserts.assert(null != a.length);
        goog.asserts.assert(null != b);
        d && (b = goog.bind(b, d));
        return Array.prototype.reduceRight.call(a, b, c);
      } : function (a, b, c, d) {
        var e = c;
        goog.array.forEachRight(a, function (c, g) {
          e = b.call(d, e, c, g, a);
        });
        return e;
      };
      goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.some.call(a, b, c);
      } : function (a, b, c) {
        for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
          if (f in e && b.call(c, e[f], f, a)) {
            return !0;
          }
        }

        return !1;
      };
      goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.every.call(a, b, c);
      } : function (a, b, c) {
        for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
          if (f in e && !b.call(c, e[f], f, a)) {
            return !1;
          }
        }

        return !0;
      };

      goog.array.count = function (a, b, c) {
        var d = 0;
        goog.array.forEach(a, function (a, f, g) {
          b.call(c, a, f, g) && ++d;
        }, c);
        return d;
      };

      goog.array.find = function (a, b, c) {
        b = goog.array.findIndex(a, b, c);
        return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
      };

      goog.array.findIndex = function (a, b, c) {
        for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) {
          if (f in e && b.call(c, e[f], f, a)) {
            return f;
          }
        }

        return -1;
      };

      goog.array.findRight = function (a, b, c) {
        b = goog.array.findIndexRight(a, b, c);
        return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
      };

      goog.array.findIndexRight = function (a, b, c) {
        var d = a.length,
            e = "string" === typeof a ? a.split("") : a;

        for (--d; 0 <= d; d--) {
          if (d in e && b.call(c, e[d], d, a)) {
            return d;
          }
        }

        return -1;
      };

      goog.array.contains = function (a, b) {
        return 0 <= goog.array.indexOf(a, b);
      };

      goog.array.isEmpty = function (a) {
        return 0 == a.length;
      };

      goog.array.clear = function (a) {
        if (!goog.isArray(a)) {
          for (var b = a.length - 1; 0 <= b; b--) {
            delete a[b];
          }
        }

        a.length = 0;
      };

      goog.array.insert = function (a, b) {
        goog.array.contains(a, b) || a.push(b);
      };

      goog.array.insertAt = function (a, b, c) {
        goog.array.splice(a, c, 0, b);
      };

      goog.array.insertArrayAt = function (a, b, c) {
        goog.partial(goog.array.splice, a, c, 0).apply(null, b);
      };

      goog.array.insertBefore = function (a, b, c) {
        var d;
        2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);
      };

      goog.array.remove = function (a, b) {
        var c = goog.array.indexOf(a, b),
            d;
        (d = 0 <= c) && goog.array.removeAt(a, c);
        return d;
      };

      goog.array.removeLast = function (a, b) {
        var c = goog.array.lastIndexOf(a, b);
        return 0 <= c ? (goog.array.removeAt(a, c), !0) : !1;
      };

      goog.array.removeAt = function (a, b) {
        goog.asserts.assert(null != a.length);
        return 1 == Array.prototype.splice.call(a, b, 1).length;
      };

      goog.array.removeIf = function (a, b, c) {
        b = goog.array.findIndex(a, b, c);
        return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;
      };

      goog.array.removeAllIf = function (a, b, c) {
        var d = 0;
        goog.array.forEachRight(a, function (e, f) {
          b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;
        });
        return d;
      };

      goog.array.concat = function (a) {
        return Array.prototype.concat.apply([], arguments);
      };

      goog.array.join = function (a) {
        return Array.prototype.concat.apply([], arguments);
      };

      goog.array.toArray = function (a) {
        var b = a.length;

        if (0 < b) {
          for (var c = Array(b), d = 0; d < b; d++) {
            c[d] = a[d];
          }

          return c;
        }

        return [];
      };

      goog.array.clone = goog.array.toArray;

      goog.array.extend = function (a, b) {
        for (var c = 1; c < arguments.length; c++) {
          var d = arguments[c];

          if (goog.isArrayLike(d)) {
            var e = a.length || 0,
                f = d.length || 0;
            a.length = e + f;

            for (var g = 0; g < f; g++) {
              a[e + g] = d[g];
            }
          } else {
            a.push(d);
          }
        }
      };

      goog.array.splice = function (a, b, c, d) {
        goog.asserts.assert(null != a.length);
        return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));
      };

      goog.array.slice = function (a, b, c) {
        goog.asserts.assert(null != a.length);
        return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);
      };

      goog.array.removeDuplicates = function (a, b, c) {
        b = b || a;

        var d = function (a) {
          return goog.isObject(a) ? "o" + goog.getUid(a) : (typeof a).charAt(0) + a;
        };

        c = c || d;
        d = {};

        for (var e = 0, f = 0; f < a.length;) {
          var g = a[f++],
              h = c(g);
          Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);
        }

        b.length = e;
      };

      goog.array.binarySearch = function (a, b, c) {
        return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);
      };

      goog.array.binarySelect = function (a, b, c) {
        return goog.array.binarySearch_(a, b, !0, void 0, c);
      };

      goog.array.binarySearch_ = function (a, b, c, d, e) {
        for (var f = 0, g = a.length, h; f < g;) {
          var k = f + (g - f >>> 1);
          var l = c ? b.call(e, a[k], k, a) : b(d, a[k]);
          0 < l ? f = k + 1 : (g = k, h = !l);
        }

        return h ? f : -f - 1;
      };

      goog.array.sort = function (a, b) {
        a.sort(b || goog.array.defaultCompare);
      };

      goog.array.stableSort = function (a, b) {
        for (var c = Array(a.length), d = 0; d < a.length; d++) {
          c[d] = {
            index: d,
            value: a[d]
          };
        }

        var e = b || goog.array.defaultCompare;
        goog.array.sort(c, function (a, b) {
          return e(a.value, b.value) || a.index - b.index;
        });

        for (d = 0; d < a.length; d++) {
          a[d] = c[d].value;
        }
      };

      goog.array.sortByKey = function (a, b, c) {
        var d = c || goog.array.defaultCompare;
        goog.array.sort(a, function (a, c) {
          return d(b(a), b(c));
        });
      };

      goog.array.sortObjectsByKey = function (a, b, c) {
        goog.array.sortByKey(a, function (a) {
          return a[b];
        }, c);
      };

      goog.array.isSorted = function (a, b, c) {
        b = b || goog.array.defaultCompare;

        for (var d = 1; d < a.length; d++) {
          var e = b(a[d - 1], a[d]);

          if (0 < e || 0 == e && c) {
            return !1;
          }
        }

        return !0;
      };

      goog.array.equals = function (a, b, c) {
        if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {
          return !1;
        }

        var d = a.length;
        c = c || goog.array.defaultCompareEquality;

        for (var e = 0; e < d; e++) {
          if (!c(a[e], b[e])) {
            return !1;
          }
        }

        return !0;
      };

      goog.array.compare3 = function (a, b, c) {
        c = c || goog.array.defaultCompare;

        for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {
          var f = c(a[e], b[e]);

          if (0 != f) {
            return f;
          }
        }

        return goog.array.defaultCompare(a.length, b.length);
      };

      goog.array.defaultCompare = function (a, b) {
        return a > b ? 1 : a < b ? -1 : 0;
      };

      goog.array.inverseDefaultCompare = function (a, b) {
        return -goog.array.defaultCompare(a, b);
      };

      goog.array.defaultCompareEquality = function (a, b) {
        return a === b;
      };

      goog.array.binaryInsert = function (a, b, c) {
        c = goog.array.binarySearch(a, b, c);
        return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;
      };

      goog.array.binaryRemove = function (a, b, c) {
        b = goog.array.binarySearch(a, b, c);
        return 0 <= b ? goog.array.removeAt(a, b) : !1;
      };

      goog.array.bucket = function (a, b, c) {
        for (var d = {}, e = 0; e < a.length; e++) {
          var f = a[e],
              g = b.call(c, f, e, a);
          void 0 !== g && (d[g] || (d[g] = [])).push(f);
        }

        return d;
      };

      goog.array.toObject = function (a, b, c) {
        var d = {};
        goog.array.forEach(a, function (e, f) {
          d[b.call(c, e, f, a)] = e;
        });
        return d;
      };

      goog.array.range = function (a, b, c) {
        var d = [],
            e = 0,
            f = a;
        c = c || 1;
        void 0 !== b && (e = a, f = b);

        if (0 > c * (f - e)) {
          return [];
        }

        if (0 < c) {
          for (a = e; a < f; a += c) {
            d.push(a);
          }
        } else {
          for (a = e; a > f; a += c) {
            d.push(a);
          }
        }

        return d;
      };

      goog.array.repeat = function (a, b) {
        for (var c = [], d = 0; d < b; d++) {
          c[d] = a;
        }

        return c;
      };

      goog.array.flatten = function (a) {
        for (var b = [], c = 0; c < arguments.length; c++) {
          var d = arguments[c];

          if (goog.isArray(d)) {
            for (var e = 0; e < d.length; e += 8192) {
              var f = goog.array.slice(d, e, e + 8192);
              f = goog.array.flatten.apply(null, f);

              for (var g = 0; g < f.length; g++) {
                b.push(f[g]);
              }
            }
          } else {
            b.push(d);
          }
        }

        return b;
      };

      goog.array.rotate = function (a, b) {
        goog.asserts.assert(null != a.length);
        a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));
        return a;
      };

      goog.array.moveItem = function (a, b, c) {
        goog.asserts.assert(0 <= b && b < a.length);
        goog.asserts.assert(0 <= c && c < a.length);
        b = Array.prototype.splice.call(a, b, 1);
        Array.prototype.splice.call(a, c, 0, b[0]);
      };

      goog.array.zip = function (a) {
        if (!arguments.length) {
          return [];
        }

        for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++) {
          arguments[d].length < c && (c = arguments[d].length);
        }

        for (d = 0; d < c; d++) {
          for (var e = [], f = 0; f < arguments.length; f++) {
            e.push(arguments[f][d]);
          }

          b.push(e);
        }

        return b;
      };

      goog.array.shuffle = function (a, b) {
        for (var c = b || Math.random, d = a.length - 1; 0 < d; d--) {
          var e = Math.floor(c() * (d + 1)),
              f = a[d];
          a[d] = a[e];
          a[e] = f;
        }
      };

      goog.array.copyByIndex = function (a, b) {
        var c = [];
        goog.array.forEach(b, function (b) {
          c.push(a[b]);
        });
        return c;
      };

      goog.array.concatMap = function (a, b, c) {
        return goog.array.concat.apply([], goog.array.map(a, b, c));
      };

      goog.object = {};

      goog.object.is = function (a, b) {
        return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
      };

      goog.object.forEach = function (a, b, c) {
        for (var d in a) {
          b.call(c, a[d], d, a);
        }
      };

      goog.object.filter = function (a, b, c) {
        var d = {},
            e;

        for (e in a) {
          b.call(c, a[e], e, a) && (d[e] = a[e]);
        }

        return d;
      };

      goog.object.map = function (a, b, c) {
        var d = {},
            e;

        for (e in a) {
          d[e] = b.call(c, a[e], e, a);
        }

        return d;
      };

      goog.object.some = function (a, b, c) {
        for (var d in a) {
          if (b.call(c, a[d], d, a)) {
            return !0;
          }
        }

        return !1;
      };

      goog.object.every = function (a, b, c) {
        for (var d in a) {
          if (!b.call(c, a[d], d, a)) {
            return !1;
          }
        }

        return !0;
      };

      goog.object.getCount = function (a) {
        var b = 0,
            c;

        for (c in a) {
          b++;
        }

        return b;
      };

      goog.object.getAnyKey = function (a) {
        for (var b in a) {
          return b;
        }
      };

      goog.object.getAnyValue = function (a) {
        for (var b in a) {
          return a[b];
        }
      };

      goog.object.contains = function (a, b) {
        return goog.object.containsValue(a, b);
      };

      goog.object.getValues = function (a) {
        var b = [],
            c = 0,
            d;

        for (d in a) {
          b[c++] = a[d];
        }

        return b;
      };

      goog.object.getKeys = function (a) {
        var b = [],
            c = 0,
            d;

        for (d in a) {
          b[c++] = d;
        }

        return b;
      };

      goog.object.getValueByKeys = function (a, b) {
        var c = goog.isArrayLike(b),
            d = c ? b : arguments;

        for (c = c ? 0 : 1; c < d.length; c++) {
          if (null == a) {
            return;
          }

          a = a[d[c]];
        }

        return a;
      };

      goog.object.containsKey = function (a, b) {
        return null !== a && b in a;
      };

      goog.object.containsValue = function (a, b) {
        for (var c in a) {
          if (a[c] == b) {
            return !0;
          }
        }

        return !1;
      };

      goog.object.findKey = function (a, b, c) {
        for (var d in a) {
          if (b.call(c, a[d], d, a)) {
            return d;
          }
        }
      };

      goog.object.findValue = function (a, b, c) {
        return (b = goog.object.findKey(a, b, c)) && a[b];
      };

      goog.object.isEmpty = function (a) {
        for (var b in a) {
          return !1;
        }

        return !0;
      };

      goog.object.clear = function (a) {
        for (var b in a) {
          delete a[b];
        }
      };

      goog.object.remove = function (a, b) {
        var c;
        (c = b in a) && delete a[b];
        return c;
      };

      goog.object.add = function (a, b, c) {
        if (null !== a && b in a) {
          throw Error('The object already contains the key "' + b + '"');
        }

        goog.object.set(a, b, c);
      };

      goog.object.get = function (a, b, c) {
        return null !== a && b in a ? a[b] : c;
      };

      goog.object.set = function (a, b, c) {
        a[b] = c;
      };

      goog.object.setIfUndefined = function (a, b, c) {
        return b in a ? a[b] : a[b] = c;
      };

      goog.object.setWithReturnValueIfNotSet = function (a, b, c) {
        if (b in a) {
          return a[b];
        }

        c = c();
        return a[b] = c;
      };

      goog.object.equals = function (a, b) {
        for (var c in a) {
          if (!(c in b) || a[c] !== b[c]) {
            return !1;
          }
        }

        for (var d in b) {
          if (!(d in a)) {
            return !1;
          }
        }

        return !0;
      };

      goog.object.clone = function (a) {
        var b = {},
            c;

        for (c in a) {
          b[c] = a[c];
        }

        return b;
      };

      goog.object.unsafeClone = function (a) {
        var b = goog.typeOf(a);

        if ("object" == b || "array" == b) {
          if (goog.isFunction(a.clone)) {
            return a.clone();
          }

          b = "array" == b ? [] : {};

          for (var c in a) {
            b[c] = goog.object.unsafeClone(a[c]);
          }

          return b;
        }

        return a;
      };

      goog.object.transpose = function (a) {
        var b = {},
            c;

        for (c in a) {
          b[a[c]] = c;
        }

        return b;
      };

      goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

      goog.object.extend = function (a, b) {
        for (var c, d, e = 1; e < arguments.length; e++) {
          d = arguments[e];

          for (c in d) {
            a[c] = d[c];
          }

          for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++) {
            c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
          }
        }
      };

      goog.object.create = function (a) {
        var b = arguments.length;

        if (1 == b && goog.isArray(arguments[0])) {
          return goog.object.create.apply(null, arguments[0]);
        }

        if (b % 2) {
          throw Error("Uneven number of arguments");
        }

        for (var c = {}, d = 0; d < b; d += 2) {
          c[arguments[d]] = arguments[d + 1];
        }

        return c;
      };

      goog.object.createSet = function (a) {
        var b = arguments.length;

        if (1 == b && goog.isArray(arguments[0])) {
          return goog.object.createSet.apply(null, arguments[0]);
        }

        for (var c = {}, d = 0; d < b; d++) {
          c[arguments[d]] = !0;
        }

        return c;
      };

      goog.object.createImmutableView = function (a) {
        var b = a;
        Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));
        return b;
      };

      goog.object.isImmutableView = function (a) {
        return !!Object.isFrozen && Object.isFrozen(a);
      };

      goog.object.getAllPropertyNames = function (a, b, c) {
        if (!a) {
          return [];
        }

        if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
          return goog.object.getKeys(a);
        }

        for (var d = {}; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {
          for (var e = Object.getOwnPropertyNames(a), f = 0; f < e.length; f++) {
            d[e[f]] = !0;
          }

          a = Object.getPrototypeOf(a);
        }

        return goog.object.getKeys(d);
      };

      goog.object.getSuperClass = function (a) {
        return (a = Object.getPrototypeOf(a.prototype)) && a.constructor;
      };

      goog.dom.asserts = {};

      goog.dom.asserts.assertIsLocation = function (a) {
        if (goog.asserts.ENABLE_ASSERTS) {
          var b = goog.dom.asserts.getWindow_(a);
          b && (!a || !(a instanceof b.Location) && a instanceof b.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(a));
        }

        return a;
      };

      goog.dom.asserts.assertIsElementType_ = function (a, b) {
        if (goog.asserts.ENABLE_ASSERTS) {
          var c = goog.dom.asserts.getWindow_(a);
          c && "undefined" != typeof c[b] && (a && (a instanceof c[b] || !(a instanceof c.Location || a instanceof c.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", b, goog.dom.asserts.debugStringForType_(a)));
        }

        return a;
      };

      goog.dom.asserts.assertIsHTMLAnchorElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLAnchorElement");
      };

      goog.dom.asserts.assertIsHTMLButtonElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLButtonElement");
      };

      goog.dom.asserts.assertIsHTMLLinkElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLLinkElement");
      };

      goog.dom.asserts.assertIsHTMLImageElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLImageElement");
      };

      goog.dom.asserts.assertIsHTMLAudioElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLAudioElement");
      };

      goog.dom.asserts.assertIsHTMLVideoElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLVideoElement");
      };

      goog.dom.asserts.assertIsHTMLInputElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLInputElement");
      };

      goog.dom.asserts.assertIsHTMLTextAreaElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLTextAreaElement");
      };

      goog.dom.asserts.assertIsHTMLCanvasElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLCanvasElement");
      };

      goog.dom.asserts.assertIsHTMLEmbedElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLEmbedElement");
      };

      goog.dom.asserts.assertIsHTMLFormElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLFormElement");
      };

      goog.dom.asserts.assertIsHTMLFrameElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLFrameElement");
      };

      goog.dom.asserts.assertIsHTMLIFrameElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLIFrameElement");
      };

      goog.dom.asserts.assertIsHTMLObjectElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLObjectElement");
      };

      goog.dom.asserts.assertIsHTMLScriptElement = function (a) {
        return goog.dom.asserts.assertIsElementType_(a, "HTMLScriptElement");
      };

      goog.dom.asserts.debugStringForType_ = function (a) {
        if (goog.isObject(a)) {
          try {
            return a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a);
          } catch (b) {
            return "<object could not be stringified>";
          }
        } else {
          return void 0 === a ? "undefined" : null === a ? "null" : typeof a;
        }
      };

      goog.dom.asserts.getWindow_ = function (a) {
        try {
          var b = a && a.ownerDocument,
              c = b && (b.defaultView || b.parentWindow);
          c = c || goog.global;

          if (c.Element && c.Location) {
            return c;
          }
        } catch (d) {}

        return null;
      };

      goog.functions = {};

      goog.functions.constant = function (a) {
        return function () {
          return a;
        };
      };

      goog.functions.FALSE = function () {
        return !1;
      };

      goog.functions.TRUE = function () {
        return !0;
      };

      goog.functions.NULL = function () {
        return null;
      };

      goog.functions.identity = function (a, b) {
        return a;
      };

      goog.functions.error = function (a) {
        return function () {
          throw Error(a);
        };
      };

      goog.functions.fail = function (a) {
        return function () {
          throw a;
        };
      };

      goog.functions.lock = function (a, b) {
        b = b || 0;
        return function () {
          return a.apply(this, Array.prototype.slice.call(arguments, 0, b));
        };
      };

      goog.functions.nth = function (a) {
        return function () {
          return arguments[a];
        };
      };

      goog.functions.partialRight = function (a, b) {
        var c = Array.prototype.slice.call(arguments, 1);
        return function () {
          var b = Array.prototype.slice.call(arguments);
          b.push.apply(b, c);
          return a.apply(this, b);
        };
      };

      goog.functions.withReturnValue = function (a, b) {
        return goog.functions.sequence(a, goog.functions.constant(b));
      };

      goog.functions.equalTo = function (a, b) {
        return function (c) {
          return b ? a == c : a === c;
        };
      };

      goog.functions.compose = function (a, b) {
        var c = arguments,
            d = c.length;
        return function () {
          var a;
          d && (a = c[d - 1].apply(this, arguments));

          for (var b = d - 2; 0 <= b; b--) {
            a = c[b].call(this, a);
          }

          return a;
        };
      };

      goog.functions.sequence = function (a) {
        var b = arguments,
            c = b.length;
        return function () {
          for (var a, e = 0; e < c; e++) {
            a = b[e].apply(this, arguments);
          }

          return a;
        };
      };

      goog.functions.and = function (a) {
        var b = arguments,
            c = b.length;
        return function () {
          for (var a = 0; a < c; a++) {
            if (!b[a].apply(this, arguments)) {
              return !1;
            }
          }

          return !0;
        };
      };

      goog.functions.or = function (a) {
        var b = arguments,
            c = b.length;
        return function () {
          for (var a = 0; a < c; a++) {
            if (b[a].apply(this, arguments)) {
              return !0;
            }
          }

          return !1;
        };
      };

      goog.functions.not = function (a) {
        return function () {
          return !a.apply(this, arguments);
        };
      };

      goog.functions.create = function (a, b) {
        var c = function () {};

        c.prototype = a.prototype;
        c = new c();
        a.apply(c, Array.prototype.slice.call(arguments, 1));
        return c;
      };

      goog.functions.CACHE_RETURN_VALUE = !0;

      goog.functions.cacheReturnValue = function (a) {
        var b = !1,
            c;
        return function () {
          if (!goog.functions.CACHE_RETURN_VALUE) {
            return a();
          }

          b || (c = a(), b = !0);
          return c;
        };
      };

      goog.functions.once = function (a) {
        var b = a;
        return function () {
          if (b) {
            var a = b;
            b = null;
            a();
          }
        };
      };

      goog.functions.debounce = function (a, b, c) {
        var d = 0;
        return function (e) {
          goog.global.clearTimeout(d);
          var f = arguments;
          d = goog.global.setTimeout(function () {
            a.apply(c, f);
          }, b);
        };
      };

      goog.functions.throttle = function (a, b, c) {
        var d = 0,
            e = !1,
            f = [],
            g = function () {
          d = 0;
          e && (e = !1, h());
        },
            h = function () {
          d = goog.global.setTimeout(g, b);
          a.apply(c, f);
        };

        return function (a) {
          f = arguments;
          d ? e = !0 : h();
        };
      };

      goog.functions.rateLimit = function (a, b, c) {
        var d = 0,
            e = function () {
          d = 0;
        };

        return function (f) {
          d || (d = goog.global.setTimeout(e, b), a.apply(c, arguments));
        };
      };

      goog.dom.HtmlElement = function () {};

      goog.dom.TagName = function (a) {
        this.tagName_ = a;
      };

      goog.dom.TagName.prototype.toString = function () {
        return this.tagName_;
      };

      goog.dom.TagName.A = new goog.dom.TagName("A");
      goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
      goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
      goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
      goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
      goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
      goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
      goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
      goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
      goog.dom.TagName.B = new goog.dom.TagName("B");
      goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
      goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
      goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
      goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
      goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
      goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
      goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
      goog.dom.TagName.BR = new goog.dom.TagName("BR");
      goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
      goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
      goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
      goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
      goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
      goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
      goog.dom.TagName.COL = new goog.dom.TagName("COL");
      goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
      goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
      goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
      goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
      goog.dom.TagName.DD = new goog.dom.TagName("DD");
      goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
      goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
      goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
      goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
      goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
      goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
      goog.dom.TagName.DL = new goog.dom.TagName("DL");
      goog.dom.TagName.DT = new goog.dom.TagName("DT");
      goog.dom.TagName.EM = new goog.dom.TagName("EM");
      goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
      goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
      goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
      goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
      goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
      goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
      goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
      goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
      goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
      goog.dom.TagName.H1 = new goog.dom.TagName("H1");
      goog.dom.TagName.H2 = new goog.dom.TagName("H2");
      goog.dom.TagName.H3 = new goog.dom.TagName("H3");
      goog.dom.TagName.H4 = new goog.dom.TagName("H4");
      goog.dom.TagName.H5 = new goog.dom.TagName("H5");
      goog.dom.TagName.H6 = new goog.dom.TagName("H6");
      goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
      goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
      goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
      goog.dom.TagName.HR = new goog.dom.TagName("HR");
      goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
      goog.dom.TagName.I = new goog.dom.TagName("I");
      goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
      goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
      goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
      goog.dom.TagName.INS = new goog.dom.TagName("INS");
      goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
      goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
      goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
      goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
      goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
      goog.dom.TagName.LI = new goog.dom.TagName("LI");
      goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
      goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN");
      goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
      goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
      goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
      goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
      goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM");
      goog.dom.TagName.META = new goog.dom.TagName("META");
      goog.dom.TagName.METER = new goog.dom.TagName("METER");
      goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
      goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
      goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
      goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
      goog.dom.TagName.OL = new goog.dom.TagName("OL");
      goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
      goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
      goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
      goog.dom.TagName.P = new goog.dom.TagName("P");
      goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
      goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE");
      goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
      goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
      goog.dom.TagName.Q = new goog.dom.TagName("Q");
      goog.dom.TagName.RP = new goog.dom.TagName("RP");
      goog.dom.TagName.RT = new goog.dom.TagName("RT");
      goog.dom.TagName.RTC = new goog.dom.TagName("RTC");
      goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
      goog.dom.TagName.S = new goog.dom.TagName("S");
      goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
      goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
      goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
      goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
      goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
      goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
      goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
      goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
      goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
      goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
      goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
      goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
      goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
      goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
      goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
      goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
      goog.dom.TagName.TD = new goog.dom.TagName("TD");
      goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
      goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
      goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
      goog.dom.TagName.TH = new goog.dom.TagName("TH");
      goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
      goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
      goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
      goog.dom.TagName.TR = new goog.dom.TagName("TR");
      goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
      goog.dom.TagName.TT = new goog.dom.TagName("TT");
      goog.dom.TagName.U = new goog.dom.TagName("U");
      goog.dom.TagName.UL = new goog.dom.TagName("UL");
      goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
      goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
      goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
      goog.dom.tags = {};
      goog.dom.tags.VOID_TAGS_ = {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        command: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0
      };

      goog.dom.tags.isVoidTag = function (a) {
        return !0 === goog.dom.tags.VOID_TAGS_[a];
      };

      goog.html = {};
      goog.html.trustedtypes = {};
      goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null;

      goog.string.TypedString = function () {};

      goog.string.Const = function (a, b) {
        this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = a === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && b || "";
        this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
      };

      goog.string.Const.prototype.implementsGoogStringTypedString = !0;

      goog.string.Const.prototype.getTypedStringValue = function () {
        return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
      };

      goog.DEBUG && (goog.string.Const.prototype.toString = function () {
        return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
      });

      goog.string.Const.unwrap = function (a) {
        if (a instanceof goog.string.Const && a.constructor === goog.string.Const && a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
          return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
        }

        goog.asserts.fail("expected object of type Const, got '" + a + "'");
        return "type_error:Const";
      };

      goog.string.Const.from = function (a) {
        return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, a);
      };

      goog.string.Const.TYPE_MARKER_ = {};
      goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
      goog.string.Const.EMPTY = goog.string.Const.from("");

      goog.html.SafeScript = function () {
        this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
        this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      };

      goog.html.SafeScript.prototype.implementsGoogStringTypedString = !0;
      goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};

      goog.html.SafeScript.fromConstant = function (a) {
        a = goog.string.Const.unwrap(a);
        return 0 === a.length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeScript.fromConstantAndArgs = function (a, b) {
        for (var c = [], d = 1; d < arguments.length; d++) {
          c.push(goog.html.SafeScript.stringify_(arguments[d]));
        }

        return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(a) + ")(" + c.join(", ") + ");");
      };

      goog.html.SafeScript.fromJson = function (a) {
        return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(a));
      };

      goog.html.SafeScript.prototype.getTypedStringValue = function () {
        return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
      };

      goog.DEBUG && (goog.html.SafeScript.prototype.toString = function () {
        return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
      });

      goog.html.SafeScript.unwrap = function (a) {
        return goog.html.SafeScript.unwrapTrustedScript(a).toString();
      };

      goog.html.SafeScript.unwrapTrustedScript = function (a) {
        if (a instanceof goog.html.SafeScript && a.constructor === goog.html.SafeScript && a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
          return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;
        }

        goog.asserts.fail("expected object of type SafeScript, got '" + a + "' of type " + goog.typeOf(a));
        return "type_error:SafeScript";
      };

      goog.html.SafeScript.stringify_ = function (a) {
        return JSON.stringify(a).replace(/</g, "\\x3c");
      };

      goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function (a) {
        return new goog.html.SafeScript().initSecurityPrivateDoNotAccessOrElse_(a);
      };

      goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a) {
        this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(a) : a;
        return this;
      };

      goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
      goog.fs = {};
      goog.fs.url = {};

      goog.fs.url.createObjectUrl = function (a) {
        return goog.fs.url.getUrlObject_().createObjectURL(a);
      };

      goog.fs.url.revokeObjectUrl = function (a) {
        goog.fs.url.getUrlObject_().revokeObjectURL(a);
      };

      goog.fs.url.getUrlObject_ = function () {
        var a = goog.fs.url.findUrlObject_();

        if (null != a) {
          return a;
        }

        throw Error("This browser doesn't seem to support blob URLs");
      };

      goog.fs.url.findUrlObject_ = function () {
        return void 0 !== goog.global.URL && void 0 !== goog.global.URL.createObjectURL ? goog.global.URL : void 0 !== goog.global.webkitURL && void 0 !== goog.global.webkitURL.createObjectURL ? goog.global.webkitURL : void 0 !== goog.global.createObjectURL ? goog.global : null;
      };

      goog.fs.url.browserSupportsObjectUrls = function () {
        return null != goog.fs.url.findUrlObject_();
      };

      goog.fs.blob = {};

      goog.fs.blob.getBlob = function (a) {
        var b = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;

        if (void 0 !== b) {
          b = new b();

          for (var c = 0; c < arguments.length; c++) {
            b.append(arguments[c]);
          }

          return b.getBlob();
        }

        return goog.fs.blob.getBlobWithProperties(goog.array.toArray(arguments));
      };

      goog.fs.blob.getBlobWithProperties = function (a, b, c) {
        var d = goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;

        if (void 0 !== d) {
          d = new d();

          for (var e = 0; e < a.length; e++) {
            d.append(a[e], c);
          }

          return d.getBlob(b);
        }

        if (void 0 !== goog.global.Blob) {
          return d = {}, b && (d.type = b), c && (d.endings = c), new Blob(a, d);
        }

        throw Error("This browser doesn't seem to support creating Blobs");
      };

      goog.i18n = {};
      goog.i18n.bidi = {};
      goog.i18n.bidi.FORCE_RTL = !1;
      goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) && ("adlm" == goog.LOCALE.substring(3, 7).toLowerCase() || "arab" == goog.LOCALE.substring(3, 7).toLowerCase() || "hebr" == goog.LOCALE.substring(3, 7).toLowerCase() || "nkoo" == goog.LOCALE.substring(3, 7).toLowerCase() || "rohg" == goog.LOCALE.substring(3, 7).toLowerCase() || "thaa" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) && ("adlm" == goog.LOCALE.substring(4, 8).toLowerCase() || "arab" == goog.LOCALE.substring(4, 8).toLowerCase() || "hebr" == goog.LOCALE.substring(4, 8).toLowerCase() || "nkoo" == goog.LOCALE.substring(4, 8).toLowerCase() || "rohg" == goog.LOCALE.substring(4, 8).toLowerCase() || "thaa" == goog.LOCALE.substring(4, 8).toLowerCase());
      goog.i18n.bidi.Format = {
        LRE: "\u202a",
        RLE: "\u202b",
        PDF: "\u202c",
        LRM: "\u200e",
        RLM: "\u200f"
      };
      goog.i18n.bidi.Dir = {
        LTR: 1,
        RTL: -1,
        NEUTRAL: 0
      };
      goog.i18n.bidi.RIGHT = "right";
      goog.i18n.bidi.LEFT = "left";
      goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
      goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;

      goog.i18n.bidi.toDir = function (a, b) {
        return "number" == typeof a ? 0 < a ? goog.i18n.bidi.Dir.LTR : 0 > a ? goog.i18n.bidi.Dir.RTL : b ? null : goog.i18n.bidi.Dir.NEUTRAL : null == a ? null : a ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
      };

      goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
      goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
      goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;

      goog.i18n.bidi.stripHtmlIfNeeded_ = function (a, b) {
        return b ? a.replace(goog.i18n.bidi.htmlSkipReg_, "") : a;
      };

      goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
      goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");

      goog.i18n.bidi.hasAnyRtl = function (a, b) {
        return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
      };

      goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;

      goog.i18n.bidi.hasAnyLtr = function (a, b) {
        return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
      };

      goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
      goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");

      goog.i18n.bidi.isRtlChar = function (a) {
        return goog.i18n.bidi.rtlRe_.test(a);
      };

      goog.i18n.bidi.isLtrChar = function (a) {
        return goog.i18n.bidi.ltrRe_.test(a);
      };

      goog.i18n.bidi.isNeutralChar = function (a) {
        return !goog.i18n.bidi.isLtrChar(a) && !goog.i18n.bidi.isRtlChar(a);
      };

      goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
      goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");

      goog.i18n.bidi.startsWithRtl = function (a, b) {
        return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
      };

      goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;

      goog.i18n.bidi.startsWithLtr = function (a, b) {
        return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
      };

      goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
      goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;

      goog.i18n.bidi.isNeutralText = function (a, b) {
        a = goog.i18n.bidi.stripHtmlIfNeeded_(a, b);
        return goog.i18n.bidi.isRequiredLtrRe_.test(a) || !goog.i18n.bidi.hasAnyLtr(a) && !goog.i18n.bidi.hasAnyRtl(a);
      };

      goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
      goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");

      goog.i18n.bidi.endsWithLtr = function (a, b) {
        return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
      };

      goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;

      goog.i18n.bidi.endsWithRtl = function (a, b) {
        return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a, b));
      };

      goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
      goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;

      goog.i18n.bidi.isRtlLanguage = function (a) {
        return goog.i18n.bidi.rtlLocalesRe_.test(a);
      };

      goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;

      goog.i18n.bidi.guardBracketInText = function (a, b) {
        var c = (void 0 === b ? goog.i18n.bidi.hasAnyRtl(a) : b) ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
        return a.replace(goog.i18n.bidi.bracketGuardTextRe_, c + "$&" + c);
      };

      goog.i18n.bidi.enforceRtlInHtml = function (a) {
        return "<" == a.charAt(0) ? a.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + a + "</span>";
      };

      goog.i18n.bidi.enforceRtlInText = function (a) {
        return goog.i18n.bidi.Format.RLE + a + goog.i18n.bidi.Format.PDF;
      };

      goog.i18n.bidi.enforceLtrInHtml = function (a) {
        return "<" == a.charAt(0) ? a.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + a + "</span>";
      };

      goog.i18n.bidi.enforceLtrInText = function (a) {
        return goog.i18n.bidi.Format.LRE + a + goog.i18n.bidi.Format.PDF;
      };

      goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
      goog.i18n.bidi.leftRe_ = /left/gi;
      goog.i18n.bidi.rightRe_ = /right/gi;
      goog.i18n.bidi.tempRe_ = /%%%%/g;

      goog.i18n.bidi.mirrorCSS = function (a) {
        return a.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
      };

      goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
      goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;

      goog.i18n.bidi.normalizeHebrewQuote = function (a) {
        return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
      };

      goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
      goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
      goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;

      goog.i18n.bidi.estimateDirection = function (a, b) {
        for (var c = 0, d = 0, e = !1, f = goog.i18n.bidi.stripHtmlIfNeeded_(a, b).split(goog.i18n.bidi.wordSeparatorRe_), g = 0; g < f.length; g++) {
          var h = f[g];
          goog.i18n.bidi.startsWithRtl(h) ? (c++, d++) : goog.i18n.bidi.isRequiredLtrRe_.test(h) ? e = !0 : goog.i18n.bidi.hasAnyLtr(h) ? d++ : goog.i18n.bidi.hasNumeralsRe_.test(h) && (e = !0);
        }

        return 0 == d ? e ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : c / d > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
      };

      goog.i18n.bidi.detectRtlDirectionality = function (a, b) {
        return goog.i18n.bidi.estimateDirection(a, b) == goog.i18n.bidi.Dir.RTL;
      };

      goog.i18n.bidi.setElementDirAndAlign = function (a, b) {
        a && (b = goog.i18n.bidi.toDir(b)) && (a.style.textAlign = b == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, a.dir = b == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr");
      };

      goog.i18n.bidi.setElementDirByTextDirectionality = function (a, b) {
        switch (goog.i18n.bidi.estimateDirection(b)) {
          case goog.i18n.bidi.Dir.LTR:
            a.dir = "ltr";
            break;

          case goog.i18n.bidi.Dir.RTL:
            a.dir = "rtl";
            break;

          default:
            a.removeAttribute("dir");
        }
      };

      goog.i18n.bidi.DirectionalString = function () {};

      goog.html.TrustedResourceUrl = function (a, b) {
        this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = a === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && b || "";
        this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      };

      goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;

      goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function () {
        return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
      };

      goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;

      goog.html.TrustedResourceUrl.prototype.getDirection = function () {
        return goog.i18n.bidi.Dir.LTR;
      };

      goog.html.TrustedResourceUrl.prototype.cloneWithParams = function (a, b) {
        var c = goog.html.TrustedResourceUrl.unwrap(this);
        c = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);
        var d = c[3] || "";
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1] + goog.html.TrustedResourceUrl.stringifyParams_("?", c[2] || "", a) + goog.html.TrustedResourceUrl.stringifyParams_("#", d, b));
      };

      goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function () {
        return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
      });

      goog.html.TrustedResourceUrl.unwrap = function (a) {
        return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString();
      };

      goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function (a) {
        if (a instanceof goog.html.TrustedResourceUrl && a.constructor === goog.html.TrustedResourceUrl && a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
          return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
        }

        goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + a + "' of type " + goog.typeOf(a));
        return "type_error:TrustedResourceUrl";
      };

      goog.html.TrustedResourceUrl.format = function (a, b) {
        var c = goog.string.Const.unwrap(a);

        if (!goog.html.TrustedResourceUrl.BASE_URL_.test(c)) {
          throw Error("Invalid TrustedResourceUrl format: " + c);
        }

        var d = c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function (a, d) {
          if (!Object.prototype.hasOwnProperty.call(b, d)) {
            throw Error('Found marker, "' + d + '", in format string, "' + c + '", but no valid label mapping found in args: ' + JSON.stringify(b));
          }

          var e = b[d];
          return e instanceof goog.string.Const ? goog.string.Const.unwrap(e) : encodeURIComponent(String(e));
        });
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(d);
      };

      goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
      goog.html.TrustedResourceUrl.BASE_URL_ = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;
      goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;

      goog.html.TrustedResourceUrl.formatWithParams = function (a, b, c, d) {
        return goog.html.TrustedResourceUrl.format(a, b).cloneWithParams(c, d);
      };

      goog.html.TrustedResourceUrl.fromConstant = function (a) {
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a));
      };

      goog.html.TrustedResourceUrl.fromConstants = function (a) {
        for (var b = "", c = 0; c < a.length; c++) {
          b += goog.string.Const.unwrap(a[c]);
        }

        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.TrustedResourceUrl.fromSafeScript = function (a) {
        a = goog.fs.blob.getBlobWithProperties([goog.html.SafeScript.unwrap(a)], "text/javascript");
        a = goog.fs.url.createObjectUrl(a);
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};

      goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function (a) {
        a = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(a) : a;
        return new goog.html.TrustedResourceUrl(goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, a);
      };

      goog.html.TrustedResourceUrl.stringifyParams_ = function (a, b, c) {
        if (null == c) {
          return b;
        }

        if ("string" === typeof c) {
          return c ? a + encodeURIComponent(c) : "";
        }

        for (var d in c) {
          var e = c[d];
          e = goog.isArray(e) ? e : [e];

          for (var f = 0; f < e.length; f++) {
            var g = e[f];
            null != g && (b || (b = a), b += (b.length > a.length ? "&" : "") + encodeURIComponent(d) + "=" + encodeURIComponent(String(g)));
          }
        }

        return b;
      };

      goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
      goog.string.internal = {};

      goog.string.internal.startsWith = function (a, b) {
        return 0 == a.lastIndexOf(b, 0);
      };

      goog.string.internal.endsWith = function (a, b) {
        var c = a.length - b.length;
        return 0 <= c && a.indexOf(b, c) == c;
      };

      goog.string.internal.caseInsensitiveStartsWith = function (a, b) {
        return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(0, b.length));
      };

      goog.string.internal.caseInsensitiveEndsWith = function (a, b) {
        return 0 == goog.string.internal.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
      };

      goog.string.internal.caseInsensitiveEquals = function (a, b) {
        return a.toLowerCase() == b.toLowerCase();
      };

      goog.string.internal.isEmptyOrWhitespace = function (a) {
        return /^[\s\xa0]*$/.test(a);
      };

      goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function (a) {
        return a.trim();
      } : function (a) {
        return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
      };

      goog.string.internal.caseInsensitiveCompare = function (a, b) {
        var c = String(a).toLowerCase(),
            d = String(b).toLowerCase();
        return c < d ? -1 : c == d ? 0 : 1;
      };

      goog.string.internal.newLineToBr = function (a, b) {
        return a.replace(/(\r\n|\r|\n)/g, b ? "<br />" : "<br>");
      };

      goog.string.internal.htmlEscape = function (a, b) {
        if (b) {
          a = a.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
        } else {
          if (!goog.string.internal.ALL_RE_.test(a)) {
            return a;
          }

          -1 != a.indexOf("&") && (a = a.replace(goog.string.internal.AMP_RE_, "&amp;"));
          -1 != a.indexOf("<") && (a = a.replace(goog.string.internal.LT_RE_, "&lt;"));
          -1 != a.indexOf(">") && (a = a.replace(goog.string.internal.GT_RE_, "&gt;"));
          -1 != a.indexOf('"') && (a = a.replace(goog.string.internal.QUOT_RE_, "&quot;"));
          -1 != a.indexOf("'") && (a = a.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;"));
          -1 != a.indexOf("\x00") && (a = a.replace(goog.string.internal.NULL_RE_, "&#0;"));
        }

        return a;
      };

      goog.string.internal.AMP_RE_ = /&/g;
      goog.string.internal.LT_RE_ = /</g;
      goog.string.internal.GT_RE_ = />/g;
      goog.string.internal.QUOT_RE_ = /"/g;
      goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
      goog.string.internal.NULL_RE_ = /\x00/g;
      goog.string.internal.ALL_RE_ = /[\x00&<>"']/;

      goog.string.internal.whitespaceEscape = function (a, b) {
        return goog.string.internal.newLineToBr(a.replace(/  /g, " &#160;"), b);
      };

      goog.string.internal.contains = function (a, b) {
        return -1 != a.indexOf(b);
      };

      goog.string.internal.caseInsensitiveContains = function (a, b) {
        return goog.string.internal.contains(a.toLowerCase(), b.toLowerCase());
      };

      goog.string.internal.compareVersions = function (a, b) {
        for (var c = 0, d = goog.string.internal.trim(String(a)).split("."), e = goog.string.internal.trim(String(b)).split("."), f = Math.max(d.length, e.length), g = 0; 0 == c && g < f; g++) {
          var h = d[g] || "",
              k = e[g] || "";

          do {
            h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];
            k = /(\d*)(\D*)(.*)/.exec(k) || ["", "", "", ""];

            if (0 == h[0].length && 0 == k[0].length) {
              break;
            }

            c = 0 == h[1].length ? 0 : parseInt(h[1], 10);
            var l = 0 == k[1].length ? 0 : parseInt(k[1], 10);
            c = goog.string.internal.compareElements_(c, l) || goog.string.internal.compareElements_(0 == h[2].length, 0 == k[2].length) || goog.string.internal.compareElements_(h[2], k[2]);
            h = h[3];
            k = k[3];
          } while (0 == c);
        }

        return c;
      };

      goog.string.internal.compareElements_ = function (a, b) {
        return a < b ? -1 : a > b ? 1 : 0;
      };

      goog.html.SafeUrl = function (a, b) {
        this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = a === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && b || "";
        this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      };

      goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
      goog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;

      goog.html.SafeUrl.prototype.getTypedStringValue = function () {
        return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
      };

      goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;

      goog.html.SafeUrl.prototype.getDirection = function () {
        return goog.i18n.bidi.Dir.LTR;
      };

      goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function () {
        return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
      });

      goog.html.SafeUrl.unwrap = function (a) {
        if (a instanceof goog.html.SafeUrl && a.constructor === goog.html.SafeUrl && a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
          return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;
        }

        goog.asserts.fail("expected object of type SafeUrl, got '" + a + "' of type " + goog.typeOf(a));
        return "type_error:SafeUrl";
      };

      goog.html.SafeUrl.fromConstant = function (a) {
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a));
      };

      goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;

      goog.html.SafeUrl.isSafeMimeType = function (a) {
        return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a);
      };

      goog.html.SafeUrl.fromBlob = function (a) {
        a = goog.html.SAFE_MIME_TYPE_PATTERN_.test(a.type) ? goog.fs.url.createObjectUrl(a) : goog.html.SafeUrl.INNOCUOUS_STRING;
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.DATA_URL_PATTERN_ = /^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;

      goog.html.SafeUrl.fromDataUrl = function (a) {
        a = a.replace(/(%0A|%0D)/g, "");
        var b = a.match(goog.html.DATA_URL_PATTERN_);
        b = b && goog.html.SAFE_MIME_TYPE_PATTERN_.test(b[1]);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b ? a : goog.html.SafeUrl.INNOCUOUS_STRING);
      };

      goog.html.SafeUrl.fromTelUrl = function (a) {
        goog.string.internal.caseInsensitiveStartsWith(a, "tel:") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SIP_URL_PATTERN_ = /^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;

      goog.html.SafeUrl.fromSipUrl = function (a) {
        goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a)) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.fromFacebookMessengerUrl = function (a) {
        goog.string.internal.caseInsensitiveStartsWith(a, "fb-messenger://share") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.fromWhatsAppUrl = function (a) {
        goog.string.internal.caseInsensitiveStartsWith(a, "whatsapp://send") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.fromSmsUrl = function (a) {
        goog.string.internal.caseInsensitiveStartsWith(a, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.isSmsUrlBodyValid_ = function (a) {
        var b = a.indexOf("#");
        0 < b && (a = a.substring(0, b));
        b = a.match(/[?&]body=/gi);

        if (!b) {
          return !0;
        }

        if (1 < b.length) {
          return !1;
        }

        a = a.match(/[?&]body=([^&]*)/)[1];

        if (!a) {
          return !0;
        }

        try {
          decodeURIComponent(a);
        } catch (c) {
          return !1;
        }

        return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a);
      };

      goog.html.SafeUrl.fromSshUrl = function (a) {
        goog.string.internal.caseInsensitiveStartsWith(a, "ssh://") || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.sanitizeChromeExtensionUrl = function (a, b) {
        return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, a, b);
      };

      goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function (a, b) {
        return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, a, b);
      };

      goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function (a, b) {
        return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, a, b);
      };

      goog.html.SafeUrl.sanitizeExtensionUrl_ = function (a, b, c) {
        (a = a.exec(b)) ? (a = a[1], -1 == (c instanceof goog.string.Const ? [goog.string.Const.unwrap(c)] : c.map(function (a) {
          return goog.string.Const.unwrap(a);
        })).indexOf(a) && (b = goog.html.SafeUrl.INNOCUOUS_STRING)) : b = goog.html.SafeUrl.INNOCUOUS_STRING;
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.SafeUrl.fromTrustedResourceUrl = function (a) {
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a));
      };

      goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
      goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;

      goog.html.SafeUrl.sanitize = function (a) {
        if (a instanceof goog.html.SafeUrl) {
          return a;
        }

        a = "object" == typeof a && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
        goog.html.SAFE_URL_PATTERN_.test(a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.sanitizeAssertUnchanged = function (a, b) {
        if (a instanceof goog.html.SafeUrl) {
          return a;
        }

        a = "object" == typeof a && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);

        if (b && /^data:/i.test(a)) {
          var c = goog.html.SafeUrl.fromDataUrl(a);

          if (c.getTypedStringValue() == a) {
            return c;
          }
        }

        goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a), "%s does not match the safe URL pattern", a) || (a = goog.html.SafeUrl.INNOCUOUS_STRING);
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};

      goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function (a) {
        return new goog.html.SafeUrl(goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_, a);
      };

      goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
      goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};

      goog.html.SafeStyle = function () {
        this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
        this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      };

      goog.html.SafeStyle.prototype.implementsGoogStringTypedString = !0;
      goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};

      goog.html.SafeStyle.fromConstant = function (a) {
        a = goog.string.Const.unwrap(a);

        if (0 === a.length) {
          return goog.html.SafeStyle.EMPTY;
        }

        goog.asserts.assert(goog.string.internal.endsWith(a, ";"), "Last character of style string is not ';': " + a);
        goog.asserts.assert(goog.string.internal.contains(a, ":"), "Style string must contain at least one ':', to specify a \"name: value\" pair: " + a);
        return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeStyle.prototype.getTypedStringValue = function () {
        return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
      };

      goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function () {
        return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
      });

      goog.html.SafeStyle.unwrap = function (a) {
        if (a instanceof goog.html.SafeStyle && a.constructor === goog.html.SafeStyle && a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
          return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;
        }

        goog.asserts.fail("expected object of type SafeStyle, got '" + a + "' of type " + goog.typeOf(a));
        return "type_error:SafeStyle";
      };

      goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function (a) {
        return new goog.html.SafeStyle().initSecurityPrivateDoNotAccessOrElse_(a);
      };

      goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a) {
        this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = a;
        return this;
      };

      goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
      goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";

      goog.html.SafeStyle.create = function (a) {
        var b = "",
            c;

        for (c in a) {
          if (!/^[-_a-zA-Z0-9]+$/.test(c)) {
            throw Error("Name allows only [-_a-zA-Z0-9], got: " + c);
          }

          var d = a[c];
          null != d && (d = goog.isArray(d) ? goog.array.map(d, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(d), b += c + ":" + d + ";");
        }

        return b ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : goog.html.SafeStyle.EMPTY;
      };

      goog.html.SafeStyle.sanitizePropertyValue_ = function (a) {
        if (a instanceof goog.html.SafeUrl) {
          return 'url("' + goog.html.SafeUrl.unwrap(a).replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
        }

        a = a instanceof goog.string.Const ? goog.string.Const.unwrap(a) : goog.html.SafeStyle.sanitizePropertyValueString_(String(a));

        if (/[{;}]/.test(a)) {
          throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [a]);
        }

        return a;
      };

      goog.html.SafeStyle.sanitizePropertyValueString_ = function (a) {
        var b = a.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");

        if (goog.html.SafeStyle.VALUE_RE_.test(b)) {
          if (goog.html.SafeStyle.COMMENT_RE_.test(a)) {
            return goog.asserts.fail("String value disallows comments, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
          }

          if (!goog.html.SafeStyle.hasBalancedQuotes_(a)) {
            return goog.asserts.fail("String value requires balanced quotes, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
          }

          if (!goog.html.SafeStyle.hasBalancedSquareBrackets_(a)) {
            return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
          }
        } else {
          return goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + a), goog.html.SafeStyle.INNOCUOUS_STRING;
        }

        return goog.html.SafeStyle.sanitizeUrl_(a);
      };

      goog.html.SafeStyle.hasBalancedQuotes_ = function (a) {
        for (var b = !0, c = !0, d = 0; d < a.length; d++) {
          var e = a.charAt(d);
          "'" == e && c ? b = !b : '"' == e && b && (c = !c);
        }

        return b && c;
      };

      goog.html.SafeStyle.hasBalancedSquareBrackets_ = function (a) {
        for (var b = !0, c = /^[-_a-zA-Z0-9]$/, d = 0; d < a.length; d++) {
          var e = a.charAt(d);

          if ("]" == e) {
            if (b) {
              return !1;
            }

            b = !0;
          } else {
            if ("[" == e) {
              if (!b) {
                return !1;
              }

              b = !1;
            } else {
              if (!b && !c.test(e)) {
                return !1;
              }
            }
          }
        }

        return b;
      };

      goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
      goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
      goog.html.SafeStyle.URL_RE_ = RegExp("\\b(url\\([ \t\n]*)('[ -&(-\\[\\]-~]*'|\"[ !#-\\[\\]-~]*\"|[!#-&*-\\[\\]-~]*)([ \t\n]*\\))", "g");
      goog.html.SafeStyle.ALLOWED_FUNCTIONS_ = "calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)?".split(" ");
      goog.html.SafeStyle.FUNCTIONS_RE_ = new RegExp("\\b(" + goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|") + ")\\([-+*/0-9a-z.%\\[\\], ]+\\)", "g");
      goog.html.SafeStyle.COMMENT_RE_ = /\/\*/;

      goog.html.SafeStyle.sanitizeUrl_ = function (a) {
        return a.replace(goog.html.SafeStyle.URL_RE_, function (a, c, d, e) {
          var b = "";
          d = d.replace(/^(['"])(.*)\1$/, function (a, c, d) {
            b = c;
            return d;
          });
          a = goog.html.SafeUrl.sanitize(d).getTypedStringValue();
          return c + b + a + b + e;
        });
      };

      goog.html.SafeStyle.concat = function (a) {
        var b = "",
            c = function (a) {
          goog.isArray(a) ? goog.array.forEach(a, c) : b += goog.html.SafeStyle.unwrap(a);
        };

        goog.array.forEach(arguments, c);
        return b ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b) : goog.html.SafeStyle.EMPTY;
      };

      goog.html.SafeStyleSheet = function () {
        this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
        this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
      };

      goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = !0;
      goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};

      goog.html.SafeStyleSheet.createRule = function (a, b) {
        if (goog.string.internal.contains(a, "<")) {
          throw Error("Selector does not allow '<', got: " + a);
        }

        var c = a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");

        if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c)) {
          throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + a);
        }

        if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(c)) {
          throw Error("() and [] in selector must be balanced, got: " + a);
        }

        b instanceof goog.html.SafeStyle || (b = goog.html.SafeStyle.create(b));
        c = a + "{" + goog.html.SafeStyle.unwrap(b).replace(/</g, "\\3C ") + "}";
        return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(c);
      };

      goog.html.SafeStyleSheet.hasBalancedBrackets_ = function (a) {
        for (var b = {
          "(": ")",
          "[": "]"
        }, c = [], d = 0; d < a.length; d++) {
          var e = a[d];

          if (b[e]) {
            c.push(b[e]);
          } else {
            if (goog.object.contains(b, e) && c.pop() != e) {
              return !1;
            }
          }
        }

        return 0 == c.length;
      };

      goog.html.SafeStyleSheet.concat = function (a) {
        var b = "",
            c = function (a) {
          goog.isArray(a) ? goog.array.forEach(a, c) : b += goog.html.SafeStyleSheet.unwrap(a);
        };

        goog.array.forEach(arguments, c);
        return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.SafeStyleSheet.fromConstant = function (a) {
        a = goog.string.Const.unwrap(a);

        if (0 === a.length) {
          return goog.html.SafeStyleSheet.EMPTY;
        }

        goog.asserts.assert(!goog.string.internal.contains(a, "<"), "Forbidden '<' character in style sheet string: " + a);
        return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a);
      };

      goog.html.SafeStyleSheet.prototype.getTypedStringValue = function () {
        return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
      };

      goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function () {
        return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
      });

      goog.html.SafeStyleSheet.unwrap = function (a) {
        if (a instanceof goog.html.SafeStyleSheet && a.constructor === goog.html.SafeStyleSheet && a.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
          return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
        }

        goog.asserts.fail("expected object of type SafeStyleSheet, got '" + a + "' of type " + goog.typeOf(a));
        return "type_error:SafeStyleSheet";
      };

      goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function (a) {
        return new goog.html.SafeStyleSheet().initSecurityPrivateDoNotAccessOrElse_(a);
      };

      goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a) {
        this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = a;
        return this;
      };

      goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
      goog.labs = {};
      goog.labs.userAgent = {};
      goog.labs.userAgent.util = {};

      goog.labs.userAgent.util.getNativeUserAgentString_ = function () {
        var a = goog.labs.userAgent.util.getNavigator_();
        return a && (a = a.userAgent) ? a : "";
      };

      goog.labs.userAgent.util.getNavigator_ = function () {
        return goog.global.navigator;
      };

      goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();

      goog.labs.userAgent.util.setUserAgent = function (a) {
        goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();
      };

      goog.labs.userAgent.util.getUserAgent = function () {
        return goog.labs.userAgent.util.userAgent_;
      };

      goog.labs.userAgent.util.matchUserAgent = function (a) {
        var b = goog.labs.userAgent.util.getUserAgent();
        return goog.string.internal.contains(b, a);
      };

      goog.labs.userAgent.util.matchUserAgentIgnoreCase = function (a) {
        var b = goog.labs.userAgent.util.getUserAgent();
        return goog.string.internal.caseInsensitiveContains(b, a);
      };

      goog.labs.userAgent.util.extractVersionTuples = function (a) {
        for (var b = RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?", "g"), c = [], d; d = b.exec(a);) {
          c.push([d[1], d[2], d[3] || void 0]);
        }

        return c;
      };

      goog.labs.userAgent.browser = {};

      goog.labs.userAgent.browser.matchOpera_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Opera");
      };

      goog.labs.userAgent.browser.matchIE_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
      };

      goog.labs.userAgent.browser.matchEdgeHtml_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Edge");
      };

      goog.labs.userAgent.browser.matchEdgeChromium_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Edg/");
      };

      goog.labs.userAgent.browser.matchOperaChromium_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("OPR");
      };

      goog.labs.userAgent.browser.matchFirefox_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
      };

      goog.labs.userAgent.browser.matchSafari_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
      };

      goog.labs.userAgent.browser.matchCoast_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Coast");
      };

      goog.labs.userAgent.browser.matchIosWebview_ = function () {
        return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
      };

      goog.labs.userAgent.browser.matchChrome_ = function () {
        return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
      };

      goog.labs.userAgent.browser.matchAndroidBrowser_ = function () {
        return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
      };

      goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
      goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
      goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;
      goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_;
      goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_;
      goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
      goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
      goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
      goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
      goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
      goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;

      goog.labs.userAgent.browser.isSilk = function () {
        return goog.labs.userAgent.util.matchUserAgent("Silk");
      };

      goog.labs.userAgent.browser.getVersion = function () {
        function a(a) {
          a = goog.array.find(a, d);
          return c[a] || "";
        }

        var b = goog.labs.userAgent.util.getUserAgent();

        if (goog.labs.userAgent.browser.isIE()) {
          return goog.labs.userAgent.browser.getIEVersion_(b);
        }

        b = goog.labs.userAgent.util.extractVersionTuples(b);
        var c = {};
        goog.array.forEach(b, function (a) {
          c[a[0]] = a[1];
        });
        var d = goog.partial(goog.object.containsKey, c);
        return goog.labs.userAgent.browser.isOpera() ? a(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? a(["Edge"]) : goog.labs.userAgent.browser.isEdgeChromium() ? a(["Edg"]) : goog.labs.userAgent.browser.isChrome() ? a(["Chrome", "CriOS", "HeadlessChrome"]) : (b = b[2]) && b[1] || "";
      };

      goog.labs.userAgent.browser.isVersionOrHigher = function (a) {
        return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), a);
      };

      goog.labs.userAgent.browser.getIEVersion_ = function (a) {
        var b = /rv: *([\d\.]*)/.exec(a);

        if (b && b[1]) {
          return b[1];
        }

        b = "";
        var c = /MSIE +([\d\.]+)/.exec(a);

        if (c && c[1]) {
          if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1]) {
            if (a && a[1]) {
              switch (a[1]) {
                case "4.0":
                  b = "8.0";
                  break;

                case "5.0":
                  b = "9.0";
                  break;

                case "6.0":
                  b = "10.0";
                  break;

                case "7.0":
                  b = "11.0";
              }
            } else {
              b = "7.0";
            }
          } else {
            b = c[1];
          }
        }

        return b;
      };

      goog.html.SafeHtml = function () {
        this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
        this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
        this.dir_ = null;
      };

      goog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG;
      goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = !0;
      goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = !0;

      goog.html.SafeHtml.prototype.getDirection = function () {
        return this.dir_;
      };

      goog.html.SafeHtml.prototype.implementsGoogStringTypedString = !0;

      goog.html.SafeHtml.prototype.getTypedStringValue = function () {
        return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
      };

      goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function () {
        return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
      });

      goog.html.SafeHtml.unwrap = function (a) {
        return goog.html.SafeHtml.unwrapTrustedHTML(a).toString();
      };

      goog.html.SafeHtml.unwrapTrustedHTML = function (a) {
        if (a instanceof goog.html.SafeHtml && a.constructor === goog.html.SafeHtml && a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
          return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
        }

        goog.asserts.fail("expected object of type SafeHtml, got '" + a + "' of type " + goog.typeOf(a));
        return "type_error:SafeHtml";
      };

      goog.html.SafeHtml.htmlEscape = function (a) {
        if (a instanceof goog.html.SafeHtml) {
          return a;
        }

        var b = "object" == typeof a,
            c = null;
        b && a.implementsGoogI18nBidiDirectionalString && (c = a.getDirection());
        a = b && a.implementsGoogStringTypedString ? a.getTypedStringValue() : String(a);
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a), c);
      };

      goog.html.SafeHtml.htmlEscapePreservingNewlines = function (a) {
        if (a instanceof goog.html.SafeHtml) {
          return a;
        }

        a = goog.html.SafeHtml.htmlEscape(a);
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a)), a.getDirection());
      };

      goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function (a) {
        if (a instanceof goog.html.SafeHtml) {
          return a;
        }

        a = goog.html.SafeHtml.htmlEscape(a);
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a)), a.getDirection());
      };

      goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
      goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
      goog.html.SafeHtml.URL_ATTRIBUTES_ = {
        action: !0,
        cite: !0,
        data: !0,
        formaction: !0,
        href: !0,
        manifest: !0,
        poster: !0,
        src: !0
      };
      goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = {
        APPLET: !0,
        BASE: !0,
        EMBED: !0,
        IFRAME: !0,
        LINK: !0,
        MATH: !0,
        META: !0,
        OBJECT: !0,
        SCRIPT: !0,
        STYLE: !0,
        SVG: !0,
        TEMPLATE: !0
      };

      goog.html.SafeHtml.create = function (a, b, c) {
        goog.html.SafeHtml.verifyTagName(String(a));
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a), b, c);
      };

      goog.html.SafeHtml.verifyTagName = function (a) {
        if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a)) {
          throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name <" + a + ">." : "");
        }

        if (a.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
          throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name <" + a + "> is not allowed for SafeHtml." : "");
        }
      };

      goog.html.SafeHtml.createIframe = function (a, b, c, d) {
        a && goog.html.TrustedResourceUrl.unwrap(a);
        var e = {};
        e.src = a || null;
        e.srcdoc = b && goog.html.SafeHtml.unwrap(b);
        a = goog.html.SafeHtml.combineAttributes(e, {
          sandbox: ""
        }, c);
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d);
      };

      goog.html.SafeHtml.createSandboxIframe = function (a, b, c, d) {
        if (!goog.html.SafeHtml.canUseSandboxIframe()) {
          throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
        }

        var e = {};
        e.src = a ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)) : null;
        e.srcdoc = b || null;
        e.sandbox = "";
        a = goog.html.SafeHtml.combineAttributes(e, {}, c);
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", a, d);
      };

      goog.html.SafeHtml.canUseSandboxIframe = function () {
        return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
      };

      goog.html.SafeHtml.createScriptSrc = function (a, b) {
        goog.html.TrustedResourceUrl.unwrap(a);
        var c = goog.html.SafeHtml.combineAttributes({
          src: a
        }, {}, b);
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", c);
      };

      goog.html.SafeHtml.createScript = function (a, b) {
        for (var c in b) {
          var d = c.toLowerCase();

          if ("language" == d || "src" == d || "text" == d || "type" == d) {
            throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + d + '" attribute' : "");
          }
        }

        c = "";
        a = goog.array.concat(a);

        for (d = 0; d < a.length; d++) {
          c += goog.html.SafeScript.unwrap(a[d]);
        }

        c = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c, goog.i18n.bidi.Dir.NEUTRAL);
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", b, c);
      };

      goog.html.SafeHtml.createStyle = function (a, b) {
        var c = goog.html.SafeHtml.combineAttributes({
          type: "text/css"
        }, {}, b),
            d = "";
        a = goog.array.concat(a);

        for (var e = 0; e < a.length; e++) {
          d += goog.html.SafeStyleSheet.unwrap(a[e]);
        }

        d = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d, goog.i18n.bidi.Dir.NEUTRAL);
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", c, d);
      };

      goog.html.SafeHtml.createMetaRefresh = function (a, b) {
        var c = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));
        (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.internal.contains(c, ";") && (c = "'" + c.replace(/'/g, "%27") + "'");
        return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", {
          "http-equiv": "refresh",
          content: (b || 0) + "; url=" + c
        });
      };

      goog.html.SafeHtml.getAttrNameAndValue_ = function (a, b, c) {
        if (c instanceof goog.string.Const) {
          c = goog.string.Const.unwrap(c);
        } else {
          if ("style" == b.toLowerCase()) {
            if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
              c = goog.html.SafeHtml.getStyleValue_(c);
            } else {
              throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
            }
          } else {
            if (/^on/i.test(b)) {
              throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + b + '" requires goog.string.Const value, "' + c + '" given.' : "");
            }

            if (b.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
              if (c instanceof goog.html.TrustedResourceUrl) {
                c = goog.html.TrustedResourceUrl.unwrap(c);
              } else {
                if (c instanceof goog.html.SafeUrl) {
                  c = goog.html.SafeUrl.unwrap(c);
                } else {
                  if ("string" === typeof c) {
                    c = goog.html.SafeUrl.sanitize(c).getTypedStringValue();
                  } else {
                    throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + b + '" on tag "' + a + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + c + '" given.' : "");
                  }
                }
              }
            }
          }
        }

        c.implementsGoogStringTypedString && (c = c.getTypedStringValue());
        goog.asserts.assert("string" === typeof c || "number" === typeof c, "String or number value expected, got " + typeof c + " with value: " + c);
        return b + '="' + goog.string.internal.htmlEscape(String(c)) + '"';
      };

      goog.html.SafeHtml.getStyleValue_ = function (a) {
        if (!goog.isObject(a)) {
          throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof a + " given: " + a : "");
        }

        a instanceof goog.html.SafeStyle || (a = goog.html.SafeStyle.create(a));
        return goog.html.SafeStyle.unwrap(a);
      };

      goog.html.SafeHtml.createWithDir = function (a, b, c, d) {
        b = goog.html.SafeHtml.create(b, c, d);
        b.dir_ = a;
        return b;
      };

      goog.html.SafeHtml.join = function (a, b) {
        var c = goog.html.SafeHtml.htmlEscape(a),
            d = c.getDirection(),
            e = [],
            f = function (a) {
          goog.isArray(a) ? goog.array.forEach(a, f) : (a = goog.html.SafeHtml.htmlEscape(a), e.push(goog.html.SafeHtml.unwrap(a)), a = a.getDirection(), d == goog.i18n.bidi.Dir.NEUTRAL ? d = a : a != goog.i18n.bidi.Dir.NEUTRAL && d != a && (d = null));
        };

        goog.array.forEach(b, f);
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e.join(goog.html.SafeHtml.unwrap(c)), d);
      };

      goog.html.SafeHtml.concat = function (a) {
        return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
      };

      goog.html.SafeHtml.concatWithDir = function (a, b) {
        var c = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
        c.dir_ = a;
        return c;
      };

      goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};

      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function (a, b) {
        return new goog.html.SafeHtml().initSecurityPrivateDoNotAccessOrElse_(a, b);
      };

      goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function (a, b) {
        this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(a) : a;
        this.dir_ = b;
        return this;
      };

      goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function (a, b, c) {
        var d = null;
        var e = "<" + a + goog.html.SafeHtml.stringifyAttributes(a, b);
        null == c ? c = [] : goog.isArray(c) || (c = [c]);
        goog.dom.tags.isVoidTag(a.toLowerCase()) ? (goog.asserts.assert(!c.length, "Void tag <" + a + "> does not allow content."), e += ">") : (d = goog.html.SafeHtml.concat(c), e += ">" + goog.html.SafeHtml.unwrap(d) + "</" + a + ">", d = d.getDirection());
        (a = b && b.dir) && (d = /^(ltr|rtl|auto)$/i.test(a) ? goog.i18n.bidi.Dir.NEUTRAL : null);
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e, d);
      };

      goog.html.SafeHtml.stringifyAttributes = function (a, b) {
        var c = "";

        if (b) {
          for (var d in b) {
            if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d)) {
              throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + d + '".' : "");
            }

            var e = b[d];
            null != e && (c += " " + goog.html.SafeHtml.getAttrNameAndValue_(a, d, e));
          }
        }

        return c;
      };

      goog.html.SafeHtml.combineAttributes = function (a, b, c) {
        var d = {},
            e;

        for (e in a) {
          goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = a[e];
        }

        for (e in b) {
          goog.asserts.assert(e.toLowerCase() == e, "Must be lower case"), d[e] = b[e];
        }

        if (c) {
          for (e in c) {
            var f = e.toLowerCase();

            if (f in a) {
              throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + f + '" attribute, got "' + e + '" with value "' + c[e] + '"' : "");
            }

            f in b && delete d[f];
            d[e] = c[e];
          }
        }

        return d;
      };

      goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL);
      goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
      goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL);
      goog.html.uncheckedconversions = {};

      goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function (a, b, c) {
        goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
        goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
        return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b, c || null);
      };

      goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function (a, b) {
        goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
        goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
        return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function (a, b) {
        goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
        goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
        return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function (a, b) {
        goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
        goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
        return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function (a, b) {
        goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
        goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
        return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function (a, b) {
        goog.asserts.assertString(goog.string.Const.unwrap(a), "must provide justification");
        goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)), "must provide non-empty justification");
        return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b);
      };

      goog.dom.safe = {};
      goog.dom.safe.InsertAdjacentHtmlPosition = {
        AFTERBEGIN: "afterbegin",
        AFTEREND: "afterend",
        BEFOREBEGIN: "beforebegin",
        BEFOREEND: "beforeend"
      };

      goog.dom.safe.insertAdjacentHtml = function (a, b, c) {
        a.insertAdjacentHTML(b, goog.html.SafeHtml.unwrapTrustedHTML(c));
      };

      goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {
        MATH: !0,
        SCRIPT: !0,
        STYLE: !0,
        SVG: !0,
        TEMPLATE: !0
      };
      goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function () {
        if (goog.DEBUG && "undefined" === typeof document) {
          return !1;
        }

        var a = document.createElement("div"),
            b = document.createElement("div");
        b.appendChild(document.createElement("div"));
        a.appendChild(b);

        if (goog.DEBUG && !a.firstChild) {
          return !1;
        }

        b = a.firstChild.firstChild;
        a.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);
        return !b.parentElement;
      });

      goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function (a, b) {
        if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {
          for (; a.lastChild;) {
            a.removeChild(a.lastChild);
          }
        }

        a.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(b);
      };

      goog.dom.safe.setInnerHtml = function (a, b) {
        if (goog.asserts.ENABLE_ASSERTS) {
          var c = a.tagName.toUpperCase();

          if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c]) {
            throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + a.tagName + ".");
          }
        }

        goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a, b);
      };

      goog.dom.safe.setOuterHtml = function (a, b) {
        a.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(b);
      };

      goog.dom.safe.setFormElementAction = function (a, b) {
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        goog.dom.asserts.assertIsHTMLFormElement(a).action = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setButtonFormAction = function (a, b) {
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        goog.dom.asserts.assertIsHTMLButtonElement(a).formAction = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setInputFormAction = function (a, b) {
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        goog.dom.asserts.assertIsHTMLInputElement(a).formAction = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setStyle = function (a, b) {
        a.style.cssText = goog.html.SafeStyle.unwrap(b);
      };

      goog.dom.safe.documentWrite = function (a, b) {
        a.write(goog.html.SafeHtml.unwrapTrustedHTML(b));
      };

      goog.dom.safe.setAnchorHref = function (a, b) {
        goog.dom.asserts.assertIsHTMLAnchorElement(a);
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        a.href = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setImageSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLImageElement(a);

        if (b instanceof goog.html.SafeUrl) {
          var c = b;
        } else {
          c = /^data:image\//i.test(b), c = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
        }

        a.src = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setAudioSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLAudioElement(a);

        if (b instanceof goog.html.SafeUrl) {
          var c = b;
        } else {
          c = /^data:audio\//i.test(b), c = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
        }

        a.src = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setVideoSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLVideoElement(a);

        if (b instanceof goog.html.SafeUrl) {
          var c = b;
        } else {
          c = /^data:video\//i.test(b), c = goog.html.SafeUrl.sanitizeAssertUnchanged(b, c);
        }

        a.src = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.setEmbedSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLEmbedElement(a);
        a.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);
      };

      goog.dom.safe.setFrameSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLFrameElement(a);
        a.src = goog.html.TrustedResourceUrl.unwrap(b);
      };

      goog.dom.safe.setIframeSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLIFrameElement(a);
        a.src = goog.html.TrustedResourceUrl.unwrap(b);
      };

      goog.dom.safe.setIframeSrcdoc = function (a, b) {
        goog.dom.asserts.assertIsHTMLIFrameElement(a);
        a.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(b);
      };

      goog.dom.safe.setLinkHrefAndRel = function (a, b, c) {
        goog.dom.asserts.assertIsHTMLLinkElement(a);
        a.rel = c;
        goog.string.internal.caseInsensitiveContains(c, "stylesheet") ? (goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), a.href = goog.html.TrustedResourceUrl.unwrap(b)) : a.href = b instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(b) : b instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(b) : goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b));
      };

      goog.dom.safe.setObjectData = function (a, b) {
        goog.dom.asserts.assertIsHTMLObjectElement(a);
        a.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);
      };

      goog.dom.safe.setScriptSrc = function (a, b) {
        goog.dom.asserts.assertIsHTMLScriptElement(a);
        a.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);
        var c = goog.getScriptNonce();
        c && a.setAttribute("nonce", c);
      };

      goog.dom.safe.setScriptContent = function (a, b) {
        goog.dom.asserts.assertIsHTMLScriptElement(a);
        a.text = goog.html.SafeScript.unwrapTrustedScript(b);
        var c = goog.getScriptNonce();
        c && a.setAttribute("nonce", c);
      };

      goog.dom.safe.setLocationHref = function (a, b) {
        goog.dom.asserts.assertIsLocation(a);
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        a.href = goog.html.SafeUrl.unwrap(c);
      };

      goog.dom.safe.assignLocation = function (a, b) {
        goog.dom.asserts.assertIsLocation(a);
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        a.assign(goog.html.SafeUrl.unwrap(c));
      };

      goog.dom.safe.replaceLocation = function (a, b) {
        goog.dom.asserts.assertIsLocation(a);
        var c = b instanceof goog.html.SafeUrl ? b : goog.html.SafeUrl.sanitizeAssertUnchanged(b);
        a.replace(goog.html.SafeUrl.unwrap(c));
      };

      goog.dom.safe.openInWindow = function (a, b, c, d, e) {
        a = a instanceof goog.html.SafeUrl ? a : goog.html.SafeUrl.sanitizeAssertUnchanged(a);
        return (b || goog.global).open(goog.html.SafeUrl.unwrap(a), c ? goog.string.Const.unwrap(c) : "", d, e);
      };

      goog.dom.safe.parseFromStringHtml = function (a, b) {
        return goog.dom.safe.parseFromString(a, b, "text/html");
      };

      goog.dom.safe.parseFromString = function (a, b, c) {
        return a.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b), c);
      };

      goog.dom.safe.createImageFromBlob = function (a) {
        if (!/^image\/.*/g.test(a.type)) {
          throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
        }

        var b = goog.global.URL.createObjectURL(a);
        a = new goog.global.Image();

        a.onload = function () {
          goog.global.URL.revokeObjectURL(b);
        };

        goog.dom.safe.setImageSrc(a, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), b));
        return a;
      };

      goog.string.DETECT_DOUBLE_ESCAPING = !1;
      goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
      goog.string.Unicode = {
        NBSP: "\u00a0"
      };
      goog.string.startsWith = goog.string.internal.startsWith;
      goog.string.endsWith = goog.string.internal.endsWith;
      goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
      goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
      goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;

      goog.string.subs = function (a, b) {
        for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {
          d += c.shift() + e.shift();
        }

        return d + c.join("%s");
      };

      goog.string.collapseWhitespace = function (a) {
        return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
      };

      goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;

      goog.string.isEmptyString = function (a) {
        return 0 == a.length;
      };

      goog.string.isEmpty = goog.string.isEmptyOrWhitespace;

      goog.string.isEmptyOrWhitespaceSafe = function (a) {
        return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
      };

      goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;

      goog.string.isBreakingWhitespace = function (a) {
        return !/[^\t\n\r ]/.test(a);
      };

      goog.string.isAlpha = function (a) {
        return !/[^a-zA-Z]/.test(a);
      };

      goog.string.isNumeric = function (a) {
        return !/[^0-9]/.test(a);
      };

      goog.string.isAlphaNumeric = function (a) {
        return !/[^a-zA-Z0-9]/.test(a);
      };

      goog.string.isSpace = function (a) {
        return " " == a;
      };

      goog.string.isUnicodeChar = function (a) {
        return 1 == a.length && " " <= a && "~" >= a || "\u0080" <= a && "\ufffd" >= a;
      };

      goog.string.stripNewlines = function (a) {
        return a.replace(/(\r\n|\r|\n)+/g, " ");
      };

      goog.string.canonicalizeNewlines = function (a) {
        return a.replace(/(\r\n|\r|\n)/g, "\n");
      };

      goog.string.normalizeWhitespace = function (a) {
        return a.replace(/\xa0|\s/g, " ");
      };

      goog.string.normalizeSpaces = function (a) {
        return a.replace(/\xa0|[ \t]+/g, " ");
      };

      goog.string.collapseBreakingSpaces = function (a) {
        return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
      };

      goog.string.trim = goog.string.internal.trim;

      goog.string.trimLeft = function (a) {
        return a.replace(/^[\s\xa0]+/, "");
      };

      goog.string.trimRight = function (a) {
        return a.replace(/[\s\xa0]+$/, "");
      };

      goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;

      goog.string.numberAwareCompare_ = function (a, b, c) {
        if (a == b) {
          return 0;
        }

        if (!a) {
          return -1;
        }

        if (!b) {
          return 1;
        }

        for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {
          c = d[g];
          var h = e[g];

          if (c != h) {
            return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
          }
        }

        return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
      };

      goog.string.intAwareCompare = function (a, b) {
        return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
      };

      goog.string.floatAwareCompare = function (a, b) {
        return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
      };

      goog.string.numerateCompare = goog.string.floatAwareCompare;

      goog.string.urlEncode = function (a) {
        return encodeURIComponent(String(a));
      };

      goog.string.urlDecode = function (a) {
        return decodeURIComponent(a.replace(/\+/g, " "));
      };

      goog.string.newLineToBr = goog.string.internal.newLineToBr;

      goog.string.htmlEscape = function (a, b) {
        a = goog.string.internal.htmlEscape(a, b);
        goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "&#101;"));
        return a;
      };

      goog.string.E_RE_ = /e/g;

      goog.string.unescapeEntities = function (a) {
        return goog.string.contains(a, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;
      };

      goog.string.unescapeEntitiesWithDocument = function (a, b) {
        return goog.string.contains(a, "&") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;
      };

      goog.string.unescapeEntitiesUsingDom_ = function (a, b) {
        var c = {
          "&amp;": "&",
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"'
        };
        var d = b ? b.createElement("div") : goog.global.document.createElement("div");
        return a.replace(goog.string.HTML_ENTITY_PATTERN_, function (a, b) {
          var e = c[a];

          if (e) {
            return e;
          }

          if ("#" == b.charAt(0)) {
            var f = Number("0" + b.substr(1));
            isNaN(f) || (e = String.fromCharCode(f));
          }

          e || (goog.dom.safe.setInnerHtml(d, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), a + " ")), e = d.firstChild.nodeValue.slice(0, -1));
          return c[a] = e;
        });
      };

      goog.string.unescapePureXmlEntities_ = function (a) {
        return a.replace(/&([^;]+);/g, function (a, c) {
          switch (c) {
            case "amp":
              return "&";

            case "lt":
              return "<";

            case "gt":
              return ">";

            case "quot":
              return '"';

            default:
              if ("#" == c.charAt(0)) {
                var b = Number("0" + c.substr(1));

                if (!isNaN(b)) {
                  return String.fromCharCode(b);
                }
              }

              return a;
          }
        });
      };

      goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;

      goog.string.whitespaceEscape = function (a, b) {
        return goog.string.newLineToBr(a.replace(/  /g, " &#160;"), b);
      };

      goog.string.preserveSpaces = function (a) {
        return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
      };

      goog.string.stripQuotes = function (a, b) {
        for (var c = b.length, d = 0; d < c; d++) {
          var e = 1 == c ? b : b.charAt(d);

          if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {
            return a.substring(1, a.length - 1);
          }
        }

        return a;
      };

      goog.string.truncate = function (a, b, c) {
        c && (a = goog.string.unescapeEntities(a));
        a.length > b && (a = a.substring(0, b - 3) + "...");
        c && (a = goog.string.htmlEscape(a));
        return a;
      };

      goog.string.truncateMiddle = function (a, b, c, d) {
        c && (a = goog.string.unescapeEntities(a));

        if (d && a.length > b) {
          d > b && (d = b);
          var e = a.length - d;
          a = a.substring(0, b - d) + "..." + a.substring(e);
        } else {
          a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e));
        }

        c && (a = goog.string.htmlEscape(a));
        return a;
      };

      goog.string.specialEscapeChars_ = {
        "\x00": "\\0",
        "\b": "\\b",
        "\f": "\\f",
        "\n": "\\n",
        "\r": "\\r",
        "\t": "\\t",
        "\x0B": "\\x0B",
        '"': '\\"',
        "\\": "\\\\",
        "<": "\\u003C"
      };
      goog.string.jsEscapeCache_ = {
        "'": "\\'"
      };

      goog.string.quote = function (a) {
        a = String(a);

        for (var b = ['"'], c = 0; c < a.length; c++) {
          var d = a.charAt(c),
              e = d.charCodeAt(0);
          b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
        }

        b.push('"');
        return b.join("");
      };

      goog.string.escapeString = function (a) {
        for (var b = [], c = 0; c < a.length; c++) {
          b[c] = goog.string.escapeChar(a.charAt(c));
        }

        return b.join("");
      };

      goog.string.escapeChar = function (a) {
        if (a in goog.string.jsEscapeCache_) {
          return goog.string.jsEscapeCache_[a];
        }

        if (a in goog.string.specialEscapeChars_) {
          return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];
        }

        var b = a.charCodeAt(0);

        if (31 < b && 127 > b) {
          var c = a;
        } else {
          if (256 > b) {
            if (c = "\\x", 16 > b || 256 < b) {
              c += "0";
            }
          } else {
            c = "\\u", 4096 > b && (c += "0");
          }

          c += b.toString(16).toUpperCase();
        }

        return goog.string.jsEscapeCache_[a] = c;
      };

      goog.string.contains = goog.string.internal.contains;
      goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;

      goog.string.countOf = function (a, b) {
        return a && b ? a.split(b).length - 1 : 0;
      };

      goog.string.removeAt = function (a, b, c) {
        var d = a;
        0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
        return d;
      };

      goog.string.remove = function (a, b) {
        return a.replace(b, "");
      };

      goog.string.removeAll = function (a, b) {
        var c = new RegExp(goog.string.regExpEscape(b), "g");
        return a.replace(c, "");
      };

      goog.string.replaceAll = function (a, b, c) {
        b = new RegExp(goog.string.regExpEscape(b), "g");
        return a.replace(b, c.replace(/\$/g, "$$$$"));
      };

      goog.string.regExpEscape = function (a) {
        return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
      };

      goog.string.repeat = String.prototype.repeat ? function (a, b) {
        return a.repeat(b);
      } : function (a, b) {
        return Array(b + 1).join(a);
      };

      goog.string.padNumber = function (a, b, c) {
        a = void 0 !== c ? a.toFixed(c) : String(a);
        c = a.indexOf(".");
        -1 == c && (c = a.length);
        return goog.string.repeat("0", Math.max(0, b - c)) + a;
      };

      goog.string.makeSafe = function (a) {
        return null == a ? "" : String(a);
      };

      goog.string.buildString = function (a) {
        return Array.prototype.join.call(arguments, "");
      };

      goog.string.getRandomString = function () {
        return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
      };

      goog.string.compareVersions = goog.string.internal.compareVersions;

      goog.string.hashCode = function (a) {
        for (var b = 0, c = 0; c < a.length; ++c) {
          b = 31 * b + a.charCodeAt(c) >>> 0;
        }

        return b;
      };

      goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;

      goog.string.createUniqueString = function () {
        return "goog_" + goog.string.uniqueStringCounter_++;
      };

      goog.string.toNumber = function (a) {
        var b = Number(a);
        return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
      };

      goog.string.isLowerCamelCase = function (a) {
        return /^[a-z]+([A-Z][a-z]*)*$/.test(a);
      };

      goog.string.isUpperCamelCase = function (a) {
        return /^([A-Z][a-z]*)+$/.test(a);
      };

      goog.string.toCamelCase = function (a) {
        return String(a).replace(/\-([a-z])/g, function (a, c) {
          return c.toUpperCase();
        });
      };

      goog.string.toSelectorCase = function (a) {
        return String(a).replace(/([A-Z])/g, "-$1").toLowerCase();
      };

      goog.string.toTitleCase = function (a, b) {
        var c = "string" === typeof b ? goog.string.regExpEscape(b) : "\\s";
        return a.replace(new RegExp("(^" + (c ? "|[" + c + "]+" : "") + ")([a-z])", "g"), function (a, b, c) {
          return b + c.toUpperCase();
        });
      };

      goog.string.capitalize = function (a) {
        return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();
      };

      goog.string.parseInt = function (a) {
        isFinite(a) && (a = String(a));
        return "string" === typeof a ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;
      };

      goog.string.splitLimit = function (a, b, c) {
        a = a.split(b);

        for (var d = []; 0 < c && a.length;) {
          d.push(a.shift()), c--;
        }

        a.length && d.push(a.join(b));
        return d;
      };

      goog.string.lastComponent = function (a, b) {
        if (b) {
          "string" == typeof b && (b = [b]);
        } else {
          return a;
        }

        for (var c = -1, d = 0; d < b.length; d++) {
          if ("" != b[d]) {
            var e = a.lastIndexOf(b[d]);
            e > c && (c = e);
          }
        }

        return -1 == c ? a : a.slice(c + 1);
      };

      goog.string.editDistance = function (a, b) {
        var c = [],
            d = [];

        if (a == b) {
          return 0;
        }

        if (!a.length || !b.length) {
          return Math.max(a.length, b.length);
        }

        for (var e = 0; e < b.length + 1; e++) {
          c[e] = e;
        }

        for (e = 0; e < a.length; e++) {
          d[0] = e + 1;

          for (var f = 0; f < b.length; f++) {
            d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));
          }

          for (f = 0; f < c.length; f++) {
            c[f] = d[f];
          }
        }

        return d[b.length];
      };

      goog.proto2 = {};

      goog.proto2.Descriptor = function (a, b, c) {
        this.messageType_ = a;
        this.name_ = b.name || null;
        this.fullName_ = b.fullName || null;
        this.containingType_ = b.containingType;
        this.fields_ = {};

        for (a = 0; a < c.length; a++) {
          b = c[a], this.fields_[b.getTag()] = b;
        }
      };

      goog.proto2.Descriptor.prototype.getName = function () {
        return this.name_;
      };

      goog.proto2.Descriptor.prototype.getFullName = function () {
        return this.fullName_;
      };

      goog.proto2.Descriptor.prototype.getContainingType = function () {
        return this.containingType_ ? this.containingType_.getDescriptor() : null;
      };

      goog.proto2.Descriptor.prototype.getFields = function () {
        var a = goog.object.getValues(this.fields_);
        goog.array.sort(a, function (a, c) {
          return a.getTag() - c.getTag();
        });
        return a;
      };

      goog.proto2.Descriptor.prototype.getFieldsMap = function () {
        return this.fields_;
      };

      goog.proto2.Descriptor.prototype.findFieldByName = function (a) {
        return goog.object.findValue(this.fields_, function (b, c, d) {
          return b.getName() == a;
        }) || null;
      };

      goog.proto2.Descriptor.prototype.findFieldByTag = function (a) {
        goog.asserts.assert(goog.string.isNumeric(a));
        return this.fields_[parseInt(a, 10)] || null;
      };

      goog.proto2.Descriptor.prototype.createMessageInstance = function () {
        return new this.messageType_();
      };

      goog.proto2.FieldDescriptor = function (a, b, c) {
        this.parent_ = a;
        goog.asserts.assert(goog.string.isNumeric(b));
        this.tag_ = b;
        this.name_ = c.name;
        this.isPacked_ = !!c.packed;
        this.isRepeated_ = !!c.repeated;
        this.isRequired_ = !!c.required;
        this.fieldType_ = c.fieldType;
        this.nativeType_ = c.type;
        this.deserializationConversionPermitted_ = !1;

        switch (this.fieldType_) {
          case goog.proto2.FieldDescriptor.FieldType.INT64:
          case goog.proto2.FieldDescriptor.FieldType.UINT64:
          case goog.proto2.FieldDescriptor.FieldType.FIXED64:
          case goog.proto2.FieldDescriptor.FieldType.SFIXED64:
          case goog.proto2.FieldDescriptor.FieldType.SINT64:
          case goog.proto2.FieldDescriptor.FieldType.FLOAT:
          case goog.proto2.FieldDescriptor.FieldType.DOUBLE:
            this.deserializationConversionPermitted_ = !0;
        }

        this.defaultValue_ = c.defaultValue;
      };

      goog.proto2.FieldDescriptor.FieldType = {
        DOUBLE: 1,
        FLOAT: 2,
        INT64: 3,
        UINT64: 4,
        INT32: 5,
        FIXED64: 6,
        FIXED32: 7,
        BOOL: 8,
        STRING: 9,
        GROUP: 10,
        MESSAGE: 11,
        BYTES: 12,
        UINT32: 13,
        ENUM: 14,
        SFIXED32: 15,
        SFIXED64: 16,
        SINT32: 17,
        SINT64: 18
      };

      goog.proto2.FieldDescriptor.prototype.getTag = function () {
        return this.tag_;
      };

      goog.proto2.FieldDescriptor.prototype.getContainingType = function () {
        return this.parent_.prototype.getDescriptor();
      };

      goog.proto2.FieldDescriptor.prototype.getName = function () {
        return this.name_;
      };

      goog.proto2.FieldDescriptor.prototype.getDefaultValue = function () {
        if (void 0 === this.defaultValue_) {
          var a = this.nativeType_;

          if (a === Boolean) {
            this.defaultValue_ = !1;
          } else {
            if (a === Number) {
              this.defaultValue_ = 0;
            } else {
              if (a === String) {
                this.defaultValue_ = this.deserializationConversionPermitted_ ? "0" : "";
              } else {
                return new a();
              }
            }
          }
        }

        return this.defaultValue_;
      };

      goog.proto2.FieldDescriptor.prototype.getFieldType = function () {
        return this.fieldType_;
      };

      goog.proto2.FieldDescriptor.prototype.getNativeType = function () {
        return this.nativeType_;
      };

      goog.proto2.FieldDescriptor.prototype.deserializationConversionPermitted = function () {
        return this.deserializationConversionPermitted_;
      };

      goog.proto2.FieldDescriptor.prototype.getFieldMessageType = function () {
        return this.nativeType_.prototype.getDescriptor();
      };

      goog.proto2.FieldDescriptor.prototype.isCompositeType = function () {
        return this.fieldType_ == goog.proto2.FieldDescriptor.FieldType.MESSAGE || this.fieldType_ == goog.proto2.FieldDescriptor.FieldType.GROUP;
      };

      goog.proto2.FieldDescriptor.prototype.isPacked = function () {
        return this.isPacked_;
      };

      goog.proto2.FieldDescriptor.prototype.isRepeated = function () {
        return this.isRepeated_;
      };

      goog.proto2.FieldDescriptor.prototype.isRequired = function () {
        return this.isRequired_;
      };

      goog.proto2.FieldDescriptor.prototype.isOptional = function () {
        return !this.isRepeated_ && !this.isRequired_;
      };

      goog.proto2.Message = function () {
        this.values_ = {};
        this.fields_ = this.getDescriptor().getFieldsMap();
        this.deserializedFields_ = this.lazyDeserializer_ = null;
      };

      goog.proto2.Message.FieldType = {
        DOUBLE: 1,
        FLOAT: 2,
        INT64: 3,
        UINT64: 4,
        INT32: 5,
        FIXED64: 6,
        FIXED32: 7,
        BOOL: 8,
        STRING: 9,
        GROUP: 10,
        MESSAGE: 11,
        BYTES: 12,
        UINT32: 13,
        ENUM: 14,
        SFIXED32: 15,
        SFIXED64: 16,
        SINT32: 17,
        SINT64: 18
      };

      goog.proto2.Message.prototype.initializeForLazyDeserializer = function (a, b) {
        this.lazyDeserializer_ = a;
        this.values_ = b;
        this.deserializedFields_ = {};
      };

      goog.proto2.Message.prototype.setUnknown = function (a, b) {
        goog.asserts.assert(!this.fields_[a], "Field is not unknown in this message");
        goog.asserts.assert(1 <= a, "Tag " + a + ' has value "' + b + '" in descriptor ' + this.getDescriptor().getName());
        goog.asserts.assert(null !== b, "Value cannot be null");
        this.values_[a] = b;
        this.deserializedFields_ && delete this.deserializedFields_[a];
      };

      goog.proto2.Message.prototype.forEachUnknown = function (a, b) {
        var c = b || this,
            d;

        for (d in this.values_) {
          var e = Number(d);
          this.fields_[e] || a.call(c, e, this.values_[d]);
        }
      };

      goog.proto2.Message.prototype.getDescriptor = goog.abstractMethod;

      goog.proto2.Message.prototype.has = function (a) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        return this.has$Value(a.getTag());
      };

      goog.proto2.Message.prototype.arrayOf = function (a) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        return this.array$Values(a.getTag());
      };

      goog.proto2.Message.prototype.countOf = function (a) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        return this.count$Values(a.getTag());
      };

      goog.proto2.Message.prototype.get = function (a, b) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        return this.get$Value(a.getTag(), b);
      };

      goog.proto2.Message.prototype.getOrDefault = function (a, b) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        return this.get$ValueOrDefault(a.getTag(), b);
      };

      goog.proto2.Message.prototype.set = function (a, b) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        this.set$Value(a.getTag(), b);
      };

      goog.proto2.Message.prototype.add = function (a, b) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        this.add$Value(a.getTag(), b);
      };

      goog.proto2.Message.prototype.clear = function (a) {
        goog.asserts.assert(a.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
        this.clear$Field(a.getTag());
      };

      goog.proto2.Message.prototype.equals = function (a) {
        if (!a || this.constructor != a.constructor) {
          return !1;
        }

        for (var b = this.getDescriptor().getFields(), c = 0; c < b.length; c++) {
          var d = b[c],
              e = d.getTag();

          if (this.has$Value(e) != a.has$Value(e)) {
            return !1;
          }

          if (this.has$Value(e)) {
            var f = d.isCompositeType(),
                g = this.getValueForTag_(e);
            e = a.getValueForTag_(e);

            if (d.isRepeated()) {
              if (g.length != e.length) {
                return !1;
              }

              for (d = 0; d < g.length; d++) {
                var h = g[d],
                    k = e[d];

                if (f ? !h.equals(k) : h != k) {
                  return !1;
                }
              }
            } else {
              if (f ? !g.equals(e) : g != e) {
                return !1;
              }
            }
          }
        }

        return !0;
      };

      goog.proto2.Message.prototype.copyFrom = function (a) {
        goog.asserts.assert(this.constructor == a.constructor, "The source message must have the same type.");
        this != a && (this.values_ = {}, this.deserializedFields_ && (this.deserializedFields_ = {}), this.mergeFrom(a));
      };

      goog.proto2.Message.prototype.mergeFrom = function (a) {
        goog.asserts.assert(this.constructor == a.constructor, "The source message must have the same type.");

        for (var b = this.getDescriptor().getFields(), c = 0; c < b.length; c++) {
          var d = b[c],
              e = d.getTag();

          if (a.has$Value(e)) {
            this.deserializedFields_ && delete this.deserializedFields_[d.getTag()];
            var f = d.isCompositeType();

            if (d.isRepeated()) {
              d = a.array$Values(e);

              for (var g = 0; g < d.length; g++) {
                this.add$Value(e, f ? d[g].clone() : d[g]);
              }
            } else {
              d = a.getValueForTag_(e), f ? (f = this.getValueForTag_(e)) ? f.mergeFrom(d) : this.set$Value(e, d.clone()) : this.set$Value(e, d);
            }
          }
        }
      };

      goog.proto2.Message.prototype.clone = function () {
        var a = new this.constructor();
        a.copyFrom(this);
        return a;
      };

      goog.proto2.Message.prototype.initDefaults = function (a) {
        for (var b = this.getDescriptor().getFields(), c = 0; c < b.length; c++) {
          var d = b[c],
              e = d.getTag(),
              f = d.isCompositeType();
          this.has$Value(e) || d.isRepeated() || (f ? this.values_[e] = new (d.getNativeType())() : a && (this.values_[e] = d.getDefaultValue()));

          if (f) {
            if (d.isRepeated()) {
              for (d = this.array$Values(e), e = 0; e < d.length; e++) {
                d[e].initDefaults(a);
              }
            } else {
              this.get$Value(e).initDefaults(a);
            }
          }
        }
      };

      goog.proto2.Message.prototype.has$Value = function (a) {
        return null != this.values_[a];
      };

      goog.proto2.Message.prototype.getValueForTag_ = function (a) {
        var b = this.values_[a];
        return null == b ? null : this.lazyDeserializer_ ? a in this.deserializedFields_ ? this.deserializedFields_[a] : (b = this.lazyDeserializer_.deserializeField(this, this.fields_[a], b), this.deserializedFields_[a] = b) : b;
      };

      goog.proto2.Message.prototype.get$Value = function (a, b) {
        var c = this.getValueForTag_(a);

        if (this.fields_[a].isRepeated()) {
          var d = b || 0;
          goog.asserts.assert(0 <= d && d < c.length, "Given index %s is out of bounds.  Repeated field length: %s", d, c.length);
          return c[d];
        }

        return c;
      };

      goog.proto2.Message.prototype.get$ValueOrDefault = function (a, b) {
        return this.has$Value(a) ? this.get$Value(a, b) : this.fields_[a].getDefaultValue();
      };

      goog.proto2.Message.prototype.array$Values = function (a) {
        return this.getValueForTag_(a) || [];
      };

      goog.proto2.Message.prototype.count$Values = function (a) {
        return this.fields_[a].isRepeated() ? this.has$Value(a) ? this.values_[a].length : 0 : this.has$Value(a) ? 1 : 0;
      };

      goog.proto2.Message.prototype.set$Value = function (a, b) {
        goog.asserts.ENABLE_ASSERTS && this.checkFieldType_(this.fields_[a], b);
        this.values_[a] = b;
        this.deserializedFields_ && (this.deserializedFields_[a] = b);
      };

      goog.proto2.Message.prototype.add$Value = function (a, b) {
        goog.asserts.ENABLE_ASSERTS && this.checkFieldType_(this.fields_[a], b);
        this.values_[a] || (this.values_[a] = []);
        this.values_[a].push(b);
        this.deserializedFields_ && delete this.deserializedFields_[a];
      };

      goog.proto2.Message.prototype.checkFieldType_ = function (a, b) {
        a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.ENUM ? goog.asserts.assertNumber(b) : goog.asserts.assert(Object(b).constructor == a.getNativeType());
      };

      goog.proto2.Message.prototype.clear$Field = function (a) {
        delete this.values_[a];
        this.deserializedFields_ && delete this.deserializedFields_[a];
      };

      goog.proto2.Message.createDescriptor = function (a, b) {
        var c = [],
            d = b[0],
            e;

        for (e in b) {
          0 != e && c.push(new goog.proto2.FieldDescriptor(a, e, b[e]));
        }

        return new goog.proto2.Descriptor(a, d, c);
      };

      goog.proto2.Serializer = function () {};

      goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS = !1;
      goog.proto2.Serializer.prototype.serialize = goog.abstractMethod;

      goog.proto2.Serializer.prototype.getSerializedValue = function (a, b) {
        return a.isCompositeType() ? this.serialize(b) : "number" !== typeof b || isFinite(b) ? b : b.toString();
      };

      goog.proto2.Serializer.prototype.deserialize = function (a, b) {
        var c = a.createMessageInstance();
        this.deserializeTo(c, b);
        goog.asserts.assert(c instanceof goog.proto2.Message);
        return c;
      };

      goog.proto2.Serializer.prototype.deserializeTo = goog.abstractMethod;

      goog.proto2.Serializer.prototype.getDeserializedValue = function (a, b) {
        if (a.isCompositeType()) {
          return b instanceof goog.proto2.Message ? b : this.deserialize(a.getFieldMessageType(), b);
        }

        if (a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.ENUM) {
          if (goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS && "string" === typeof b) {
            var c = a.getNativeType();

            if (c.hasOwnProperty(b)) {
              return c[b];
            }
          }

          return "string" === typeof b && goog.proto2.Serializer.INTEGER_REGEX.test(b) && (c = Number(b), 0 < c) ? c : b;
        }

        if (!a.deserializationConversionPermitted()) {
          return b;
        }

        c = a.getNativeType();

        if (c === String) {
          if ("number" === typeof b) {
            return String(b);
          }
        } else {
          if (c === Number && "string" === typeof b && ("Infinity" === b || "-Infinity" === b || "NaN" === b || goog.proto2.Serializer.INTEGER_REGEX.test(b))) {
            return Number(b);
          }
        }

        return b;
      };

      goog.proto2.Serializer.INTEGER_REGEX = /^-?[0-9]+$/;

      goog.proto2.LazyDeserializer = function () {};

      goog.inherits(goog.proto2.LazyDeserializer, goog.proto2.Serializer);

      goog.proto2.LazyDeserializer.prototype.deserialize = function (a, b) {
        var c = a.createMessageInstance();
        c.initializeForLazyDeserializer(this, b);
        goog.asserts.assert(c instanceof goog.proto2.Message);
        return c;
      };

      goog.proto2.LazyDeserializer.prototype.deserializeTo = function (a, b) {
        throw Error("Unimplemented");
      };

      goog.proto2.LazyDeserializer.prototype.deserializeField = goog.abstractMethod;

      goog.proto2.PbLiteSerializer = function () {};

      goog.inherits(goog.proto2.PbLiteSerializer, goog.proto2.LazyDeserializer);
      goog.proto2.PbLiteSerializer.prototype.zeroIndexing_ = !1;

      goog.proto2.PbLiteSerializer.prototype.setZeroIndexed = function (a) {
        this.zeroIndexing_ = a;
      };

      goog.proto2.PbLiteSerializer.prototype.serialize = function (a) {
        for (var b = a.getDescriptor().getFields(), c = [], d = this.zeroIndexing_, e = 0; e < b.length; e++) {
          var f = b[e];

          if (a.has(f)) {
            var g = f.getTag();
            g = d ? g - 1 : g;

            if (f.isRepeated()) {
              c[g] = [];

              for (var h = 0; h < a.countOf(f); h++) {
                c[g][h] = this.getSerializedValue(f, a.get(f, h));
              }
            } else {
              c[g] = this.getSerializedValue(f, a.get(f));
            }
          }
        }

        a.forEachUnknown(function (a, b) {
          c[d ? a - 1 : a] = b;
        });
        return c;
      };

      goog.proto2.PbLiteSerializer.prototype.deserializeField = function (a, b, c) {
        if (null == c) {
          return c;
        }

        if (b.isRepeated()) {
          a = [];
          goog.asserts.assert(goog.isArray(c), "Value must be array: %s", c);

          for (var d = 0; d < c.length; d++) {
            a[d] = this.getDeserializedValue(b, c[d]);
          }

          return a;
        }

        return this.getDeserializedValue(b, c);
      };

      goog.proto2.PbLiteSerializer.prototype.getSerializedValue = function (a, b) {
        return a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.BOOL ? b ? 1 : 0 : goog.proto2.Serializer.prototype.getSerializedValue.apply(this, arguments);
      };

      goog.proto2.PbLiteSerializer.prototype.getDeserializedValue = function (a, b) {
        return a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.BOOL ? (goog.asserts.assert("number" === typeof b || "boolean" === typeof b, "Value is expected to be a number or boolean"), !!b) : goog.proto2.Serializer.prototype.getDeserializedValue.apply(this, arguments);
      };

      goog.proto2.PbLiteSerializer.prototype.deserialize = function (a, b) {
        var c = b;

        if (this.zeroIndexing_) {
          c = [];

          for (var d in b) {
            c[parseInt(d, 10) + 1] = b[d];
          }
        }

        return goog.proto2.PbLiteSerializer.superClass_.deserialize.call(this, a, c);
      };
      /*
      
       Protocol Buffer 2 Copyright 2008 Google Inc.
       All other code copyright its respective owners.
       Copyright (C) 2010 The Libphonenumber Authors
      
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
      
       http://www.apache.org/licenses/LICENSE-2.0
      
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
      */


      var i18n = {
        phonenumbers: {}
      };

      i18n.phonenumbers.NumberFormat = function () {
        goog.proto2.Message.call(this);
      };

      goog.inherits(i18n.phonenumbers.NumberFormat, goog.proto2.Message);
      i18n.phonenumbers.NumberFormat.descriptor_ = null;

      i18n.phonenumbers.NumberFormat.prototype.getPattern = function () {
        return this.get$Value(1);
      };

      i18n.phonenumbers.NumberFormat.prototype.getPatternOrDefault = function () {
        return this.get$ValueOrDefault(1);
      };

      i18n.phonenumbers.NumberFormat.prototype.setPattern = function (a) {
        this.set$Value(1, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.hasPattern = function () {
        return this.has$Value(1);
      };

      i18n.phonenumbers.NumberFormat.prototype.patternCount = function () {
        return this.count$Values(1);
      };

      i18n.phonenumbers.NumberFormat.prototype.clearPattern = function () {
        this.clear$Field(1);
      };

      i18n.phonenumbers.NumberFormat.prototype.getFormat = function () {
        return this.get$Value(2);
      };

      i18n.phonenumbers.NumberFormat.prototype.getFormatOrDefault = function () {
        return this.get$ValueOrDefault(2);
      };

      i18n.phonenumbers.NumberFormat.prototype.setFormat = function (a) {
        this.set$Value(2, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.hasFormat = function () {
        return this.has$Value(2);
      };

      i18n.phonenumbers.NumberFormat.prototype.formatCount = function () {
        return this.count$Values(2);
      };

      i18n.phonenumbers.NumberFormat.prototype.clearFormat = function () {
        this.clear$Field(2);
      };

      i18n.phonenumbers.NumberFormat.prototype.getLeadingDigitsPattern = function (a) {
        return this.get$Value(3, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.getLeadingDigitsPatternOrDefault = function (a) {
        return this.get$ValueOrDefault(3, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.addLeadingDigitsPattern = function (a) {
        this.add$Value(3, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.leadingDigitsPatternArray = function () {
        return this.array$Values(3);
      };

      i18n.phonenumbers.NumberFormat.prototype.hasLeadingDigitsPattern = function () {
        return this.has$Value(3);
      };

      i18n.phonenumbers.NumberFormat.prototype.leadingDigitsPatternCount = function () {
        return this.count$Values(3);
      };

      i18n.phonenumbers.NumberFormat.prototype.clearLeadingDigitsPattern = function () {
        this.clear$Field(3);
      };

      i18n.phonenumbers.NumberFormat.prototype.getNationalPrefixFormattingRule = function () {
        return this.get$Value(4);
      };

      i18n.phonenumbers.NumberFormat.prototype.getNationalPrefixFormattingRuleOrDefault = function () {
        return this.get$ValueOrDefault(4);
      };

      i18n.phonenumbers.NumberFormat.prototype.setNationalPrefixFormattingRule = function (a) {
        this.set$Value(4, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.hasNationalPrefixFormattingRule = function () {
        return this.has$Value(4);
      };

      i18n.phonenumbers.NumberFormat.prototype.nationalPrefixFormattingRuleCount = function () {
        return this.count$Values(4);
      };

      i18n.phonenumbers.NumberFormat.prototype.clearNationalPrefixFormattingRule = function () {
        this.clear$Field(4);
      };

      i18n.phonenumbers.NumberFormat.prototype.getNationalPrefixOptionalWhenFormatting = function () {
        return this.get$Value(6);
      };

      i18n.phonenumbers.NumberFormat.prototype.getNationalPrefixOptionalWhenFormattingOrDefault = function () {
        return this.get$ValueOrDefault(6);
      };

      i18n.phonenumbers.NumberFormat.prototype.setNationalPrefixOptionalWhenFormatting = function (a) {
        this.set$Value(6, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.hasNationalPrefixOptionalWhenFormatting = function () {
        return this.has$Value(6);
      };

      i18n.phonenumbers.NumberFormat.prototype.nationalPrefixOptionalWhenFormattingCount = function () {
        return this.count$Values(6);
      };

      i18n.phonenumbers.NumberFormat.prototype.clearNationalPrefixOptionalWhenFormatting = function () {
        this.clear$Field(6);
      };

      i18n.phonenumbers.NumberFormat.prototype.getDomesticCarrierCodeFormattingRule = function () {
        return this.get$Value(5);
      };

      i18n.phonenumbers.NumberFormat.prototype.getDomesticCarrierCodeFormattingRuleOrDefault = function () {
        return this.get$ValueOrDefault(5);
      };

      i18n.phonenumbers.NumberFormat.prototype.setDomesticCarrierCodeFormattingRule = function (a) {
        this.set$Value(5, a);
      };

      i18n.phonenumbers.NumberFormat.prototype.hasDomesticCarrierCodeFormattingRule = function () {
        return this.has$Value(5);
      };

      i18n.phonenumbers.NumberFormat.prototype.domesticCarrierCodeFormattingRuleCount = function () {
        return this.count$Values(5);
      };

      i18n.phonenumbers.NumberFormat.prototype.clearDomesticCarrierCodeFormattingRule = function () {
        this.clear$Field(5);
      };

      i18n.phonenumbers.PhoneNumberDesc = function () {
        goog.proto2.Message.call(this);
      };

      goog.inherits(i18n.phonenumbers.PhoneNumberDesc, goog.proto2.Message);
      i18n.phonenumbers.PhoneNumberDesc.descriptor_ = null;

      i18n.phonenumbers.PhoneNumberDesc.prototype.getNationalNumberPattern = function () {
        return this.get$Value(2);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getNationalNumberPatternOrDefault = function () {
        return this.get$ValueOrDefault(2);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.setNationalNumberPattern = function (a) {
        this.set$Value(2, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.hasNationalNumberPattern = function () {
        return this.has$Value(2);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.nationalNumberPatternCount = function () {
        return this.count$Values(2);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.clearNationalNumberPattern = function () {
        this.clear$Field(2);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLength = function (a) {
        return this.get$Value(9, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLengthOrDefault = function (a) {
        return this.get$ValueOrDefault(9, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.addPossibleLength = function (a) {
        this.add$Value(9, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthArray = function () {
        return this.array$Values(9);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.hasPossibleLength = function () {
        return this.has$Value(9);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthCount = function () {
        return this.count$Values(9);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.clearPossibleLength = function () {
        this.clear$Field(9);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLengthLocalOnly = function (a) {
        return this.get$Value(10, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLengthLocalOnlyOrDefault = function (a) {
        return this.get$ValueOrDefault(10, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.addPossibleLengthLocalOnly = function (a) {
        this.add$Value(10, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthLocalOnlyArray = function () {
        return this.array$Values(10);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.hasPossibleLengthLocalOnly = function () {
        return this.has$Value(10);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthLocalOnlyCount = function () {
        return this.count$Values(10);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.clearPossibleLengthLocalOnly = function () {
        this.clear$Field(10);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getExampleNumber = function () {
        return this.get$Value(6);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.getExampleNumberOrDefault = function () {
        return this.get$ValueOrDefault(6);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.setExampleNumber = function (a) {
        this.set$Value(6, a);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.hasExampleNumber = function () {
        return this.has$Value(6);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.exampleNumberCount = function () {
        return this.count$Values(6);
      };

      i18n.phonenumbers.PhoneNumberDesc.prototype.clearExampleNumber = function () {
        this.clear$Field(6);
      };

      i18n.phonenumbers.PhoneMetadata = function () {
        goog.proto2.Message.call(this);
      };

      goog.inherits(i18n.phonenumbers.PhoneMetadata, goog.proto2.Message);
      i18n.phonenumbers.PhoneMetadata.descriptor_ = null;

      i18n.phonenumbers.PhoneMetadata.prototype.getGeneralDesc = function () {
        return this.get$Value(1);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getGeneralDescOrDefault = function () {
        return this.get$ValueOrDefault(1);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setGeneralDesc = function (a) {
        this.set$Value(1, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasGeneralDesc = function () {
        return this.has$Value(1);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.generalDescCount = function () {
        return this.count$Values(1);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearGeneralDesc = function () {
        this.clear$Field(1);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getFixedLine = function () {
        return this.get$Value(2);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getFixedLineOrDefault = function () {
        return this.get$ValueOrDefault(2);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setFixedLine = function (a) {
        this.set$Value(2, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasFixedLine = function () {
        return this.has$Value(2);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.fixedLineCount = function () {
        return this.count$Values(2);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearFixedLine = function () {
        this.clear$Field(2);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getMobile = function () {
        return this.get$Value(3);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getMobileOrDefault = function () {
        return this.get$ValueOrDefault(3);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setMobile = function (a) {
        this.set$Value(3, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasMobile = function () {
        return this.has$Value(3);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.mobileCount = function () {
        return this.count$Values(3);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearMobile = function () {
        this.clear$Field(3);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getTollFree = function () {
        return this.get$Value(4);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getTollFreeOrDefault = function () {
        return this.get$ValueOrDefault(4);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setTollFree = function (a) {
        this.set$Value(4, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasTollFree = function () {
        return this.has$Value(4);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.tollFreeCount = function () {
        return this.count$Values(4);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearTollFree = function () {
        this.clear$Field(4);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPremiumRate = function () {
        return this.get$Value(5);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPremiumRateOrDefault = function () {
        return this.get$ValueOrDefault(5);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setPremiumRate = function (a) {
        this.set$Value(5, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasPremiumRate = function () {
        return this.has$Value(5);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.premiumRateCount = function () {
        return this.count$Values(5);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearPremiumRate = function () {
        this.clear$Field(5);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getSharedCost = function () {
        return this.get$Value(6);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getSharedCostOrDefault = function () {
        return this.get$ValueOrDefault(6);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setSharedCost = function (a) {
        this.set$Value(6, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasSharedCost = function () {
        return this.has$Value(6);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.sharedCostCount = function () {
        return this.count$Values(6);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearSharedCost = function () {
        this.clear$Field(6);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPersonalNumber = function () {
        return this.get$Value(7);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPersonalNumberOrDefault = function () {
        return this.get$ValueOrDefault(7);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setPersonalNumber = function (a) {
        this.set$Value(7, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasPersonalNumber = function () {
        return this.has$Value(7);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.personalNumberCount = function () {
        return this.count$Values(7);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearPersonalNumber = function () {
        this.clear$Field(7);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getVoip = function () {
        return this.get$Value(8);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getVoipOrDefault = function () {
        return this.get$ValueOrDefault(8);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setVoip = function (a) {
        this.set$Value(8, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasVoip = function () {
        return this.has$Value(8);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.voipCount = function () {
        return this.count$Values(8);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearVoip = function () {
        this.clear$Field(8);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPager = function () {
        return this.get$Value(21);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPagerOrDefault = function () {
        return this.get$ValueOrDefault(21);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setPager = function (a) {
        this.set$Value(21, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasPager = function () {
        return this.has$Value(21);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.pagerCount = function () {
        return this.count$Values(21);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearPager = function () {
        this.clear$Field(21);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getUan = function () {
        return this.get$Value(25);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getUanOrDefault = function () {
        return this.get$ValueOrDefault(25);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setUan = function (a) {
        this.set$Value(25, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasUan = function () {
        return this.has$Value(25);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.uanCount = function () {
        return this.count$Values(25);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearUan = function () {
        this.clear$Field(25);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getEmergency = function () {
        return this.get$Value(27);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getEmergencyOrDefault = function () {
        return this.get$ValueOrDefault(27);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setEmergency = function (a) {
        this.set$Value(27, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasEmergency = function () {
        return this.has$Value(27);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.emergencyCount = function () {
        return this.count$Values(27);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearEmergency = function () {
        this.clear$Field(27);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getVoicemail = function () {
        return this.get$Value(28);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getVoicemailOrDefault = function () {
        return this.get$ValueOrDefault(28);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setVoicemail = function (a) {
        this.set$Value(28, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasVoicemail = function () {
        return this.has$Value(28);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.voicemailCount = function () {
        return this.count$Values(28);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearVoicemail = function () {
        this.clear$Field(28);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getShortCode = function () {
        return this.get$Value(29);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getShortCodeOrDefault = function () {
        return this.get$ValueOrDefault(29);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setShortCode = function (a) {
        this.set$Value(29, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasShortCode = function () {
        return this.has$Value(29);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.shortCodeCount = function () {
        return this.count$Values(29);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearShortCode = function () {
        this.clear$Field(29);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getStandardRate = function () {
        return this.get$Value(30);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getStandardRateOrDefault = function () {
        return this.get$ValueOrDefault(30);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setStandardRate = function (a) {
        this.set$Value(30, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasStandardRate = function () {
        return this.has$Value(30);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.standardRateCount = function () {
        return this.count$Values(30);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearStandardRate = function () {
        this.clear$Field(30);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getCarrierSpecific = function () {
        return this.get$Value(31);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getCarrierSpecificOrDefault = function () {
        return this.get$ValueOrDefault(31);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setCarrierSpecific = function (a) {
        this.set$Value(31, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasCarrierSpecific = function () {
        return this.has$Value(31);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.carrierSpecificCount = function () {
        return this.count$Values(31);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearCarrierSpecific = function () {
        this.clear$Field(31);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getSmsServices = function () {
        return this.get$Value(33);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getSmsServicesOrDefault = function () {
        return this.get$ValueOrDefault(33);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setSmsServices = function (a) {
        this.set$Value(33, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasSmsServices = function () {
        return this.has$Value(33);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.smsServicesCount = function () {
        return this.count$Values(33);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearSmsServices = function () {
        this.clear$Field(33);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNoInternationalDialling = function () {
        return this.get$Value(24);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNoInternationalDiallingOrDefault = function () {
        return this.get$ValueOrDefault(24);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setNoInternationalDialling = function (a) {
        this.set$Value(24, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasNoInternationalDialling = function () {
        return this.has$Value(24);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.noInternationalDiallingCount = function () {
        return this.count$Values(24);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearNoInternationalDialling = function () {
        this.clear$Field(24);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getId = function () {
        return this.get$Value(9);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getIdOrDefault = function () {
        return this.get$ValueOrDefault(9);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setId = function (a) {
        this.set$Value(9, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasId = function () {
        return this.has$Value(9);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.idCount = function () {
        return this.count$Values(9);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearId = function () {
        this.clear$Field(9);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getCountryCode = function () {
        return this.get$Value(10);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getCountryCodeOrDefault = function () {
        return this.get$ValueOrDefault(10);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setCountryCode = function (a) {
        this.set$Value(10, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasCountryCode = function () {
        return this.has$Value(10);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.countryCodeCount = function () {
        return this.count$Values(10);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearCountryCode = function () {
        this.clear$Field(10);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getInternationalPrefix = function () {
        return this.get$Value(11);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getInternationalPrefixOrDefault = function () {
        return this.get$ValueOrDefault(11);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setInternationalPrefix = function (a) {
        this.set$Value(11, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasInternationalPrefix = function () {
        return this.has$Value(11);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.internationalPrefixCount = function () {
        return this.count$Values(11);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearInternationalPrefix = function () {
        this.clear$Field(11);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPreferredInternationalPrefix = function () {
        return this.get$Value(17);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPreferredInternationalPrefixOrDefault = function () {
        return this.get$ValueOrDefault(17);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setPreferredInternationalPrefix = function (a) {
        this.set$Value(17, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasPreferredInternationalPrefix = function () {
        return this.has$Value(17);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.preferredInternationalPrefixCount = function () {
        return this.count$Values(17);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearPreferredInternationalPrefix = function () {
        this.clear$Field(17);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefix = function () {
        return this.get$Value(12);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixOrDefault = function () {
        return this.get$ValueOrDefault(12);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setNationalPrefix = function (a) {
        this.set$Value(12, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasNationalPrefix = function () {
        return this.has$Value(12);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.nationalPrefixCount = function () {
        return this.count$Values(12);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearNationalPrefix = function () {
        this.clear$Field(12);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPreferredExtnPrefix = function () {
        return this.get$Value(13);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getPreferredExtnPrefixOrDefault = function () {
        return this.get$ValueOrDefault(13);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setPreferredExtnPrefix = function (a) {
        this.set$Value(13, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasPreferredExtnPrefix = function () {
        return this.has$Value(13);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.preferredExtnPrefixCount = function () {
        return this.count$Values(13);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearPreferredExtnPrefix = function () {
        this.clear$Field(13);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixForParsing = function () {
        return this.get$Value(15);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixForParsingOrDefault = function () {
        return this.get$ValueOrDefault(15);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setNationalPrefixForParsing = function (a) {
        this.set$Value(15, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasNationalPrefixForParsing = function () {
        return this.has$Value(15);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.nationalPrefixForParsingCount = function () {
        return this.count$Values(15);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearNationalPrefixForParsing = function () {
        this.clear$Field(15);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixTransformRule = function () {
        return this.get$Value(16);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixTransformRuleOrDefault = function () {
        return this.get$ValueOrDefault(16);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setNationalPrefixTransformRule = function (a) {
        this.set$Value(16, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasNationalPrefixTransformRule = function () {
        return this.has$Value(16);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.nationalPrefixTransformRuleCount = function () {
        return this.count$Values(16);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearNationalPrefixTransformRule = function () {
        this.clear$Field(16);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getSameMobileAndFixedLinePattern = function () {
        return this.get$Value(18);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getSameMobileAndFixedLinePatternOrDefault = function () {
        return this.get$ValueOrDefault(18);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setSameMobileAndFixedLinePattern = function (a) {
        this.set$Value(18, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasSameMobileAndFixedLinePattern = function () {
        return this.has$Value(18);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.sameMobileAndFixedLinePatternCount = function () {
        return this.count$Values(18);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearSameMobileAndFixedLinePattern = function () {
        this.clear$Field(18);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNumberFormat = function (a) {
        return this.get$Value(19, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getNumberFormatOrDefault = function (a) {
        return this.get$ValueOrDefault(19, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.addNumberFormat = function (a) {
        this.add$Value(19, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.numberFormatArray = function () {
        return this.array$Values(19);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasNumberFormat = function () {
        return this.has$Value(19);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.numberFormatCount = function () {
        return this.count$Values(19);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearNumberFormat = function () {
        this.clear$Field(19);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getIntlNumberFormat = function (a) {
        return this.get$Value(20, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getIntlNumberFormatOrDefault = function (a) {
        return this.get$ValueOrDefault(20, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.addIntlNumberFormat = function (a) {
        this.add$Value(20, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.intlNumberFormatArray = function () {
        return this.array$Values(20);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasIntlNumberFormat = function () {
        return this.has$Value(20);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.intlNumberFormatCount = function () {
        return this.count$Values(20);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearIntlNumberFormat = function () {
        this.clear$Field(20);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getMainCountryForCode = function () {
        return this.get$Value(22);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getMainCountryForCodeOrDefault = function () {
        return this.get$ValueOrDefault(22);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setMainCountryForCode = function (a) {
        this.set$Value(22, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasMainCountryForCode = function () {
        return this.has$Value(22);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.mainCountryForCodeCount = function () {
        return this.count$Values(22);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearMainCountryForCode = function () {
        this.clear$Field(22);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getLeadingDigits = function () {
        return this.get$Value(23);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getLeadingDigitsOrDefault = function () {
        return this.get$ValueOrDefault(23);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setLeadingDigits = function (a) {
        this.set$Value(23, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasLeadingDigits = function () {
        return this.has$Value(23);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.leadingDigitsCount = function () {
        return this.count$Values(23);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearLeadingDigits = function () {
        this.clear$Field(23);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getLeadingZeroPossible = function () {
        return this.get$Value(26);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.getLeadingZeroPossibleOrDefault = function () {
        return this.get$ValueOrDefault(26);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.setLeadingZeroPossible = function (a) {
        this.set$Value(26, a);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.hasLeadingZeroPossible = function () {
        return this.has$Value(26);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.leadingZeroPossibleCount = function () {
        return this.count$Values(26);
      };

      i18n.phonenumbers.PhoneMetadata.prototype.clearLeadingZeroPossible = function () {
        this.clear$Field(26);
      };

      i18n.phonenumbers.PhoneMetadataCollection = function () {
        goog.proto2.Message.call(this);
      };

      goog.inherits(i18n.phonenumbers.PhoneMetadataCollection, goog.proto2.Message);
      i18n.phonenumbers.PhoneMetadataCollection.descriptor_ = null;

      i18n.phonenumbers.PhoneMetadataCollection.prototype.getMetadata = function (a) {
        return this.get$Value(1, a);
      };

      i18n.phonenumbers.PhoneMetadataCollection.prototype.getMetadataOrDefault = function (a) {
        return this.get$ValueOrDefault(1, a);
      };

      i18n.phonenumbers.PhoneMetadataCollection.prototype.addMetadata = function (a) {
        this.add$Value(1, a);
      };

      i18n.phonenumbers.PhoneMetadataCollection.prototype.metadataArray = function () {
        return this.array$Values(1);
      };

      i18n.phonenumbers.PhoneMetadataCollection.prototype.hasMetadata = function () {
        return this.has$Value(1);
      };

      i18n.phonenumbers.PhoneMetadataCollection.prototype.metadataCount = function () {
        return this.count$Values(1);
      };

      i18n.phonenumbers.PhoneMetadataCollection.prototype.clearMetadata = function () {
        this.clear$Field(1);
      };

      i18n.phonenumbers.NumberFormat.prototype.getDescriptor = function () {
        var a = i18n.phonenumbers.NumberFormat.descriptor_;
        a || (i18n.phonenumbers.NumberFormat.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.NumberFormat, {
          0: {
            name: "NumberFormat",
            fullName: "i18n.phonenumbers.NumberFormat"
          },
          1: {
            name: "pattern",
            required: !0,
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          2: {
            name: "format",
            required: !0,
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          3: {
            name: "leading_digits_pattern",
            repeated: !0,
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          4: {
            name: "national_prefix_formatting_rule",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          6: {
            name: "national_prefix_optional_when_formatting",
            fieldType: goog.proto2.Message.FieldType.BOOL,
            defaultValue: !1,
            type: Boolean
          },
          5: {
            name: "domestic_carrier_code_formatting_rule",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          }
        }));
        return a;
      };

      i18n.phonenumbers.NumberFormat.getDescriptor = i18n.phonenumbers.NumberFormat.prototype.getDescriptor;

      i18n.phonenumbers.PhoneNumberDesc.prototype.getDescriptor = function () {
        var a = i18n.phonenumbers.PhoneNumberDesc.descriptor_;
        a || (i18n.phonenumbers.PhoneNumberDesc.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneNumberDesc, {
          0: {
            name: "PhoneNumberDesc",
            fullName: "i18n.phonenumbers.PhoneNumberDesc"
          },
          2: {
            name: "national_number_pattern",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          9: {
            name: "possible_length",
            repeated: !0,
            fieldType: goog.proto2.Message.FieldType.INT32,
            type: Number
          },
          10: {
            name: "possible_length_local_only",
            repeated: !0,
            fieldType: goog.proto2.Message.FieldType.INT32,
            type: Number
          },
          6: {
            name: "example_number",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          }
        }));
        return a;
      };

      i18n.phonenumbers.PhoneNumberDesc.getDescriptor = i18n.phonenumbers.PhoneNumberDesc.prototype.getDescriptor;

      i18n.phonenumbers.PhoneMetadata.prototype.getDescriptor = function () {
        var a = i18n.phonenumbers.PhoneMetadata.descriptor_;
        a || (i18n.phonenumbers.PhoneMetadata.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneMetadata, {
          0: {
            name: "PhoneMetadata",
            fullName: "i18n.phonenumbers.PhoneMetadata"
          },
          1: {
            name: "general_desc",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          2: {
            name: "fixed_line",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          3: {
            name: "mobile",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          4: {
            name: "toll_free",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          5: {
            name: "premium_rate",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          6: {
            name: "shared_cost",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          7: {
            name: "personal_number",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          8: {
            name: "voip",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          21: {
            name: "pager",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          25: {
            name: "uan",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          27: {
            name: "emergency",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          28: {
            name: "voicemail",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          29: {
            name: "short_code",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          30: {
            name: "standard_rate",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          31: {
            name: "carrier_specific",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          33: {
            name: "sms_services",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          24: {
            name: "no_international_dialling",
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneNumberDesc
          },
          9: {
            name: "id",
            required: !0,
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          10: {
            name: "country_code",
            fieldType: goog.proto2.Message.FieldType.INT32,
            type: Number
          },
          11: {
            name: "international_prefix",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          17: {
            name: "preferred_international_prefix",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          12: {
            name: "national_prefix",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          13: {
            name: "preferred_extn_prefix",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          15: {
            name: "national_prefix_for_parsing",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          16: {
            name: "national_prefix_transform_rule",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          18: {
            name: "same_mobile_and_fixed_line_pattern",
            fieldType: goog.proto2.Message.FieldType.BOOL,
            defaultValue: !1,
            type: Boolean
          },
          19: {
            name: "number_format",
            repeated: !0,
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.NumberFormat
          },
          20: {
            name: "intl_number_format",
            repeated: !0,
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.NumberFormat
          },
          22: {
            name: "main_country_for_code",
            fieldType: goog.proto2.Message.FieldType.BOOL,
            defaultValue: !1,
            type: Boolean
          },
          23: {
            name: "leading_digits",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          26: {
            name: "leading_zero_possible",
            fieldType: goog.proto2.Message.FieldType.BOOL,
            defaultValue: !1,
            type: Boolean
          }
        }));
        return a;
      };

      i18n.phonenumbers.PhoneMetadata.getDescriptor = i18n.phonenumbers.PhoneMetadata.prototype.getDescriptor;

      i18n.phonenumbers.PhoneMetadataCollection.prototype.getDescriptor = function () {
        var a = i18n.phonenumbers.PhoneMetadataCollection.descriptor_;
        a || (i18n.phonenumbers.PhoneMetadataCollection.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneMetadataCollection, {
          0: {
            name: "PhoneMetadataCollection",
            fullName: "i18n.phonenumbers.PhoneMetadataCollection"
          },
          1: {
            name: "metadata",
            repeated: !0,
            fieldType: goog.proto2.Message.FieldType.MESSAGE,
            type: i18n.phonenumbers.PhoneMetadata
          }
        }));
        return a;
      };

      i18n.phonenumbers.PhoneMetadataCollection.getDescriptor = i18n.phonenumbers.PhoneMetadataCollection.prototype.getDescriptor;

      i18n.phonenumbers.PhoneNumber = function () {
        goog.proto2.Message.call(this);
      };

      goog.inherits(i18n.phonenumbers.PhoneNumber, goog.proto2.Message);
      i18n.phonenumbers.PhoneNumber.descriptor_ = null;

      i18n.phonenumbers.PhoneNumber.prototype.getCountryCode = function () {
        return this.get$Value(1);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getCountryCodeOrDefault = function () {
        return this.get$ValueOrDefault(1);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setCountryCode = function (a) {
        this.set$Value(1, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasCountryCode = function () {
        return this.has$Value(1);
      };

      i18n.phonenumbers.PhoneNumber.prototype.countryCodeCount = function () {
        return this.count$Values(1);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearCountryCode = function () {
        this.clear$Field(1);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getNationalNumber = function () {
        return this.get$Value(2);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getNationalNumberOrDefault = function () {
        return this.get$ValueOrDefault(2);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setNationalNumber = function (a) {
        this.set$Value(2, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasNationalNumber = function () {
        return this.has$Value(2);
      };

      i18n.phonenumbers.PhoneNumber.prototype.nationalNumberCount = function () {
        return this.count$Values(2);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearNationalNumber = function () {
        this.clear$Field(2);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getExtension = function () {
        return this.get$Value(3);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getExtensionOrDefault = function () {
        return this.get$ValueOrDefault(3);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setExtension = function (a) {
        this.set$Value(3, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasExtension = function () {
        return this.has$Value(3);
      };

      i18n.phonenumbers.PhoneNumber.prototype.extensionCount = function () {
        return this.count$Values(3);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearExtension = function () {
        this.clear$Field(3);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getItalianLeadingZero = function () {
        return this.get$Value(4);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getItalianLeadingZeroOrDefault = function () {
        return this.get$ValueOrDefault(4);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setItalianLeadingZero = function (a) {
        this.set$Value(4, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasItalianLeadingZero = function () {
        return this.has$Value(4);
      };

      i18n.phonenumbers.PhoneNumber.prototype.italianLeadingZeroCount = function () {
        return this.count$Values(4);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearItalianLeadingZero = function () {
        this.clear$Field(4);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getNumberOfLeadingZeros = function () {
        return this.get$Value(8);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getNumberOfLeadingZerosOrDefault = function () {
        return this.get$ValueOrDefault(8);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setNumberOfLeadingZeros = function (a) {
        this.set$Value(8, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasNumberOfLeadingZeros = function () {
        return this.has$Value(8);
      };

      i18n.phonenumbers.PhoneNumber.prototype.numberOfLeadingZerosCount = function () {
        return this.count$Values(8);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearNumberOfLeadingZeros = function () {
        this.clear$Field(8);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getRawInput = function () {
        return this.get$Value(5);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getRawInputOrDefault = function () {
        return this.get$ValueOrDefault(5);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setRawInput = function (a) {
        this.set$Value(5, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasRawInput = function () {
        return this.has$Value(5);
      };

      i18n.phonenumbers.PhoneNumber.prototype.rawInputCount = function () {
        return this.count$Values(5);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearRawInput = function () {
        this.clear$Field(5);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getCountryCodeSource = function () {
        return this.get$Value(6);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getCountryCodeSourceOrDefault = function () {
        return this.get$ValueOrDefault(6);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setCountryCodeSource = function (a) {
        this.set$Value(6, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasCountryCodeSource = function () {
        return this.has$Value(6);
      };

      i18n.phonenumbers.PhoneNumber.prototype.countryCodeSourceCount = function () {
        return this.count$Values(6);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearCountryCodeSource = function () {
        this.clear$Field(6);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getPreferredDomesticCarrierCode = function () {
        return this.get$Value(7);
      };

      i18n.phonenumbers.PhoneNumber.prototype.getPreferredDomesticCarrierCodeOrDefault = function () {
        return this.get$ValueOrDefault(7);
      };

      i18n.phonenumbers.PhoneNumber.prototype.setPreferredDomesticCarrierCode = function (a) {
        this.set$Value(7, a);
      };

      i18n.phonenumbers.PhoneNumber.prototype.hasPreferredDomesticCarrierCode = function () {
        return this.has$Value(7);
      };

      i18n.phonenumbers.PhoneNumber.prototype.preferredDomesticCarrierCodeCount = function () {
        return this.count$Values(7);
      };

      i18n.phonenumbers.PhoneNumber.prototype.clearPreferredDomesticCarrierCode = function () {
        this.clear$Field(7);
      };

      i18n.phonenumbers.PhoneNumber.CountryCodeSource = {
        UNSPECIFIED: 0,
        FROM_NUMBER_WITH_PLUS_SIGN: 1,
        FROM_NUMBER_WITH_IDD: 5,
        FROM_NUMBER_WITHOUT_PLUS_SIGN: 10,
        FROM_DEFAULT_COUNTRY: 20
      };

      i18n.phonenumbers.PhoneNumber.prototype.getDescriptor = function () {
        var a = i18n.phonenumbers.PhoneNumber.descriptor_;
        a || (i18n.phonenumbers.PhoneNumber.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneNumber, {
          0: {
            name: "PhoneNumber",
            fullName: "i18n.phonenumbers.PhoneNumber"
          },
          1: {
            name: "country_code",
            required: !0,
            fieldType: goog.proto2.Message.FieldType.INT32,
            type: Number
          },
          2: {
            name: "national_number",
            required: !0,
            fieldType: goog.proto2.Message.FieldType.UINT64,
            type: Number
          },
          3: {
            name: "extension",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          4: {
            name: "italian_leading_zero",
            fieldType: goog.proto2.Message.FieldType.BOOL,
            type: Boolean
          },
          8: {
            name: "number_of_leading_zeros",
            fieldType: goog.proto2.Message.FieldType.INT32,
            defaultValue: 1,
            type: Number
          },
          5: {
            name: "raw_input",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          },
          6: {
            name: "country_code_source",
            fieldType: goog.proto2.Message.FieldType.ENUM,
            defaultValue: i18n.phonenumbers.PhoneNumber.CountryCodeSource.UNSPECIFIED,
            type: i18n.phonenumbers.PhoneNumber.CountryCodeSource
          },
          7: {
            name: "preferred_domestic_carrier_code",
            fieldType: goog.proto2.Message.FieldType.STRING,
            type: String
          }
        }));
        return a;
      };

      i18n.phonenumbers.PhoneNumber.ctor = i18n.phonenumbers.PhoneNumber;
      i18n.phonenumbers.PhoneNumber.ctor.getDescriptor = i18n.phonenumbers.PhoneNumber.prototype.getDescriptor;
      /*
      
       Copyright (C) 2010 The Libphonenumber Authors
      
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
      
       http://www.apache.org/licenses/LICENSE-2.0
      
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
      */

      i18n.phonenumbers.metadata = {};
      i18n.phonenumbers.metadata.countryCodeToRegionCodeMap = {
        1: "US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI".split(" "),
        7: ["RU", "KZ"],
        20: ["EG"],
        27: ["ZA"],
        30: ["GR"],
        31: ["NL"],
        32: ["BE"],
        33: ["FR"],
        34: ["ES"],
        36: ["HU"],
        39: ["IT", "VA"],
        40: ["RO"],
        41: ["CH"],
        43: ["AT"],
        44: ["GB", "GG", "IM", "JE"],
        45: ["DK"],
        46: ["SE"],
        47: ["NO", "SJ"],
        48: ["PL"],
        49: ["DE"],
        51: ["PE"],
        52: ["MX"],
        53: ["CU"],
        54: ["AR"],
        55: ["BR"],
        56: ["CL"],
        57: ["CO"],
        58: ["VE"],
        60: ["MY"],
        61: ["AU", "CC", "CX"],
        62: ["ID"],
        63: ["PH"],
        64: ["NZ"],
        65: ["SG"],
        66: ["TH"],
        81: ["JP"],
        82: ["KR"],
        84: ["VN"],
        86: ["CN"],
        90: ["TR"],
        91: ["IN"],
        92: ["PK"],
        93: ["AF"],
        94: ["LK"],
        95: ["MM"],
        98: ["IR"],
        211: ["SS"],
        212: ["MA", "EH"],
        213: ["DZ"],
        216: ["TN"],
        218: ["LY"],
        220: ["GM"],
        221: ["SN"],
        222: ["MR"],
        223: ["ML"],
        224: ["GN"],
        225: ["CI"],
        226: ["BF"],
        227: ["NE"],
        228: ["TG"],
        229: ["BJ"],
        230: ["MU"],
        231: ["LR"],
        232: ["SL"],
        233: ["GH"],
        234: ["NG"],
        235: ["TD"],
        236: ["CF"],
        237: ["CM"],
        238: ["CV"],
        239: ["ST"],
        240: ["GQ"],
        241: ["GA"],
        242: ["CG"],
        243: ["CD"],
        244: ["AO"],
        245: ["GW"],
        246: ["IO"],
        247: ["AC"],
        248: ["SC"],
        249: ["SD"],
        250: ["RW"],
        251: ["ET"],
        252: ["SO"],
        253: ["DJ"],
        254: ["KE"],
        255: ["TZ"],
        256: ["UG"],
        257: ["BI"],
        258: ["MZ"],
        260: ["ZM"],
        261: ["MG"],
        262: ["RE", "YT"],
        263: ["ZW"],
        264: ["NA"],
        265: ["MW"],
        266: ["LS"],
        267: ["BW"],
        268: ["SZ"],
        269: ["KM"],
        290: ["SH", "TA"],
        291: ["ER"],
        297: ["AW"],
        298: ["FO"],
        299: ["GL"],
        350: ["GI"],
        351: ["PT"],
        352: ["LU"],
        353: ["IE"],
        354: ["IS"],
        355: ["AL"],
        356: ["MT"],
        357: ["CY"],
        358: ["FI", "AX"],
        359: ["BG"],
        370: ["LT"],
        371: ["LV"],
        372: ["EE"],
        373: ["MD"],
        374: ["AM"],
        375: ["BY"],
        376: ["AD"],
        377: ["MC"],
        378: ["SM"],
        380: ["UA"],
        381: ["RS"],
        382: ["ME"],
        383: ["XK"],
        385: ["HR"],
        386: ["SI"],
        387: ["BA"],
        389: ["MK"],
        420: ["CZ"],
        421: ["SK"],
        423: ["LI"],
        500: ["FK"],
        501: ["BZ"],
        502: ["GT"],
        503: ["SV"],
        504: ["HN"],
        505: ["NI"],
        506: ["CR"],
        507: ["PA"],
        508: ["PM"],
        509: ["HT"],
        590: ["GP", "BL", "MF"],
        591: ["BO"],
        592: ["GY"],
        593: ["EC"],
        594: ["GF"],
        595: ["PY"],
        596: ["MQ"],
        597: ["SR"],
        598: ["UY"],
        599: ["CW", "BQ"],
        670: ["TL"],
        672: ["NF"],
        673: ["BN"],
        674: ["NR"],
        675: ["PG"],
        676: ["TO"],
        677: ["SB"],
        678: ["VU"],
        679: ["FJ"],
        680: ["PW"],
        681: ["WF"],
        682: ["CK"],
        683: ["NU"],
        685: ["WS"],
        686: ["KI"],
        687: ["NC"],
        688: ["TV"],
        689: ["PF"],
        690: ["TK"],
        691: ["FM"],
        692: ["MH"],
        800: ["001"],
        808: ["001"],
        850: ["KP"],
        852: ["HK"],
        853: ["MO"],
        855: ["KH"],
        856: ["LA"],
        870: ["001"],
        878: ["001"],
        880: ["BD"],
        881: ["001"],
        882: ["001"],
        883: ["001"],
        886: ["TW"],
        888: ["001"],
        960: ["MV"],
        961: ["LB"],
        962: ["JO"],
        963: ["SY"],
        964: ["IQ"],
        965: ["KW"],
        966: ["SA"],
        967: ["YE"],
        968: ["OM"],
        970: ["PS"],
        971: ["AE"],
        972: ["IL"],
        973: ["BH"],
        974: ["QA"],
        975: ["BT"],
        976: ["MN"],
        977: ["NP"],
        979: ["001"],
        992: ["TJ"],
        993: ["TM"],
        994: ["AZ"],
        995: ["GE"],
        996: ["KG"],
        998: ["UZ"]
      };
      i18n.phonenumbers.metadata.countryToMetadata = {
        AC: [, [,, "(?:[01589]\\d|[46])\\d{4}",,,,,,, [5, 6]], [,, "6[2-467]\\d{3}",,,, "62889",,, [5]], [,, "4\\d{4}",,,, "40123",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AC", 247, "00",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "(?:0[1-9]|[1589]\\d)\\d{4}",,,, "542011",,, [6]],,, [,,,,,,,,, [-1]]],
        AD: [, [,, "(?:1|6\\d)\\d{7}|[135-9]\\d{5}",,,,,,, [6, 8, 9]], [,, "[78]\\d{5}",,,, "712345",,, [6]], [,, "690\\d{6}|[356]\\d{5}",,,, "312345",,, [6, 9]], [,, "180[02]\\d{4}",,,, "18001234",,, [8]], [,, "[19]\\d{5}",,,, "912345",,, [6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AD", 376, "00",,,,,,,, [[, "(\\d{3})(\\d{3})", "$1 $2", ["[135-9]"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["1"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]],, [,,,,,,,,, [-1]],,, [,, "1800\\d{4}",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AE: [, [,, "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, "[2-4679][2-8]\\d{6}",,,, "22345678",,, [8], [7]], [,, "5[024-68]\\d{7}",,,, "501234567",,, [9]], [,, "400\\d{6}|800\\d{2,9}",,,, "800123456"], [,, "900[02]\\d{5}",,,, "900234567",,, [9]], [,, "700[05]\\d{5}",,,, "700012345",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AE", 971, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2,9})", "$1 $2", ["60|8"]], [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[236]|[479][2-8]"], "0$1"], [, "(\\d{3})(\\d)(\\d{5})", "$1 $2 $3", ["[479]"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "600[25]\\d{5}",,,, "600212345",,, [9]],,, [,,,,,,,,, [-1]]],
        AF: [, [,, "[2-7]\\d{8}",,,,,,, [9], [7]], [,, "(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}",,,, "234567890",,,, [7]], [,, "7\\d{8}",,,, "701234567",,,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AF", 93, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[1-9]"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]], [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AG: [, [,, "(?:268|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}",,,, "2684601234",,,, [7]], [,, "268(?:464|7(?:1[3-9]|2\\d|3[246]|64|[78][0-689]))\\d{4}",,,, "2684641234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,, "26848[01]\\d{4}",,,, "2684801234",,,, [7]], "AG", 1, "011", "1",,, "1|([457]\\d{6})$", "268$1",,,,, [,, "26840[69]\\d{4}",,,, "2684061234",,,, [7]],, "268", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AI: [, [,, "(?:264|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "2644(?:6[12]|9[78])\\d{4}",,,, "2644612345",,,, [7]], [,, "264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}",,,, "2642351234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "AI", 1, "011", "1",,, "1|([2457]\\d{6})$", "264$1",,,,, [,,,,,,,,, [-1]],, "264", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AL: [, [,, "(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",,,,,,, [6, 7, 8, 9], [5]], [,, "(?:[2358](?:[16-9]\\d[2-9]|[2-5][2-9]\\d)|4(?:[2-57-9][2-9]|6\\d)\\d)\\d{4}",,,, "22345678",,, [8], [5, 6, 7]], [,, "6(?:[78][2-9]|9\\d)\\d{6}",,,, "672123456",,, [9]], [,, "800\\d{4}",,,, "8001234",,, [7]], [,, "900[1-9]\\d\\d",,,, "900123",,, [6]], [,, "808[1-9]\\d\\d",,,, "808123",,, [6]], [,, "700[2-9]\\d{4}",,,, "70021234",,, [8]], [,,,,,,,,, [-1]], "AL", 355, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3,4})", "$1 $2", ["80|9"], "0$1"], [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["4[2-6]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2358][2-5]|4"], "0$1"], [, "(\\d{3})(\\d{5})", "$1 $2", ["[23578]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AM: [, [,, "(?:[1-489]\\d|55|60|77)\\d{6}",,,,,,, [8], [5, 6]], [,, "(?:(?:1[0-25]|47)\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\d{5}",,,, "10123456",,,, [5, 6]], [,, "(?:33|4[1349]|55|77|88|9[13-9])\\d{6}",,,, "77123456"], [,, "800\\d{5}",,,, "80012345"], [,, "90[016]\\d{5}",,,, "90012345"], [,, "80[1-4]\\d{5}",,,, "80112345"], [,,,,,,,,, [-1]], [,, "60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\d|90)\\d{4}",,,, "60271234"], "AM", 374, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]0"], "0 $1"], [, "(\\d{3})(\\d{5})", "$1 $2", ["2|3[12]"], "(0$1)"], [, "(\\d{2})(\\d{6})", "$1 $2", ["1|47"], "(0$1)"], [, "(\\d{2})(\\d{6})", "$1 $2", ["[3-9]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AO: [, [,, "[29]\\d{8}",,,,,,, [9]], [,, "2\\d(?:[0134][25-9]|[25-9]\\d)\\d{5}",,,, "222123456"], [,, "9[1-49]\\d{7}",,,, "923123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AO", 244, "00",,,,,,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[29]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AR: [, [,, "11\\d{8}|(?:[2368]|9\\d)\\d{9}",,,,,,, [10, 11], [6, 7, 8]], [,, "(?:2954|3(?:777|865))[2-8]\\d{5}|3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\d{5}|(?:(?:11[1-8]|670)\\d|2(?:2(?:1[2-6]|3[3-6])|(?:3[06]|49)4|6(?:04|1[2-7]|4[4-6])|9(?:[17][4-6]|9[3-6]))|3(?:(?:36|64)4|4(?:1[2-7]|[235][4-6]|84)|5(?:1[2-8]|[38][4-6])|8(?:1[2-6]|[58][3-6]|7[24-6])))\\d{6}|(?:2(?:284|657|9(?:20|66))|3(?:4(?:8[27]|92)|755|878))[2-7]\\d{5}|(?:2(?:[28]0|37|6[36]|9[48])|3(?:62|7[069]|8[03]))[45]\\d{6}|(?:2(?:2(?:2[59]|44|52)|3(?:26|4[24])|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|(?:2(?:(?:26|62)2|3(?:02|2[03])|477|9(?:42|83))|3(?:4(?:[47]6|62|89)|5(?:41|64)|873))[2-6]\\d{5}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:329|4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])|888))[3-6]\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|[24]5|5[25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}",,,, "1123456789",,, [10], [6, 7, 8]], [,, "9(?:2954|3(?:777|865))[2-8]\\d{5}|93(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\d{5}|(?:675\\d|9(?:11[1-8]\\d|2(?:2(?:1[2-6]|3[3-6])|(?:3[06]|49)4|6(?:04|1[2-7]|4[4-6])|9(?:[17][4-6]|9[3-6]))|3(?:(?:36|64)4|4(?:1[2-7]|[235][4-6]|84)|5(?:1[2-8]|[38][4-6])|8(?:1[2-6]|[58][3-6]|7[24-6]))))\\d{6}|9(?:2(?:284|657|9(?:20|66))|3(?:4(?:8[27]|92)|755|878))[2-7]\\d{5}|9(?:2(?:[28]0|37|6[36]|9[48])|3(?:62|7[069]|8[03]))[45]\\d{6}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|4[24])|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|9(?:2(?:(?:26|62)2|3(?:02|2[03])|477|9(?:42|83))|3(?:4(?:[47]6|62|89)|5(?:41|64)|873))[2-6]\\d{5}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|9(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:329|4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])|888))[3-6]\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|[24]5|5[25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}",,,, "91123456789",,,, [6, 7, 8]], [,, "800\\d{7}",,,, "8001234567",,, [10]], [,, "60[04579]\\d{7}",,,, "6001234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AR", 54, "00", "0",,, "0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?", "9$1",,, [[, "(\\d{3})", "$1", ["[09]|1(?:[02]|1[02-5])"]], [, "(\\d{2})(\\d{4})", "$1-$2", ["[2-8]"]], [, "(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]], [, "(\\d{4})(\\d{4})", "$1-$2", ["2[0-8]|[3-8]"]], [, "(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])", "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1",, 1], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1",, 1], [, "(\\d)(\\d{4})(\\d{2})(\\d{4})", "$2 15-$3-$4", ["9(?:2[2-469]|3[3-578])", "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))", "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1"], [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 15-$3-$4", ["91"], "0$1"], [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 15-$3-$4", ["9"], "0$1"]], [[, "(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])", "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1",, 1], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1",, 1], [, "(\\d)(\\d{4})(\\d{2})(\\d{4})", "$1 $2 $3-$4", ["9(?:2[2-469]|3[3-578])", "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))", "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"]], [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3-$4", ["91"]], [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3-$4", ["9"]]], [,,,,,,,,, [-1]],,, [,, "810\\d{7}",,,,,,, [10]], [,, "810\\d{7}",,,, "8101234567",,, [10]],,, [,,,,,,,,, [-1]]],
        AS: [, [,, "(?:[58]\\d\\d|684|900)\\d{7}",,,,,,, [10], [7]], [,, "6846(?:22|33|44|55|77|88|9[19])\\d{4}",,,, "6846221234",,,, [7]], [,, "684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\d{4}",,,, "6847331234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "AS", 1, "011", "1",,, "1|([267]\\d{6})$", "684$1",,,,, [,,,,,,,,, [-1]],, "684", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AT: [, [,, "1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [3]], [,, "1(?:11\\d|[2-9]\\d{3,11})|(?:316|463|(?:51|66|73)2)\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-8]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{4,10}",,,, "1234567890",,,, [3]], [,, "6(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d{4,10}",,,, "664123456",,, [7, 8, 9, 10, 11, 12, 13]], [,, "800\\d{6,10}",,,, "800123456",,, [9, 10, 11, 12, 13]], [,, "9(?:0[01]|3[019])\\d{6,10}",,,, "900123456",,, [9, 10, 11, 12, 13]], [,, "8(?:10|2[018])\\d{6,10}|828\\d{5}",,,, "810123456",,, [8, 9, 10, 11, 12, 13]], [,,,,,,,,, [-1]], [,, "5(?:0[1-9]|17|[79]\\d)\\d{2,10}|7[28]0\\d{6,10}",,,, "780123456",,, [5, 6, 7, 8, 9, 10, 11, 12, 13]], "AT", 43, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"], [, "(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"], [, "(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"], [, "(\\d{6})", "$1", ["1"]], [, "(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"], [, "(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]], [[, "(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"], [, "(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"], [, "(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"], [, "(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"], [, "(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AU: [, [,, "1(?:[0-79]\\d{7,8}|8[0-24-9]\\d{7})|(?:[2-478]\\d\\d|550)\\d{6}|1\\d{4,7}",,,,,,, [5, 6, 7, 8, 9, 10]], [,, "(?:[237]\\d{5}|8(?:51(?:0(?:0[03-9]|[1247]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\d|4[0-4]))|(?:[6-8]\\d{3}|9(?:[02-9]\\d\\d|1(?:[0-57-9]\\d|6[0135-9])))\\d))\\d{3}",,,, "212345678",,, [9], [8]], [,, "483[0-3]\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-2457-9]|9[0-27-9])\\d{6}",,,, "412345678",,, [9]], [,, "180(?:0\\d{3}|2)\\d{3}",,,, "1800123456",,, [7, 10]], [,, "190[0-26]\\d{6}",,,, "1900123456",,, [10]], [,, "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}",,,, "1300123456",,, [6, 8, 10]], [,,,,,,,,, [-1]], [,, "(?:14(?:5(?:1[0458]|[23][458])|71\\d)|550\\d\\d)\\d{4}",,,, "550123456",,, [9]], "AU", 61, "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "0",,, "0|(183[12])",, "0011",, [[, "(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["13"]], [, "(\\d{3})(\\d{3})", "$1 $2", ["19"]], [, "(\\d{3})(\\d{4})", "$1 $2", ["180", "1802"]], [, "(\\d{4})(\\d{3,4})", "$1 $2", ["19"]], [, "(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|[45]"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)", "$CC ($1)"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]], [[, "(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|[45]"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)", "$CC ($1)"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]], [,, "16\\d{3,7}",,,, "1612345",,, [5, 6, 7, 8, 9]], 1,, [,, "1[38]00\\d{6}|1(?:345[0-4]|802)\\d{3}|13\\d{4}",,,,,,, [6, 7, 8, 10]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AW: [, [,, "(?:[25-79]\\d\\d|800)\\d{4}",,,,,,, [7]], [,, "5(?:2\\d|8[1-9])\\d{4}",,,, "5212345"], [,, "(?:290|5[69]\\d|6(?:[03]0|22|4[0-2]|[69]\\d)|7(?:[34]\\d|7[07])|9(?:6[45]|9[4-8]))\\d{4}",,,, "5601234"], [,, "800\\d{4}",,,, "8001234"], [,, "900\\d{4}",,,, "9001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "(?:28\\d|501)\\d{4}",,,, "5011234"], "AW", 297, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[25-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        AX: [, [,, "2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, "18[1-8]\\d{3,6}",,,, "181234567",,, [6, 7, 8, 9]], [,, "(?:4[0-8]|50)\\d{4,8}",,,, "412345678",,, [6, 7, 8, 9, 10]], [,, "800\\d{4,6}",,,, "800123456",,, [7, 8, 9]], [,, "[67]00\\d{5,6}",,,, "600123456",,, [8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AX", 358, "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "0",,, "0",, "00",,,, [,,,,,,,,, [-1]],, "18", [,,,,,,,,, [-1]], [,, "20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}",,,, "10112345"],,, [,,,,,,,,, [-1]]],
        AZ: [, [,, "365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",,,,,,, [9], [7]], [,, "365(?:[0-46-9]\\d|5[0-35-9])\\d{4}|(?:(?:1[28]|46)\\d|2(?:[045]2|1[24]|2[2-4]|33|6[23]))\\d{6}",,,, "123123456",,,, [7]], [,, "(?:36554|99[2-9]\\d\\d)\\d{4}|(?:[16]0|4[04]|5[015]|60|7[07])\\d{7}",,,, "401234567"], [,, "88\\d{7}",,,, "881234567"], [,, "900200\\d{3}",,,, "900200123"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "AZ", 994, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[1-9]"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[28]|2|365|46", "1[28]|2|365|46", "1[28]|2|365(?:[0-46-9]|5[0-35-9])|46"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]], [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[28]|2|365|46", "1[28]|2|365|46", "1[28]|2|365(?:[0-46-9]|5[0-35-9])|46"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BA: [, [,, "6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",,,,,,, [8, 9], [6]], [,, "(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\d{5}",,,, "30212345",,, [8], [6]], [,, "6040[0-4]\\d{4}|6(?:03|[1-356]|44|7\\d)\\d{6}",,,, "61123456"], [,, "8[08]\\d{6}",,,, "80123456",,, [8]], [,, "9[0246]\\d{6}",,,, "90123456",,, [8]], [,, "8[12]\\d{6}",,,, "82123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BA", 387, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})", "$1-$2", ["[2-9]"]], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]], [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "70(?:3[0146]|[56]0)\\d{4}",,,, "70341234",,, [8]],,, [,,,,,,,,, [-1]]],
        BB: [, [,, "(?:246|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7[35]7|9(?:1[89]|63))\\d{4}",,,, "2464123456",,,, [7]], [,, "246(?:2(?:[356]\\d|4[0-57-9]|8[0-79])|45\\d|69[5-7]|8(?:[2-5]\\d|83))\\d{4}",,,, "2462501234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "(?:246976|900[2-9]\\d\\d)\\d{4}",,,, "9002123456",,,, [7]], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,, "24631\\d{5}",,,, "2463101234",,,, [7]], "BB", 1, "011", "1",,, "1|([2-9]\\d{6})$", "246$1",,,,, [,,,,,,,,, [-1]],, "246", [,,,,,,,,, [-1]], [,, "246(?:292|367|4(?:1[7-9]|3[01]|44|67)|7(?:36|53))\\d{4}",,,, "2464301234",,,, [7]],,, [,,,,,,,,, [-1]]],
        BD: [, [,, "[13469]\\d{9}|8[0-79]\\d{7,8}|[2-7]\\d{8}|[2-9]\\d{7}|[3-689]\\d{6}|[57-9]\\d{5}",,,,,,, [6, 7, 8, 9, 10]], [,, "(?:3(?:03[56]|224)|4(?:22[25]|653))\\d{3,4}|(?:4(?:31\\d\\d|[46]23)|5(?:222|32[37]))\\d{3}(?:\\d{2})?|(?:3(?:42[47]|529|823)|4(?:027|525|658)|(?:56|73)2|6257|9[35]1)\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[01367]|7[15]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|8(?:4[12]|[5-7]2)|9(?:[024]2|81))\\d{4}|(?:2[45]\\d\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\d|[257]1|332|4(?:2[246]|5[25])|6(?:25|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[569]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\d|[3-589]1|6[12]|72[24])|8(?:0|217|3[12]|[5-7]1)|9[24]1)\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\d{5}|[59]1\\d{5}",,,, "27111234"], [,, "(?:1[13-9]\\d|644)\\d{7}|(?:3[78]|44|66)[02-9]\\d{7}",,,, "1812345678",,, [10]], [,, "80[03]\\d{7}",,,, "8001234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "96(?:0[469]|1[0-47]|3[389]|6[69]|7[78])\\d{6}",,,, "9604123456",,, [10]], "BD", 880, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{4,6})", "$1-$2", ["31[5-7]|[459]1"], "0$1"], [, "(\\d{3})(\\d{3,7})", "$1-$2", ["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"], "0$1"], [, "(\\d{4})(\\d{3,6})", "$1-$2", ["[13-9]"], "0$1"], [, "(\\d)(\\d{7,8})", "$1-$2", ["2"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BE: [, [,, "4\\d{8}|[1-9]\\d{7}",,,,,,, [8, 9]], [,, "80[2-8]\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\d{6}",,,, "12345678",,, [8]], [,, "4[5-9]\\d{7}",,,, "470123456",,, [9]], [,, "800[1-9]\\d{4}",,,, "80012345",,, [8]], [,, "(?:70(?:2[0-57]|3[0457]|44|69|7[0579])|90(?:0[0-35-8]|1[36]|2[0-3568]|3[0135689]|4[2-68]|5[1-68]|6[0-378]|7[23568]|9[34679]))\\d{4}",,,, "90012345",,, [8]], [,, "7879\\d{4}",,,, "78791234",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BE", 32, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:80|9)0"], "0$1"], [, "(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[239]|4[23]"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[15-8]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "78(?:0[57]|1[0458]|2[25]|3[15-8]|48|[56]0|7[078])\\d{4}",,,, "78102345",,, [8]],,, [,,,,,,,,, [-1]]],
        BF: [, [,, "[025-7]\\d{7}",,,,,,, [8]], [,, "2(?:0(?:49|5[23]|6[56]|9[016-9])|4(?:4[569]|5[4-6]|6[56]|7[0179])|5(?:[34]\\d|50|6[5-7]))\\d{4}",,,, "20491234"], [,, "(?:0[127]|5[1-8]|[67]\\d)\\d{6}",,,, "70123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BF", 226, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[025-7]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BG: [, [,, "[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",,,,,,, [6, 7, 8, 9], [4, 5]], [,, "2\\d{5,7}|(?:43[1-6]|70[1-9])\\d{4,5}|(?:[36]\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\d{5,6}",,,, "2123456",,, [6, 7, 8], [4, 5]], [,, "43[07-9]\\d{5}|(?:48|8[7-9]\\d|9(?:8\\d|9[69]))\\d{6}",,,, "48123456",,, [8, 9]], [,, "800\\d{5}",,,, "80012345",,, [8]], [,, "90\\d{6}",,,, "90123456",,, [8]], [,, "700\\d{5}",,,, "70012345",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BG", 359, "00", "0",,, "0",,,, [[, "(\\d{6})", "$1", ["1"]], [, "(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"], [, "(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"], [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]], [[, "(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"], [, "(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"], [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BH: [, [,, "[136-9]\\d{7}",,,,,,, [8]], [,, "(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|7[7-9]|88)|9[69][69])|7(?:1(?:11|78)|7\\d\\d))\\d{4}",,,, "17001234"], [,, "(?:3(?:[1-79]\\d|8[0-47-9])\\d|6(?:3(?:00|33|6[16])|6(?:3[03-9]|[69]\\d|7[0-6])))\\d{4}",,,, "36001234"], [,, "80\\d{6}",,,, "80123456"], [,, "(?:87|9[014578])\\d{6}",,,, "90123456"], [,, "84\\d{6}",,,, "84123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BH", 973, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[13679]|8[047]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BI: [, [,, "(?:[267]\\d|31)\\d{6}",,,,,,, [8]], [,, "22\\d{6}",,,, "22201234"], [,, "(?:29|31|6[1289]|7[125-9])\\d{6}",,,, "79561234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BI", 257, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2367]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BJ: [, [,, "(?:[2689]\\d|51)\\d{6}",,,,,,, [8]], [,, "2(?:02|1[037]|2[45]|3[68])\\d{5}",,,, "20211234"], [,, "(?:51|6\\d|9[013-9])\\d{6}",,,, "90011234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "857[58]\\d{4}",,,, "85751234"], "BJ", 229, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[25689]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "81\\d{6}",,,, "81123456"],,, [,,,,,,,,, [-1]]],
        BL: [, [,, "(?:590|69\\d|976)\\d{6}",,,,,,, [9]], [,, "590(?:2[7-9]|5[12]|87)\\d{4}",,,, "590271234"], [,, "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}",,,, "690001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "976[01]\\d{5}",,,, "976012345"], "BL", 590, "00", "0",,, "0",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BM: [, [,, "(?:441|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "441(?:2(?:02|23|[3479]\\d|61)|[46]\\d\\d|5(?:4\\d|60|89)|824)\\d{4}",,,, "4412345678",,,, [7]], [,, "441(?:[37]\\d|5[0-39])\\d{5}",,,, "4413701234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "BM", 1, "011", "1",,, "1|([2-8]\\d{6})$", "441$1",,,,, [,,,,,,,,, [-1]],, "441", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BN: [, [,, "[2-578]\\d{6}",,,,,,, [7]], [,, "22[0-7]\\d{4}|(?:2[013-9]|[34]\\d|5[0-25-9])\\d{5}",,,, "2345678"], [,, "(?:22[89]|[78]\\d\\d)\\d{4}",,,, "7123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "5[34]\\d{5}",,,, "5345678"], "BN", 673, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-578]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BO: [, [,, "(?:[2-467]\\d\\d|8001)\\d{5}",,,,,,, [8, 9], [7]], [,, "(?:2(?:2\\d\\d|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d\\d|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\d\\d|6(?:11|[24689]\\d|72)))\\d{4}",,,, "22123456",,, [8], [7]], [,, "[67]\\d{7}",,,, "71234567",,, [8]], [,, "8001[07]\\d{4}",,,, "800171234",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BO", 591, "00(?:1\\d)?", "0",,, "0(1\\d)?",,,, [[, "(\\d)(\\d{7})", "$1 $2", ["[23]|4[46]"],, "0$CC $1"], [, "(\\d{8})", "$1", ["[67]"],, "0$CC $1"], [, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["8"],, "0$CC $1"]],, [,,,,,,,,, [-1]],,, [,, "8001[07]\\d{4}",,,,,,, [9]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BQ: [, [,, "(?:[34]1|7\\d)\\d{5}",,,,,,, [7]], [,, "(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\d)\\d{3}",,,, "7151234"], [,, "(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}",,,, "3181234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BQ", 599, "00",,,,,,,,,, [,,,,,,,,, [-1]],, "[347]", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BR: [, [,, "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-24679]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}",,,,,,, [8, 9, 10, 11]], [,, "(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\d{7}",,,, "1123456789",,, [10], [8]], [,, "(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\d)\\d{7}",,,, "11961234567",,, [10, 11], [8, 9]], [,, "800\\d{6,7}",,,, "800123456",,, [9, 10]], [,, "300\\d{6}|[59]00\\d{6,7}",,,, "300123456",,, [9, 10]], [,, "300\\d{7}|[34]00\\d{5}|4(?:02|37)0\\d{4}",,,, "40041234",,, [8, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BR", 55, "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)", "0",,, "0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?", "$2",,, [[, "(\\d{3,6})", "$1", ["1(?:1[25-8]|2[357-9]|3[02-68]|4[12568]|5|6[0-8]|8[015]|9[0-47-9])|321|610"]], [, "(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]], [, "(\\d{4})(\\d{4})", "$1-$2", ["[2-57]", "[2357]|4(?:[0-24-9]|3(?:[0-689]|7[1-9]))"]], [, "(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"], [, "(\\d{5})(\\d{4})", "$1-$2", ["9"]], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"], "($1)", "0 $CC ($1)"], [, "(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)", "0 $CC ($1)"]], [[, "(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]], [, "(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"], "($1)", "0 $CC ($1)"], [, "(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)", "0 $CC ($1)"]], [,,,,,,,,, [-1]],,, [,, "4020\\d{4}|[34]00\\d{5}",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BS: [, [,, "(?:242|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}",,,, "2423456789",,,, [7]], [,, "242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\d|[89]9))\\d{4}",,,, "2423591234",,,, [7]], [,, "242300\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456",,,, [7]], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "BS", 1, "011", "1",,, "1|([3-8]\\d{6})$", "242$1",,,,, [,,,,,,,,, [-1]],, "242", [,,,,,,,,, [-1]], [,, "242225[0-46-9]\\d{3}",,,, "2422250123"],,, [,,,,,,,,, [-1]]],
        BT: [, [,, "[17]\\d{7}|[2-8]\\d{6}",,,,,,, [7, 8], [6]], [,, "(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}",,,, "2345678",,, [7], [6]], [,, "(?:1[67]|77)\\d{6}",,,, "17123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BT", 975, "00",,,,,,,, [[, "(\\d{3})(\\d{3})", "$1 $2", ["[2-7]"]], [, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]], [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BW: [, [,, "90\\d{5}|(?:[2-6]|7\\d)\\d{6}",,,,,,, [7, 8]], [,, "(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\d|7[013])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\d{4}",,,, "2401234",,, [7]], [,, "77200\\d{3}|7(?:[1-6]\\d|7[014-9])\\d{5}",,,, "71123456",,, [8]], [,,,,,,,,, [-1]], [,, "90\\d{5}",,,, "9012345",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "79(?:1(?:[01]\\d|20)|2[0-2]\\d)\\d{3}",,,, "79101234",,, [8]], "BW", 267, "00",,,,,,,, [[, "(\\d{2})(\\d{5})", "$1 $2", ["90"]], [, "(\\d{3})(\\d{4})", "$1 $2", ["[2-6]"]], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BY: [, [,, "(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",,,,,,, [6, 7, 8, 9, 10, 11], [5]], [,, "(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d\\d)|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}",,,, "152450911",,, [9], [5, 6, 7]], [,, "(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\d)\\d{6}",,,, "294911911",,, [9]], [,, "800\\d{3,7}|8(?:0[13]|20\\d)\\d{7}",,,, "8011234567"], [,, "(?:810|902)\\d{7}",,,, "9021234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "249\\d{6}",,,, "249123456",,, [9]], "BY", 375, "810", "8",,, "0|80?",, "8~10",, [[, "(\\d{3})(\\d{3})", "$1 $2", ["800"], "8 $1"], [, "(\\d{3})(\\d{2})(\\d{2,4})", "$1 $2 $3", ["800"], "8 $1"], [, "(\\d{4})(\\d{2})(\\d{3})", "$1 $2-$3", ["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])", "1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"], "8 0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["1(?:[56]|7[467])|2[1-3]"], "8 0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-4]"], "8 0$1"], [, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[89]"], "8 $1"]],, [,,,,,,,,, [-1]],,, [,, "800\\d{3,7}|(?:8(?:0[13]|10|20\\d)|902)\\d{7}"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        BZ: [, [,, "(?:0800\\d|[2-8])\\d{6}",,,,,,, [7, 11]], [,, "(?:236|732)\\d{4}|[2-578][02]\\d{5}",,,, "2221234",,, [7]], [,, "6[0-35-7]\\d{5}",,,, "6221234",,, [7]], [,, "0800\\d{7}",,,, "08001234123",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "BZ", 501, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]], [, "(\\d)(\\d{3})(\\d{4})(\\d{3})", "$1-$2-$3-$4", ["0"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CA: [, [,, "(?:[2-8]\\d|90)\\d{8}",,,,,,, [10], [7]], [,, "(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|6[57])|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47|72)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",,,, "5062345678",,,, [7]], [,, "(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|6[57])|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47|72)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}",,,, "5062345678",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\d{6}",,,, "5002345678"], [,, "600[2-9]\\d{6}",,,, "6002012345"], "CA", 1, "011", "1",,, "1",,, 1,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CC: [, [,, "1(?:[0-79]\\d|8[0-24-9])\\d{7}|(?:[148]\\d\\d|550)\\d{6}|1\\d{5,7}",,,,,,, [6, 7, 8, 9, 10]], [,, "8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}",,,, "891621234",,, [9], [8]], [,, "483[0-3]\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-2457-9]|9[0-27-9])\\d{6}",,,, "412345678",,, [9]], [,, "180(?:0\\d{3}|2)\\d{3}",,,, "1800123456",,, [7, 10]], [,, "190[0-26]\\d{6}",,,, "1900123456",,, [10]], [,, "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}",,,, "1300123456",,, [6, 8, 10]], [,,,,,,,,, [-1]], [,, "(?:14(?:5(?:1[0458]|[23][458])|71\\d)|550\\d\\d)\\d{4}",,,, "550123456",,, [9]], "CC", 61, "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "0",,, "0|([59]\\d{7})$", "8$1", "0011",,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CD: [, [,, "[189]\\d{8}|[1-68]\\d{6}",,,,,,, [7, 9]], [,, "12\\d{7}|[1-6]\\d{6}",,,, "1234567"], [,, "88\\d{5}|(?:8[0-2459]|9[017-9])\\d{7}",,,, "991234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CD", 243, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["88"], "0$1"], [, "(\\d{2})(\\d{5})", "$1 $2", ["[1-6]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CF: [, [,, "(?:[27]\\d{3}|8776)\\d{4}",,,,,,, [8]], [,, "2[12]\\d{6}",,,, "21612345"], [,, "7[0257]\\d{6}",,,, "70012345"], [,,,,,,,,, [-1]], [,, "8776\\d{4}",,,, "87761234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CF", 236, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[278]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CG: [, [,, "222\\d{6}|(?:0\\d|80)\\d{7}",,,,,,, [9]], [,, "222[1-589]\\d{5}",,,, "222123456"], [,, "0[14-6]\\d{7}",,,, "061234567"], [,,,,,,,,, [-1]], [,, "80(?:0\\d\\d|11[0-4])\\d{4}",,,, "800123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CG", 242, "00",,,,,,,, [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["801"]], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CH: [, [,, "8\\d{11}|[2-9]\\d{8}",,,,,,, [9, 12]], [,, "(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}",,,, "212345678",,, [9]], [,, "7[35-9]\\d{7}",,,, "781234567",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "90[016]\\d{6}",,,, "900123456",,, [9]], [,, "84[0248]\\d{6}",,,, "840123456",,, [9]], [,, "878\\d{6}",,,, "878123456",,, [9]], [,,,,,,,,, [-1]], "CH", 41, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8[047]|90"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-79]|81"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["8"], "0$1"]],, [,, "74[0248]\\d{6}",,,, "740123456",,, [9]],,, [,,,,,,,,, [-1]], [,, "5[18]\\d{7}",,,, "581234567",,, [9]],,, [,, "860\\d{9}",,,, "860123456789",,, [12]]],
        CI: [, [,, "[02-9]\\d{7}",,,,,,, [8]], [,, "(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\d{5}",,,, "21234567"], [,, "(?:2[0-3]80|97[0-3]\\d)\\d{4}|(?:0[1-9]|[457]\\d|6[014-9]|8[4-9]|95)\\d{6}",,,, "01234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CI", 225, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[02-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CK: [, [,, "[2-578]\\d{4}",,,,,,, [5]], [,, "(?:2\\d|3[13-7]|4[1-5])\\d{3}",,,, "21234"], [,, "[578]\\d{4}",,,, "71234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CK", 682, "00",,,,,,,, [[, "(\\d{2})(\\d{3})", "$1 $2", ["[2-578]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CL: [, [,, "12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",,,,,,, [9, 10, 11]], [,, "(?:2(?:1962|3(?:2\\d\\d|3(?:00|23)))|80[1-9]\\d\\d)\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2-9])\\d{7}",,,, "221234567",,, [9]], [,, "(?:2(?:1962|3(?:2\\d\\d|3(?:00|23)))|80[1-9]\\d\\d)\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2-9])\\d{7}",,,, "221234567",,, [9]], [,, "(?:123|8)00\\d{6}",,,, "800123456",,, [9, 11]], [,,,,,,,,, [-1]], [,, "600\\d{7,8}",,,, "6001234567",,, [10, 11]], [,,,,,,,,, [-1]], [,, "44\\d{7}",,,, "441234567",,, [9]], "CL", 56, "(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0",,,,,,, 1, [[, "(\\d{4})", "$1", ["1(?:[03-589]|21)|[29]0|78"]], [, "(\\d{5})(\\d{4})", "$1 $2", ["21"], "($1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[23]"], "($1)"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]], [[, "(\\d{5})(\\d{4})", "$1 $2", ["21"], "($1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[23]"], "($1)"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]], [,,,,,,,,, [-1]],,, [,, "600\\d{7,8}",,,,,,, [10, 11]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CM: [, [,, "(?:[26]\\d\\d|88)\\d{6}",,,,,,, [8, 9]], [,, "2(?:22|33)\\d{6}",,,, "222123456",,, [9]], [,, "(?:24[23]|6[5-9]\\d)\\d{6}",,,, "671234567",,, [9]], [,, "88\\d{6}",,,, "88012345",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CM", 237, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["88"]], [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CN: [, [,, "1[1279]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-68]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}",,,,,,, [7, 8, 9, 10, 11, 12], [5, 6]], [,, "(?:10(?:[02-79]\\d\\d|[18](?:0[1-9]|[1-9]\\d))|21(?:[18](?:0[1-9]|[1-9]\\d)|[2-79]\\d\\d))\\d{5}|(?:43[35]|754)\\d{7,8}|8(?:078\\d{7}|51\\d{7,8})|(?:10|(?:2|85)1|43[35]|754)(?:100\\d\\d|95\\d{3,4})|(?:2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\d{7}|1(?:0(?:0\\d\\d(?:\\d{3})?|[1-9]\\d{5})|[1-9]\\d{6})|9(?:[0-46-9]\\d{6}|5\\d{3}(?:\\d(?:\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[02-8]\\d{6}|1(?:0(?:0\\d\\d(?:\\d{2})?|[1-9]\\d{4})|[1-9]\\d{5})|9(?:[0-46-9]\\d{5}|5\\d{3,5}))",,,, "1012345678",,, [7, 8, 9, 10, 11], [5, 6]], [,, "1740[0-5]\\d{6}|1(?:[38]\\d|4[57]|5[0-35-9]|6[25-7]|7[0-35-8]|9[189])\\d{8}",,,, "13123456789",,, [11]], [,, "(?:(?:10|21)8|8)00\\d{7}",,,, "8001234567",,, [10, 12]], [,, "16[08]\\d{5}",,,, "16812345",,, [8]], [,, "400\\d{7}|950\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}",,,, "4001234567",,, [7, 8, 9, 10, 11], [5, 6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CN", 86, "00|1(?:[12]\\d|79|9[0235-7])\\d\\d00", "0",,, "0|(1(?:[12]\\d|79|9[0235-7])\\d\\d)",, "00",, [[, "(\\d{5,6})", "$1", ["96"]], [, "(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2[0-57-9])[19]", "(?:10|2[0-57-9])(?:10|9[56])", "(?:10|2[0-57-9])(?:100|9[56])"], "0$1", "$CC $1"], [, "(\\d{3})(\\d{4})", "$1 $2", ["[1-9]", "1[1-9]|26|[3-9]|(?:10|2[0-57-9])(?:[0-8]|9[0-47-9])", "1[1-9]|26|[3-9]|(?:10|2[0-57-9])(?:[02-8]|1(?:0[1-9]|[1-9])|9[0-47-9])"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["16[08]"]], [, "(\\d{3})(\\d{5,6})", "$1 $2", ["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]", "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]", "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])", "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"], "0$1", "$CC $1"], [, "(\\d{4})(\\d{4})", "$1 $2", ["[1-9]", "1[1-9]|26|[3-9]|(?:10|2[0-57-9])(?:[0-8]|9[0-47-9])", "26|3(?:[0268]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|90)|6(?:[0-24578]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|50|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9])|(?:34|85[23])[0-8]|(?:1|58)[1-9]|(?:63|95)[06-9]|(?:33|85[23]9)[0-46-9]|(?:10|2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[0-8]|9[0-47-9])", "26|3(?:[0268]|3[0-46-9]|4[0-8]|9[079])|4(?:[049]|2[02-68]|[35]0|6[0-356]|8[014-9])|5(?:0|2[0-24-689]|4[0-2457-9]|6[057-9]|90)|6(?:[0-24578]|3[06-9]|6[14-79]|9[03-9])|7(?:0[02-9]|2[0135-79]|3[23]|4[0-27-9]|6[1457]|8)|8(?:[046]|1[01459]|2[0-489]|5(?:0|[23](?:[02-8]|1[1-9]|9[0-46-9]))|8[0-2459]|9[09])|9(?:0[0457]|1[08]|[268]|4[024-9]|5[06-9])|(?:1|58|85[23]10)[1-9]|(?:10|2[0-57-9])(?:[0-8]|9[0-47-9])|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[02-8]|1(?:0[1-9]|[1-9])|9[0-47-9])"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|2(?:[02-57-9]|1[1-9])", "10|2(?:[02-57-9]|1[1-9])", "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{7,8})", "$1 $2", ["9"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"],, "$CC $1"], [, "(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1",, 1]], [[, "(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2[0-57-9])[19]", "(?:10|2[0-57-9])(?:10|9[56])", "(?:10|2[0-57-9])(?:100|9[56])"], "0$1", "$CC $1"], [, "(\\d{3})(\\d{5,6})", "$1 $2", ["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]", "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]", "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])", "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"], "0$1", "$CC $1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|2(?:[02-57-9]|1[1-9])", "10|2(?:[02-57-9]|1[1-9])", "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{7,8})", "$1 $2", ["9"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", "$CC $1", 1], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"],, "$CC $1"], [, "(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1",, 1]], [,,,,,,,,, [-1]],,, [,, "(?:(?:10|21)8|[48])00\\d{7}|950\\d{7,8}",,,,,,, [10, 11, 12]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CO: [, [,, "(?:1\\d|3)\\d{9}|[124-8]\\d{7}",,,,,,, [8, 10, 11], [7]], [,, "[124-8][2-9]\\d{6}",,,, "12345678",,, [8], [7]], [,, "3333(?:0(?:0\\d|1[0-5])|[4-9]\\d\\d)\\d{3}|33(?:00|3[0-24-9])\\d{6}|3(?:0[0-5]|1\\d|2[0-3]|5[01]|70)\\d{7}",,,, "3211234567",,, [10]], [,, "1800\\d{7}",,,, "18001234567",,, [11]], [,, "19(?:0[01]|4[78])\\d{7}",,,, "19001234567",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CO", 57, "00(?:4(?:[14]4|56)|[579])", "0",,, "0([3579]|4(?:[14]4|56))?",,,, [[, "(\\d)(\\d{7})", "$1 $2", ["[14][2-9]|[25-8]"], "($1)", "0$CC $1"], [, "(\\d{3})(\\d{7})", "$1 $2", ["3"],, "0$CC $1"], [, "(\\d)(\\d{3})(\\d{7})", "$1-$2-$3", ["1"], "0$1"]], [[, "(\\d)(\\d{7})", "$1 $2", ["[14][2-9]|[25-8]"], "($1)", "0$CC $1"], [, "(\\d{3})(\\d{7})", "$1 $2", ["3"],, "0$CC $1"], [, "(\\d)(\\d{3})(\\d{7})", "$1 $2 $3", ["1"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CR: [, [,, "(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",,,,,,, [8, 10]], [,, "210[7-9]\\d{4}|2(?:[024-7]\\d|1[1-9])\\d{5}",,,, "22123456",,, [8]], [,, "(?:3005\\d|6500[01])\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\d{6}",,,, "83123456",,, [8]], [,, "800\\d{7}",,,, "8001234567",,, [10]], [,, "90[059]\\d{7}",,,, "9001234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "(?:210[0-6]|4\\d{3}|5100)\\d{4}",,,, "40001234",,, [8]], "CR", 506, "00",,,, "(19(?:0[0-2468]|1[09]|20|66|77|99))",,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[3-9]"],, "$CC $1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[89]"],, "$CC $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CU: [, [,, "[27]\\d{6,7}|[34]\\d{5,7}|(?:5|8\\d\\d)\\d{7}",,,,,,, [6, 7, 8, 10], [4, 5]], [,, "(?:3[23]|48)\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\d)\\d{6}|(?:2[1-4]|4[1257]|7\\d)\\d{5,6}",,,, "71234567",,,, [4, 5]], [,, "5\\d{7}",,,, "51234567",,, [8]], [,, "800\\d{7}",,,, "8001234567",,, [10]], [,,,,,,,,, [-1]], [,, "807\\d{7}",,,, "8071234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CU", 53, "119", "0",,, "0",,,, [[, "(\\d{2})(\\d{4,6})", "$1 $2", ["2[1-4]|[34]"], "(0$1)"], [, "(\\d)(\\d{6,7})", "$1 $2", ["7"], "(0$1)"], [, "(\\d)(\\d{7})", "$1 $2", ["5"], "0$1"], [, "(\\d{3})(\\d{7})", "$1 $2", ["8"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CV: [, [,, "(?:[2-59]\\d\\d|800)\\d{4}",,,,,,, [7]], [,, "2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}",,,, "2211234"], [,, "(?:[34][36]|5[1-389]|9\\d)\\d{5}",,,, "9911234"], [,, "800\\d{4}",,,, "8001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CV", 238, "0",,,,,,,, [[, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2-589]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CW: [, [,, "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",,,,,,, [7, 8]], [,, "9(?:4(?:3[0-5]|4[14]|6\\d)|50\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\d|7[01]|8[57-9]))\\d{4}",,,, "94351234"], [,, "953[01]\\d{4}|9(?:5[12467]|6[5-9])\\d{5}",,,, "95181234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "60[0-2]\\d{4}",,,, "6001234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "CW", 599, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[3467]"]], [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["9[4-8]"]]],, [,, "955\\d{5}",,,, "95581234",,, [8]], 1, "[69]", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CX: [, [,, "1(?:[0-79]\\d|8[0-24-9])\\d{7}|(?:[148]\\d\\d|550)\\d{6}|1\\d{5,7}",,,,,,, [6, 7, 8, 9, 10]], [,, "8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}",,,, "891641234",,, [9], [8]], [,, "483[0-3]\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-2457-9]|9[0-27-9])\\d{6}",,,, "412345678",,, [9]], [,, "180(?:0\\d{3}|2)\\d{3}",,,, "1800123456",,, [7, 10]], [,, "190[0-26]\\d{6}",,,, "1900123456",,, [10]], [,, "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}",,,, "1300123456",,, [6, 8, 10]], [,,,,,,,,, [-1]], [,, "(?:14(?:5(?:1[0458]|[23][458])|71\\d)|550\\d\\d)\\d{4}",,,, "550123456",,, [9]], "CX", 61, "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "0",,, "0|([59]\\d{7})$", "8$1", "0011",,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        CY: [, [,, "(?:[279]\\d|[58]0)\\d{6}",,,,,,, [8]], [,, "2[2-6]\\d{6}",,,, "22345678"], [,, "9[4-79]\\d{6}",,,, "96123456"], [,, "800\\d{5}",,,, "80001234"], [,, "90[09]\\d{5}",,,, "90012345"], [,, "80[1-9]\\d{5}",,,, "80112345"], [,, "700\\d{5}",,,, "70012345"], [,,,,,,,,, [-1]], "CY", 357, "00",,,,,,,, [[, "(\\d{2})(\\d{6})", "$1 $2", ["[257-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "(?:50|77)\\d{6}",,,, "77123456"],,, [,,,,,,,,, [-1]]],
        CZ: [, [,, "(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",,,,,,, [9, 10, 11, 12]], [,, "(?:2\\d|3[1257-9]|4[16-9]|5[13-9])\\d{7}",,,, "212345678",,, [9]], [,, "(?:60[1-8]|7(?:0[2-5]|[2379]\\d))\\d{6}",,,, "601123456",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "9(?:0[05689]|76)\\d{6}",,,, "900123456",,, [9]], [,, "8[134]\\d{7}",,,, "811234567",,, [9]], [,, "70[01]\\d{6}",,,, "700123456",,, [9]], [,, "9[17]0\\d{6}",,,, "910123456",,, [9]], "CZ", 420, "00",,,,,,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]|9[015-7]"]], [, "(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]], [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "9(?:5\\d|7[2-4])\\d{6}",,,, "972123456",,, [9]],,, [,, "9(?:3\\d{9}|6\\d{7,10})",,,, "93123456789"]],
        DE: [, [,, "[2579]\\d{5,14}|49(?:[05]\\d{10}|[46][1-8]\\d{4,9})|49(?:[0-25]\\d|3[1-689]|7[1-7])\\d{4,8}|49(?:[0-2579]\\d|[34][1-9]|6[0-8])\\d{3}|49\\d{3,4}|(?:1|[368]\\d|4[0-8])\\d{3,13}",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2, 3]], [,, "(?:32|49[4-6]\\d)\\d{9}|49[0-7]\\d{3,9}|(?:[34]0|[68]9)\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\d|[589][0-7]|6[0-8]|7[0-467]))\\d{3,12}",,,, "30123456",,, [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [2, 3, 4]], [,, "15[0-25-9]\\d{8}|1(?:6[023]|7\\d)\\d{7,8}",,,, "15123456789",,, [10, 11]], [,, "800\\d{7,12}",,,, "8001234567890",,, [10, 11, 12, 13, 14, 15]], [,, "(?:137[7-9]|900(?:[135]|9\\d))\\d{6}",,,, "9001234567",,, [10, 11]], [,, "180\\d{5,11}|13(?:7[1-6]\\d\\d|8)\\d{4}",,,, "18012345",,, [7, 8, 9, 10, 11, 12, 13, 14]], [,, "700\\d{8}",,,, "70012345678",,, [11]], [,,,,,,,,, [-1]], "DE", 49, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3,13})", "$1 $2", ["3[02]|40|[68]9"], "0$1"], [, "(\\d{3})(\\d{3,12})", "$1 $2", ["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1", "2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"], "0$1"], [, "(\\d{4})(\\d{2,11})", "$1 $2", ["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]", "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"], "0$1"], [, "(\\d{3})(\\d{4})", "$1 $2", ["138"], "0$1"], [, "(\\d{5})(\\d{2,10})", "$1 $2", ["3"], "0$1"], [, "(\\d{3})(\\d{5,11})", "$1 $2", ["181"], "0$1"], [, "(\\d{3})(\\d)(\\d{4,10})", "$1 $2 $3", ["1(?:3|80)|9"], "0$1"], [, "(\\d{3})(\\d{7,8})", "$1 $2", ["1[67]"], "0$1"], [, "(\\d{3})(\\d{7,12})", "$1 $2", ["8"], "0$1"], [, "(\\d{5})(\\d{6})", "$1 $2", ["185", "1850", "18500"], "0$1"], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"], [, "(\\d{4})(\\d{7})", "$1 $2", ["18[68]"], "0$1"], [, "(\\d{5})(\\d{6})", "$1 $2", ["15[0568]"], "0$1"], [, "(\\d{4})(\\d{7})", "$1 $2", ["15[1279]"], "0$1"], [, "(\\d{3})(\\d{8})", "$1 $2", ["18"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{7,8})", "$1 $2 $3", ["1(?:6[023]|7)"], "0$1"], [, "(\\d{4})(\\d{2})(\\d{7})", "$1 $2 $3", ["15[279]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{8})", "$1 $2 $3", ["15"], "0$1"]],, [,, "16(?:4\\d{1,10}|[89]\\d{1,11})",,,, "16412345",,, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]],,, [,,,,,,,,, [-1]], [,, "18(?:1\\d{5,11}|[2-9]\\d{8})",,,, "18500123456",,, [8, 9, 10, 11, 12, 13, 14]],,, [,, "1(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\d{7,8}|15(?:(?:[03-68]00|113)\\d|2\\d55|7\\d99|9\\d33)\\d{7}",,,, "177991234567",,, [12, 13]]],
        DJ: [, [,, "(?:2\\d|77)\\d{6}",,,,,,, [8]], [,, "2(?:1[2-5]|7[45])\\d{5}",,,, "21360003"], [,, "77\\d{6}",,,, "77831001"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "DJ", 253, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[27]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        DK: [, [,, "[2-9]\\d{7}",,,,,,, [8]], [,, "(?:[2-7]\\d|8[126-9]|9[1-46-9])\\d{6}",,,, "32123456"], [,, "(?:[2-7]\\d|8[126-9]|9[1-46-9])\\d{6}",,,, "32123456"], [,, "80\\d{6}",,,, "80123456"], [,, "90\\d{6}",,,, "90123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "DK", 45, "00",,,,,,, 1, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        DM: [, [,, "(?:[58]\\d\\d|767|900)\\d{7}",,,,,,, [10], [7]], [,, "767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\d{4}",,,, "7674201234",,,, [7]], [,, "767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-7])\\d{4}",,,, "7672251234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "DM", 1, "011", "1",,, "1|([2-7]\\d{6})$", "767$1",,,,, [,,,,,,,,, [-1]],, "767", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        DO: [, [,, "(?:[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "8(?:[04]9[2-9]\\d\\d|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d\\d|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\d{4}",,,, "8092345678",,,, [7]], [,, "8[024]9[2-9]\\d{6}",,,, "8092345678",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "DO", 1, "011", "1",,, "1",,,,,, [,,,,,,,,, [-1]],, "8[024]9", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        DZ: [, [,, "(?:[1-4]|[5-79]\\d|80)\\d{7}",,,,,,, [8, 9]], [,, "9619\\d{5}|(?:1\\d|2[013-79]|3[0-8]|4[0135689])\\d{6}",,,, "12345678"], [,, "(?:5(?:4[0-29]|5\\d|6[01])|6(?:[569]\\d|7[0-6])|7[7-9]\\d)\\d{6}",,,, "551234567",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "80[3-689]1\\d{5}",,,, "808123456",,, [9]], [,, "80[12]1\\d{5}",,,, "801123456",,, [9]], [,,,,,,,,, [-1]], [,, "98[23]\\d{6}",,,, "983123456",,, [9]], "DZ", 213, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-4]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-8]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        EC: [, [,, "1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",,,,,,, [8, 9, 10, 11], [7]], [,, "[2-7][2-7]\\d{6}",,,, "22123456",,, [8], [7]], [,, "964[0-2]\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\d)\\d{6}",,,, "991234567",,, [9]], [,, "1800\\d{7}|1[78]00\\d{6}",,,, "18001234567",,, [10, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "[2-7]890\\d{4}",,,, "28901234",,, [8]], "EC", 593, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{4})", "$1-$2", ["[2-7]"]], [, "(\\d)(\\d{3})(\\d{4})", "$1 $2-$3", ["[2-7]"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]], [[, "(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-7]"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        EE: [, [,, "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",,,,,,, [7, 8, 10]], [,, "(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}",,,, "3212345",,, [7]], [,, "5(?:[0-35-9]\\d{6}|4(?:[0-57-9]\\d{5}|6(?:[0-24-9]\\d{4}|3(?:[0-35-9]\\d{3}|4000))))|8(?:1(?:0(?:000|[3-9]\\d\\d)|(?:1(?:0[236]|1\\d)|(?:23|[3-79]\\d)\\d)\\d)|2(?:0(?:000|(?:19|[24-7]\\d)\\d)|(?:(?:[124-6]\\d|3[5-9]|8[2-4])\\d|7(?:[679]\\d|8[13-9]))\\d)|[349]\\d{4})\\d\\d|5(?:(?:[02]\\d|5[0-478])\\d|1(?:[0-8]\\d|95)|6(?:4[0-4]|5[1-589]))\\d{3}",,,, "51234567",,, [7, 8]], [,, "800(?:(?:0\\d\\d|1)\\d|[2-9])\\d{3}",,,, "80012345"], [,, "(?:40\\d\\d|900)\\d{4}",,,, "9001234",,, [7, 8]], [,,,,,,,,, [-1]], [,, "70[0-2]\\d{5}",,,, "70012345",,, [8]], [,,,,,,,,, [-1]], "EE", 372, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88", "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]], [, "(\\d{4})(\\d{3,4})", "$1 $2", ["[45]|8(?:00|[1-49])", "[45]|8(?:00[1-9]|[1-49])"]], [, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["7"]], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]],, [,,,,,,,,, [-1]],,, [,, "800[2-9]\\d{3}",,,,,,, [7]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        EG: [, [,, "[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",,,,,,, [8, 9, 10], [6, 7]], [,, "13[23]\\d{6}|(?:15|57)\\d{6,7}|(?:2[2-4]|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\d{7}",,,, "234567890",,, [8, 9], [6, 7]], [,, "1[0-25]\\d{8}",,,, "1001234567",,, [10]], [,, "800\\d{7}",,,, "8001234567",,, [10]], [,, "900\\d{7}",,,, "9001234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "EG", 20, "00", "0",,, "0",,,, [[, "(\\d)(\\d{7,8})", "$1 $2", ["[23]"], "0$1"], [, "(\\d{2})(\\d{6,7})", "$1 $2", ["1[35]|[4-6]|8[2468]|9[235-7]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[189]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        EH: [, [,, "[5-8]\\d{8}",,,,,,, [9]], [,, "528[89]\\d{5}",,,, "528812345"], [,, "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[016-8]|6[1267]|7[0-27]))\\d{6}",,,, "650123456"], [,, "80\\d{7}",,,, "801234567"], [,, "89\\d{7}",,,, "891234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "592(?:4[0-2]|93)\\d{4}",,,, "592401234"], "EH", 212, "00", "0",,, "0",,,,,, [,,,,,,,,, [-1]],, "528[89]", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        ER: [, [,, "[178]\\d{6}",,,,,,, [7], [6]], [,, "(?:1(?:1[12568]|[24]0|55|6[146])|8\\d\\d)\\d{4}",,,, "8370362",,,, [6]], [,, "(?:17[1-3]|7\\d\\d)\\d{4}",,,, "7123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "ER", 291, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[178]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        ES: [, [,, "(?:51|[6-9]\\d)\\d{7}",,,,,,, [9]], [,, "96906(?:0[0-8]|1[1-9]|[2-9]\\d)\\d\\d|9(?:69(?:0[0-57-9]|[1-9]\\d)|73(?:[0-8]\\d|9[1-9]))\\d{4}|(?:8(?:[1356]\\d|[28][0-8]|[47][1-9])|9(?:[135]\\d|[268][0-8]|4[1-9]|7[124-9]))\\d{6}",,,, "810123456"], [,, "9(?:6906(?:09|10)|7390\\d\\d)\\d\\d|(?:6\\d|7[1-48])\\d{7}",,,, "612345678"], [,, "[89]00\\d{6}",,,, "800123456"], [,, "80[367]\\d{6}",,,, "803123456"], [,, "90[12]\\d{6}",,,, "901123456"], [,, "70\\d{7}",,,, "701234567"], [,,,,,,,,, [-1]], "ES", 34, "00",,,,,,,, [[, "(\\d{4})", "$1", ["905"]], [, "(\\d{6})", "$1", ["[79]9"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]], [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "51\\d{7}",,,, "511234567"],,, [,,,,,,,,, [-1]]],
        ET: [, [,, "(?:11|[2-59]\\d)\\d{7}",,,,,,, [9], [7]], [,, "116671\\d{3}|(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:1[78]|2[69]|39|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}",,,, "111112345",,,, [7]], [,, "9\\d{8}",,,, "911234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "ET", 251, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-59]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        FI: [, [,, "[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",,,,,,, [5, 6, 7, 8, 9, 10, 11, 12]], [,, "(?:1[3-79][1-8]|[235689][1-8]\\d)\\d{2,6}",,,, "131234567",,, [5, 6, 7, 8, 9]], [,, "(?:4[0-8]|50)\\d{4,8}",,,, "412345678",,, [6, 7, 8, 9, 10]], [,, "800\\d{4,6}",,,, "800123456",,, [7, 8, 9]], [,, "[67]00\\d{5,6}",,,, "600123456",,, [8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "FI", 358, "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "0",,, "0",, "00",, [[, "(\\d{5})", "$1", ["75[12]"], "0$1"], [, "(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"], [, "(\\d{6})", "$1", ["11"]], [, "(\\d{3})(\\d{3,7})", "$1 $2", ["[12]00|[368]|70[07-9]"], "0$1"], [, "(\\d{2})(\\d{4,8})", "$1 $2", ["[1245]|7[135]"], "0$1"], [, "(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"]], [[, "(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"], [, "(\\d{3})(\\d{3,7})", "$1 $2", ["[12]00|[368]|70[07-9]"], "0$1"], [, "(\\d{2})(\\d{4,8})", "$1 $2", ["[1245]|7[135]"], "0$1"], [, "(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"]], [,,,,,,,,, [-1]], 1, "1[03-79]|[2-9]", [,, "20(?:2[023]|9[89])\\d{1,6}|(?:60[12]\\d|7099)\\d{4,5}|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:[1-3]00|7(?:0[1-5]\\d\\d|5[03-9]))\\d{3,7}"], [,, "20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}",,,, "10112345"],,, [,,,,,,,,, [-1]]],
        FJ: [, [,, "45\\d{5}|(?:0800\\d|[235-9])\\d{6}",,,,,,, [7, 11]], [,, "603\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\d{5}",,,, "3212345",,, [7]], [,, "(?:[279]\\d|45|5[01568]|8[034679])\\d{5}",,,, "7012345",,, [7]], [,, "0800\\d{7}",,,, "08001234567",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "FJ", 679, "0(?:0|52)",,,,,, "00",, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[235-9]|45"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        FK: [, [,, "[2-7]\\d{4}",,,,,,, [5]], [,, "[2-47]\\d{4}",,,, "31234"], [,, "[56]\\d{4}",,,, "51234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "FK", 500, "00",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        FM: [, [,, "(?:[39]\\d\\d|820)\\d{4}",,,,,,, [7]], [,, "31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\d)\\d)\\d{3}",,,, "3201234"], [,, "31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\d)\\d)\\d{3}",,,, "3501234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "FM", 691, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[389]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        FO: [, [,, "(?:[2-8]\\d|90)\\d{4}",,,,,,, [6]], [,, "(?:20|[34]\\d|8[19])\\d{4}",,,, "201234"], [,, "(?:[27][1-9]|5\\d)\\d{4}",,,, "211234"], [,, "80[257-9]\\d{3}",,,, "802123"], [,, "90(?:[13-5][15-7]|2[125-7]|9\\d)\\d\\d",,,, "901123"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "(?:6[0-36]|88)\\d{4}",,,, "601234"], "FO", 298, "00",,,, "(10(?:01|[12]0|88))",,,, [[, "(\\d{6})", "$1", ["[2-9]"],, "$CC $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        FR: [, [,, "[1-9]\\d{8}",,,,,,, [9]], [,, "(?:[1-35]\\d|4[1-9])\\d{7}",,,, "123456789"], [,, "700\\d{6}|(?:6\\d|7[3-9])\\d{7}",,,, "612345678"], [,, "80[0-5]\\d{6}",,,, "801234567"], [,, "836(?:0[0-36-9]|[1-9]\\d)\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\d|8[0-35-9])\\d{6}",,,, "891123456"], [,, "8(?:1[01]|2[0156]|84)\\d{6}",,,, "884012345"], [,,,,,,,,, [-1]], [,, "9\\d{8}",,,, "912345678"], "FR", 33, "00", "0",,, "0",,,, [[, "(\\d{4})", "$1", ["10"]], [, "(\\d{3})(\\d{3})", "$1 $2", ["1"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"], [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]], [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"], [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "80[6-9]\\d{6}",,,, "806123456"],,, [,,,,,,,,, [-1]]],
        GA: [, [,, "(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",,,,,,, [7, 8]], [,, "[01]1\\d{6}",,,, "01441234",,, [8]], [,, "(?:0[2-7]|6[256]|7[47])\\d{6}|[2-7]\\d{6}",,,, "06031234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GA", 241, "00",,,, "0(11\\d{6}|6[256]\\d{6}|7[47]\\d{6})", "$1",,, [[, "(\\d)(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["11|[67]"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GB: [, [,, "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",,,,,,, [7, 9, 10], [4, 5, 6, 8]], [,, "(?:1(?:(?:1(?:3[0-58]|4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])|3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d\\d|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d\\d|1(?:[0-7]\\d\\d|80[04589])))|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}",,,, "1212345678",,, [9, 10], [4, 5, 6, 7, 8]], [,, "7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}",,,, "7400123456",,, [10]], [,, "80[08]\\d{7}|800\\d{6}|8001111",,,, "8001234567"], [,, "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d",,,, "9012345678",,, [7, 10]], [,,,,,,,,, [-1]], [,, "70\\d{8}",,,, "7012345678",,, [10]], [,, "56\\d{8}",,,, "5612345678",,, [10]], "GB", 44, "00", "0", " x",, "0",,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["800", "8001", "80011", "800111", "8001111"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["845", "8454", "84546", "845464"], "0$1"], [, "(\\d{3})(\\d{6})", "$1 $2", ["800"], "0$1"], [, "(\\d{5})(\\d{4,5})", "$1 $2", ["1(?:38|5[23]|69|76|94)", "1(?:(?:38|69)7|5(?:24|39)|768|946)", "1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"], "0$1"], [, "(\\d{4})(\\d{5,6})", "$1 $2", ["1(?:[2-69][02-9]|[78])"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[25]|7(?:0|6[02-9])", "[25]|7(?:0|6(?:[03-9]|2[356]))"], "0$1"], [, "(\\d{4})(\\d{6})", "$1 $2", ["7"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1389]"], "0$1"]],, [,, "76(?:0[0-2]|2[356]|34|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}",,,, "7640123456",,, [10]], 1,, [,,,,,,,,, [-1]], [,, "(?:3[0347]|55)\\d{8}",,,, "5512345678",,, [10]],,, [,,,,,,,,, [-1]]],
        GD: [, [,, "(?:473|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}",,,, "4732691234",,,, [7]], [,, "473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\d{4}",,,, "4734031234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "GD", 1, "011", "1",,, "1|([2-9]\\d{6})$", "473$1",,,,, [,,,,,,,,, [-1]],, "473", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GE: [, [,, "(?:[3-57]\\d\\d|800)\\d{6}",,,,,,, [9], [6, 7]], [,, "(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}",,,, "322123456",,,, [6, 7]], [,, "5(?:0555[5-9]|757(?:7[7-9]|8[01]))\\d{3}|5(?:000\\d|(?:52|75)00|8(?:58[89]|888))\\d{4}|5(?:0050|1111|2222|3333)[0-4]\\d{3}|(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\d{6}",,,, "555123456"], [,, "800\\d{6}",,,, "800123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "706\\d{6}",,,, "706123456"], "GE", 995, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["32"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[57]"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[348]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,, "706\\d{6}"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GF: [, [,, "(?:[56]94|976)\\d{6}",,,,,,, [9]], [,, "594(?:[023]\\d|1[01]|4[03-9]|5[6-9]|6[0-3]|80|9[014])\\d{4}",,,, "594101234"], [,, "694(?:[0-249]\\d|3[0-48])\\d{4}",,,, "694201234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "976\\d{6}",,,, "976012345"], "GF", 594, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GG: [, [,, "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",,,,,,, [7, 9, 10], [6]], [,, "1481[25-9]\\d{5}",,,, "1481256789",,, [10], [6]], [,, "7(?:(?:781|839)\\d|911[17])\\d{5}",,,, "7781123456",,, [10]], [,, "80[08]\\d{7}|800\\d{6}|8001111",,,, "8001234567"], [,, "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d",,,, "9012345678",,, [7, 10]], [,,,,,,,,, [-1]], [,, "70\\d{8}",,,, "7012345678",,, [10]], [,, "56\\d{8}",,,, "5612345678",,, [10]], "GG", 44, "00", "0",,, "0|([25-9]\\d{5})$", "1481$1",,,,, [,, "76(?:0[0-2]|2[356]|34|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}",,,, "7640123456",,, [10]],,, [,,,,,,,,, [-1]], [,, "(?:3[0347]|55)\\d{8}",,,, "5512345678",,, [10]],,, [,,,,,,,,, [-1]]],
        GH: [, [,, "(?:[235]\\d{3}|800)\\d{5}",,,,,,, [8, 9], [7]], [,, "3(?:[167]2[0-6]|22[0-5]|32[0-3]|4(?:2[013-9]|3[01])|52[0-7]|82[0-2])\\d{5}|3(?:[0-8]8|9[28])0\\d{5}|3(?:0[237]|[1-9]7)\\d{6}",,,, "302345678",,, [9], [7]], [,, "(?:2[0346-8]\\d|5(?:[0457]\\d|6[01]|9[1-6]))\\d{6}",,,, "231234567",,, [9]], [,, "800\\d{5}",,,, "80012345",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GH", 233, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[237]|80"]], [, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]], [[, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]], [,,,,,,,,, [-1]],,, [,, "800\\d{5}",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GI: [, [,, "[256]\\d{7}",,,,,,, [8]], [,, "21(?:6[24-7]\\d|90[0-2])\\d{3}|2(?:00|2[25])\\d{5}",,,, "20012345"], [,, "(?:5[146-8]\\d|6(?:06|29))\\d{5}",,,, "57123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GI", 350, "00",,,,,,,, [[, "(\\d{3})(\\d{5})", "$1 $2", ["2"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GL: [, [,, "(?:19|[2-689]\\d)\\d{4}",,,,,,, [6]], [,, "(?:19|3[1-7]|6[14689]|8[14-79]|9\\d)\\d{4}",,,, "321000"], [,, "[245]\\d{5}",,,, "221234"], [,, "80\\d{4}",,,, "801234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "3[89]\\d{4}",,,, "381234"], "GL", 299, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["19|[2-689]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GM: [, [,, "[2-9]\\d{6}",,,,,,, [7]], [,, "(?:4(?:[23]\\d\\d|4(?:1[024679]|[6-9]\\d))|5(?:5(?:3\\d|4[0-7])|6[67]\\d|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}",,,, "5661234"], [,, "(?:[23679]\\d|5[0-389])\\d{5}",,,, "3012345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GM", 220, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GN: [, [,, "722\\d{6}|(?:3|6\\d)\\d{7}",,,,,,, [8, 9]], [,, "3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\d\\d)\\d{4}",,,, "30241234",,, [8]], [,, "6[02356]\\d{7}",,,, "601123456",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "722\\d{6}",,,, "722123456",,, [9]], "GN", 224, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["3"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[67]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GP: [, [,, "(?:590|69\\d|976)\\d{6}",,,,,,, [9]], [,, "590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\d)\\d{4}",,,, "590201234"], [,, "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}",,,, "690001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "976[01]\\d{5}",,,, "976012345"], "GP", 590, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GQ: [, [,, "222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",,,,,,, [9]], [,, "33[0-24-9]\\d[46]\\d{4}|3(?:33|5\\d)\\d[7-9]\\d{4}",,,, "333091234"], [,, "(?:222|55[015])\\d{6}",,,, "222123456"], [,, "80\\d[1-9]\\d{5}",,,, "800123456"], [,, "90\\d[1-9]\\d{5}",,,, "900123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GQ", 240, "00",,,,,,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235]"]], [, "(\\d{3})(\\d{6})", "$1 $2", ["[89]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GR: [, [,, "5005000\\d{3}|(?:[2689]\\d|70)\\d{8}",,,,,,, [10]], [,, "2(?:1\\d\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}",,,, "2123456789"], [,, "68[57-9]\\d{7}|(?:69|94)\\d{8}",,,, "6912345678"], [,, "800\\d{7}",,,, "8001234567"], [,, "90[19]\\d{7}",,,, "9091234567"], [,, "8(?:0[16]|12|25)\\d{7}",,,, "8011234567"], [,, "70\\d{8}",,,, "7012345678"], [,,,,,,,,, [-1]], "GR", 30, "00",,,,,,,, [[, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["21|7"]], [, "(\\d{4})(\\d{6})", "$1 $2", ["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2689]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "5005000\\d{3}",,,, "5005000123"],,, [,,,,,,,,, [-1]]],
        GT: [, [,, "(?:1\\d{3}|[2-7])\\d{7}",,,,,,, [8, 11]], [,, "[267][2-9]\\d{6}",,,, "22456789",,, [8]], [,, "[3-5]\\d{7}",,,, "51234567",,, [8]], [,, "18[01]\\d{8}",,,, "18001112222",,, [11]], [,, "19\\d{9}",,,, "19001112222",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GT", 502, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GU: [, [,, "(?:[58]\\d\\d|671|900)\\d{7}",,,,,,, [10], [7]], [,, "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}",,,, "6713001234",,,, [7]], [,, "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}",,,, "6713001234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "GU", 1, "011", "1",,, "1|([3-9]\\d{6})$", "671$1",, 1,,, [,,,,,,,,, [-1]],, "671", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GW: [, [,, "[49]\\d{8}|4\\d{6}",,,,,,, [7, 9]], [,, "443\\d{6}",,,, "443201234",,, [9]], [,, "9(?:5\\d|6[569]|77)\\d{6}",,,, "955012345",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "40\\d{5}",,,, "4012345",,, [7]], "GW", 245, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["40"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        GY: [, [,, "(?:862\\d|9008)\\d{3}|(?:[2-46]\\d|77)\\d{5}",,,,,,, [7]], [,, "(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-24-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|77[1-57])\\d{4}",,,, "2201234"], [,, "6\\d{6}",,,, "6091234"], [,, "(?:289|862)\\d{4}",,,, "2891234"], [,, "9008\\d{3}",,,, "9008123"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "GY", 592, "001",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-46-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        HK: [, [,, "8[0-46-9]\\d{6,7}|9\\d{4}(?:\\d(?:\\d(?:\\d{4})?)?)?|(?:[235-79]\\d|46)\\d{6}",,,,,,, [5, 6, 7, 8, 9, 11]], [,, "(?:384[0-24]|58(?:0[1-8]|1[2-9]))\\d{4}|(?:2(?:[13-8]\\d|2[013-9]|9[0-24-9])|3(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69]|89))\\d{5}",,,, "21234567",,, [8]], [,, "(?:46(?:0[0-6]|1[0-2]|4[0-57-9])|5730|(?:626|848)[01]|707[1-5]|929[03-9])\\d{4}|(?:5(?:[1-59][0-46-9]|6[0-4689]|7[0-2469])|6(?:0[1-9]|[13-59]\\d|[268][0-57-9]|7[0-79])|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\d))\\d{5}",,,, "51234567",,, [8]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "900(?:[0-24-9]\\d{7}|3\\d{1,4})",,,, "90012345678",,, [5, 6, 7, 8, 11]], [,,,,,,,,, [-1]], [,, "8(?:1[0-4679]\\d|2(?:[0-36]\\d|7[0-4])|3(?:[034]\\d|2[09]|70))\\d{4}",,,, "81123456",,, [8]], [,,,,,,,,, [-1]], "HK", 852, "00(?:30|5[09]|[126-9]?)",,,,,, "00",, [[, "(\\d{3})(\\d{2,5})", "$1 $2", ["900", "9003"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]], [, "(\\d{3})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]],, [,, "7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[136])|2(?:[02389]\\d|1[18]|7[27-9])|3(?:[0-38]\\d|7[0-369]|9[2357-9])|47\\d|5(?:[178]\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\d)|7(?:[27]\\d|8[7-9])|8(?:[23689]\\d|7[1-9])|9(?:[025]\\d|6[0-246-8]|7[0-36-9]|8[238]))\\d{4}",,,, "71123456",,, [8]],,, [,,,,,,,,, [-1]], [,, "30(?:0[1-9]|[15-7]\\d|2[047]|89)\\d{4}",,,, "30161234",,, [8]],,, [,,,,,,,,, [-1]]],
        HN: [, [,, "8\\d{10}|[237-9]\\d{7}",,,,,,, [8, 11]], [,, "2(?:2(?:0[019]|1[1-36]|[23]\\d|4[04-6]|5[57]|6[24]|7[0135689]|8[01346-9]|9[0-2])|4(?:07|2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:0[78]|16|4[03-5]|5\\d|6[014-6]|74|80)|6(?:[056]\\d|17|2[07]|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\d{4}",,,, "22123456",,, [8]], [,, "[37-9]\\d{7}",,,, "91234567",,, [8]], [,, "8002\\d{7}",,,, "80021234567",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "HN", 504, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]]], [[, "(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]]], [,,,,,,,,, [-1]],,, [,, "8002\\d{7}",,,,,,, [11]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        HR: [, [,, "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}",,,,,,, [6, 7, 8, 9]], [,, "1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}",,,, "12345678",,, [8, 9], [6, 7]], [,, "9(?:751\\d{5}|8\\d{6,7})|9(?:0[1-9]|[1259]\\d|7[0679])\\d{6}",,,, "921234567",,, [8, 9]], [,, "80[01]\\d{4,6}",,,, "800123456",,, [7, 8, 9]], [,, "6[01459]\\d{6}|6[01]\\d{4,5}",,,, "611234",,, [6, 7, 8]], [,,,,,,,,, [-1]], [,, "7[45]\\d{6}",,,, "74123456",,, [8]], [,,,,,,,,, [-1]], "HR", 385, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["6[01]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["8"], "0$1"], [, "(\\d)(\\d{4})(\\d{3})", "$1 $2 $3", ["1"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[67]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-5]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "62\\d{6,7}|72\\d{6}",,,, "62123456",,, [8, 9]],,, [,,,,,,,,, [-1]]],
        HT: [, [,, "[2-489]\\d{7}",,,,,,, [8]], [,, "2(?:2\\d|5[1-5]|81|9[149])\\d{5}",,,, "22453300"], [,, "[34]\\d{7}",,,, "34101234"], [,, "8\\d{7}",,,, "80012345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "9(?:[67][0-4]|8[0-3589]|9\\d)\\d{5}",,,, "98901234"], "HT", 509, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[2-489]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        HU: [, [,, "[2357]\\d{8}|[1-9]\\d{7}",,,,,,, [8, 9], [6, 7]], [,, "(?:1\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\d{6}",,,, "12345678",,, [8], [6, 7]], [,, "(?:[257]0|3[01])\\d{7}",,,, "201234567",,, [9]], [,, "[48]0\\d{6}",,,, "80123456",,, [8]], [,, "9[01]\\d{6}",,,, "90123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "21\\d{7}",,,, "211234567",,, [9]], "HU", 36, "00", "06",,, "06",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "(06 $1)"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"], "(06 $1)"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-57-9]"], "06 $1"]],, [,,,,,,,,, [-1]],,, [,, "[48]0\\d{6}",,,,,,, [8]], [,, "38\\d{7}",,,, "381234567",,, [9]],,, [,,,,,,,,, [-1]]],
        ID: [, [,, "(?:(?:007803|8\\d{4})\\d|[1-36])\\d{6}|[1-9]\\d{8,10}|[2-9]\\d{7}",,,,,,, [7, 8, 9, 10, 11, 12, 13], [5, 6]], [,, "2[124]\\d{7,8}|619\\d{8}|2(?:1(?:14|500)|2\\d{3})\\d{3}|61\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}",,,, "218350123",,, [7, 8, 9, 10, 11], [5, 6]], [,, "8[1-35-9]\\d{7,10}",,,, "812345678",,, [9, 10, 11, 12]], [,, "007803\\d{7}|(?:177\\d|800)\\d{5,7}",,,, "8001234567",,, [8, 9, 10, 11, 13]], [,, "809\\d{7}",,,, "8091234567",,, [10]], [,, "804\\d{7}",,,, "8041234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "ID", 62, "00[189]", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]], [, "(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"], [, "(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"], [, "(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"], [, "(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"], [, "(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"], [, "(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"], [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]]], [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]], [, "(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"], [, "(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"], [, "(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"], [, "(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"], [, "(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"], [, "(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"], [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"]], [,,,,,,,,, [-1]],,, [,, "(?:007803\\d|8071)\\d{6}",,,,,,, [10, 13]], [,, "(?:1500|8071\\d{3})\\d{3}",,,, "8071123456",,, [7, 10]],,, [,,,,,,,,, [-1]]],
        IE: [, [,, "(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",,,,,,, [7, 8, 9, 10], [5, 6]], [,, "(?:1\\d|21)\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\d|7)|5(?:0[45]|1\\d|8)|6(?:1\\d|[237-9])|9(?:1\\d|[35-9]))\\d{5}|(?:23|4(?:[1-469]|8\\d)|5[23679]|6[4-6]|7[14]|9[04])\\d{7}",,,, "2212345",,,, [5, 6]], [,, "8(?:22|[35-9]\\d)\\d{6}",,,, "850123456",,, [9]], [,, "1800\\d{6}",,,, "1800123456",,, [10]], [,, "15(?:1[2-8]|[2-8]0|9[089])\\d{6}",,,, "1520123456",,, [10]], [,, "18[59]0\\d{6}",,,, "1850123456",,, [10]], [,, "700\\d{6}",,,, "700123456",,, [9]], [,, "76\\d{7}",,,, "761234567",,, [9]], "IE", 353, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{5})", "$1 $2", ["2[24-9]|47|58|6[237-9]|9[35-9]"], "(0$1)"], [, "(\\d{3})(\\d{5})", "$1 $2", ["[45]0"], "(0$1)"], [, "(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2569]|4[1-69]|7[14]"], "(0$1)"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["81"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[78]"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["4"], "(0$1)"], [, "(\\d{2})(\\d)(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["8"], "0$1"]],, [,,,,,,,,, [-1]],,, [,, "18[59]0\\d{6}",,,,,,, [10]], [,, "818\\d{6}",,,, "818123456",,, [9]],,, [,, "88210[1-9]\\d{4}|8(?:[35-79]5\\d\\d|8(?:[013-9]\\d\\d|2(?:[01][1-9]|[2-9]\\d)))\\d{5}",,,, "8551234567",,, [10]]],
        IL: [, [,, "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",,,,,,, [7, 8, 9, 10, 11, 12]], [,, "153\\d{8,9}|29[1-9]\\d{5}|(?:2[0-8]|[3489]\\d)\\d{6}",,,, "21234567",,, [8, 11, 12], [7]], [,, "5(?:(?:[02368]\\d|[19][2-9]|4[1-9])\\d|5(?:01|1[79]|2[2-7]|3[23]|44|5[05689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\d{5}",,,, "502345678",,, [9]], [,, "1(?:255|80[019]\\d{3})\\d{3}",,,, "1800123456",,, [7, 10]], [,, "1212\\d{4}|1(?:200|9(?:0[01]|19))\\d{6}",,,, "1919123456",,, [8, 10]], [,, "1700\\d{6}",,,, "1700123456",,, [10]], [,,,,,,,,, [-1]], [,, "78(?:33|55|77|81)\\d{5}|7(?:18|2[23]|3[237]|47|6[58]|7\\d|82|9[235-9])\\d{6}",,,, "771234567",,, [9]], "IL", 972, "0(?:0|1[2-9])", "0",,, "0",,,, [[, "(\\d{4})(\\d{3})", "$1-$2", ["125"]], [, "(\\d{4})(\\d{2})(\\d{2})", "$1-$2-$3", ["121"]], [, "(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-489]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1-$2-$3", ["12"]], [, "(\\d{4})(\\d{6})", "$1-$2", ["159"]], [, "(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3-$4", ["1[7-9]"]], [, "(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})", "$1-$2 $3-$4", ["15"]]],, [,,,,,,,,, [-1]],,, [,, "1700\\d{6}",,,,,,, [10]], [,, "1599\\d{6}",,,, "1599123456",,, [10]],,, [,, "151\\d{8,9}",,,, "15112340000",,, [11, 12]]],
        IM: [, [,, "1624\\d{6}|(?:[3578]\\d|90)\\d{8}",,,,,,, [10], [6]], [,, "1624[5-8]\\d{5}",,,, "1624756789",,,, [6]], [,, "76245[06]\\d{4}|7(?:4576|[59]24\\d|624[0-4689])\\d{5}",,,, "7924123456"], [,, "808162\\d{4}",,,, "8081624567"], [,, "8(?:440[49]06|72299\\d)\\d{3}|(?:8(?:45|70)|90[0167])624\\d{4}",,,, "9016247890"], [,,,,,,,,, [-1]], [,, "70\\d{8}",,,, "7012345678"], [,, "56\\d{8}",,,, "5612345678"], "IM", 44, "00", "0",,, "0|([5-8]\\d{5})$", "1624$1",,,,, [,,,,,,,,, [-1]],, "74576|(?:16|7[56])24", [,,,,,,,,, [-1]], [,, "3440[49]06\\d{3}|(?:3(?:08162|3\\d{4}|45624|7(?:0624|2299))|55\\d{4})\\d{4}",,,, "5512345678"],,, [,,,,,,,,, [-1]]],
        IN: [, [,, "(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",,,,,,, [8, 9, 10, 11, 12, 13], [6, 7]], [,, "2717(?:[2-7]\\d|95)\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\d|4(?:20[24]|72[2-8])|552[1-7])\\d{6}|(?:11|33|4[04]|80)[2-7]\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\d)\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\d[2-7]\\d{5}",,,, "7410410123",,, [10], [6, 7, 8]], [,, "(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\d|7[02-8])\\d{5}|(?:6(?:[09]\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\d\\d)\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\d|7(?:[235689]\\d|4[0189]))|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]|881))[0189]\\d{5}",,,, "8123456789",,, [10]], [,, "000800\\d{7}|1(?:600\\d{6}|80(?:0\\d{4,9}|3\\d{9}))",,,, "1800123456"], [,, "186[12]\\d{9}",,,, "1861123456789",,, [13]], [,, "1860\\d{7}",,,, "18603451234",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "IN", 91, "00", "0",,, "0",,,, [[, "(\\d{7})", "$1", ["575"]], [, "(\\d{8})", "$1", ["5(?:0|2[23]|3[03]|[67]1|88)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],,, 1], [, "(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"],,, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"],,, 1], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"], "0$1",, 1], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"], "0$1",, 1], [, "(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1",, 1], [, "(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"],,, 1], [, "(\\d{3})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]], [, "(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"],,, 1]], [[, "(\\d{8})", "$1", ["5(?:0|2[23]|3[03]|[67]1|88)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"],,, 1], [, "(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"],,, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"],,, 1], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"], "0$1",, 1], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"], "0$1",, 1], [, "(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1",, 1], [, "(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"],,, 1], [, "(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"],,, 1]], [,,,,,,,,, [-1]],,, [,, "1(?:600\\d{6}|800\\d{4,9})|(?:000800|18(?:03\\d\\d|6(?:0|[12]\\d\\d)))\\d{7}"], [,, "140\\d{7}",,,, "1409305260",,, [10]],,, [,,,,,,,,, [-1]]],
        IO: [, [,, "3\\d{6}",,,,,,, [7]], [,, "37\\d{5}",,,, "3709100"], [,, "38\\d{5}",,,, "3801234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "IO", 246, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["3"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        IQ: [, [,, "(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",,,,,,, [8, 9, 10], [6, 7]], [,, "1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}",,,, "12345678",,, [8, 9], [6, 7]], [,, "7[3-9]\\d{8}",,,, "7912345678",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "IQ", 964, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-6]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        IR: [, [,, "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",,,,,,, [4, 5, 6, 7, 10], [8]], [,, "(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\d{7}|[16]\\d{3}(?:\\d{4})?|[289]\\d{3}(?:\\d(?:\\d{3})?)?)|94(?:000[09]|2(?:121|[2689]0\\d)|30[0-2]\\d|4(?:111|40\\d))\\d{4}",,,, "2123456789",,, [6, 7, 10], [4, 5, 8]], [,, "9(?:(?:0(?:[1-35]\\d|44)|(?:[13]\\d|2[0-2])\\d)\\d|9(?:(?:[0-2]\\d|44)\\d|5[15]0|8(?:1\\d|88)|9(?:0[013]|1[0134]|21|77|9[6-9])))\\d{5}",,,, "9123456789",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "993\\d{7}",,,, "9932123456",,, [10]], "IR", 98, "00", "0",,, "0",,,, [[, "(\\d{4,5})", "$1", ["96"], "0$1"], [, "(\\d{2})(\\d{4,5})", "$1 $2", ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[1-8]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,, "9(?:4440\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))",,,,,,, [4, 5, 10]], [,, "96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])",,,, "9601",,, [4, 5]],,, [,,,,,,,,, [-1]]],
        IS: [, [,, "(?:38\\d|[4-9])\\d{6}",,,,,,, [7, 9]], [,, "(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\d{4}",,,, "4101234",,, [7]], [,, "(?:38[589]\\d\\d|6(?:1[1-8]|2[0-6]|3[027-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\d)|7(?:5[057]|[6-9]\\d)|8(?:2[0-59]|[3-69]\\d|8[28]))\\d{4}",,,, "6111234"], [,, "80[08]\\d{4}",,,, "8001234",,, [7]], [,, "90(?:0\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\d{3}",,,, "9001234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "49[0-24-79]\\d{4}",,,, "4921234",,, [7]], "IS", 354, "00|1(?:0(?:01|[12]0)|100)",,,,,, "00",, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[4-9]"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["3"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "809\\d{4}",,,, "8091234",,, [7]],,, [,, "(?:689|8(?:7[18]|80)|95[48])\\d{4}",,,, "6891234",,, [7]]],
        IT: [, [,, "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",,,,,,, [6, 7, 8, 9, 10, 11, 12]], [,, "0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}",,,, "0212345678",,, [6, 7, 8, 9, 10, 11]], [,, "3[1-9]\\d{8}|3[2-9]\\d{7}",,,, "3123456789",,, [9, 10]], [,, "80(?:0\\d{3}|3)\\d{3}",,,, "800123456",,, [6, 9]], [,, "(?:0878\\d\\d|89(?:2|4[5-9]\\d))\\d{3}|89[45][0-4]\\d\\d|(?:1(?:44|6[346])|89(?:5[5-9]|9))\\d{6}",,,, "899123456",,, [6, 8, 9, 10]], [,, "84(?:[08]\\d{3}|[17])\\d{3}",,,, "848123456",,, [6, 9]], [,, "1(?:78\\d|99)\\d{6}",,,, "1781234567",,, [9, 10]], [,, "55\\d{8}",,,, "5512345678",,, [10]], "IT", 39, "00",,,,,,,, [[, "(\\d{4,5})", "$1", ["1(?:0|9[246])", "1(?:0|9(?:2[2-9]|[46]))"]], [, "(\\d{6})", "$1", ["1(?:1|92)"]], [, "(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]], [, "(\\d{3})(\\d{3,6})", "$1 $2", ["0[13-57-9][0159]|8(?:03|4[17]|9[245])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]], [, "(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["894"]], [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1[4679]|[38]"]], [, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]"]], [, "(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]], [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]], [[, "(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]], [, "(\\d{3})(\\d{3,6})", "$1 $2", ["0[13-57-9][0159]|8(?:03|4[17]|9[245])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]], [, "(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["894"]], [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1[4679]|[38]"]], [, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]"]], [, "(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]], [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]], [,,,,,,,,, [-1]], 1,, [,, "848\\d{6}",,,,,,, [9]], [,,,,,,,,, [-1]],,, [,, "3[2-8]\\d{9,10}",,,, "33101234501",,, [11, 12]]],
        JE: [, [,, "1534\\d{6}|(?:[3578]\\d|90)\\d{8}",,,,,,, [10], [6]], [,, "1534[0-24-8]\\d{5}",,,, "1534456789",,,, [6]], [,, "7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}",,,, "7797712345"], [,, "80(?:07(?:35|81)|8901)\\d{4}",,,, "8007354567"], [,, "(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}",,,, "9018105678"], [,,,,,,,,, [-1]], [,, "701511\\d{4}",,,, "7015115678"], [,, "56\\d{8}",,,, "5612345678"], "JE", 44, "00", "0",,, "0|([0-24-8]\\d{5})$", "1534$1",,,,, [,, "76(?:0[0-2]|2[356]|34|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}",,,, "7640123456"],,, [,,,,,,,,, [-1]], [,, "(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}",,,, "5512345678"],,, [,,,,,,,,, [-1]]],
        JM: [, [,, "(?:[58]\\d\\d|658|900)\\d{7}",,,,,,, [10], [7]], [,, "(?:658(?:2(?:[0-8]\\d|9[0-46-9])|[3-9]\\d\\d)|876(?:5(?:02|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[0237-9]|[23]\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468])))\\d{4}",,,, "8765230123",,,, [7]], [,, "(?:658295|876(?:(?:2[14-9]|[348]\\d)\\d|5(?:0[13-9]|17|[2-57-9]\\d|6[0-24-9])|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\d{4}",,,, "8762101234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "JM", 1, "011", "1",,, "1",,,,,, [,,,,,,,,, [-1]],, "658|876", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        JO: [, [,, "900\\d{5}|(?:(?:[268]|7\\d)\\d|32|53)\\d{6}",,,,,,, [8, 9]], [,, "(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:[029]0|7[08]))\\d{4}",,,, "62001234",,, [8]], [,, "7(?:55[0-49]|(?:7[025-9]|8[0-25-9]|9\\d)\\d)\\d{5}",,,, "790123456",,, [9]], [,, "80\\d{6}",,,, "80012345",,, [8]], [,, "900\\d{5}",,,, "90012345",,, [8]], [,, "85\\d{6}",,,, "85012345",,, [8]], [,, "70\\d{7}",,,, "700123456",,, [9]], [,,,,,,,,, [-1]], "JO", 962, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2356]|87"], "(0$1)"], [, "(\\d{3})(\\d{5,6})", "$1 $2", ["[89]"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["70"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]],, [,, "74(?:66|77)\\d{5}",,,, "746612345",,, [9]],,, [,,,,,,,,, [-1]], [,, "8(?:10|8\\d)\\d{5}",,,, "88101234",,, [8]],,, [,,,,,,,,, [-1]]],
        JP: [, [,, "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",,,,,,, [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [,, "(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\d|4(?:[2-578]\\d|6[02-8]|9[2-59])|5(?:[2-589]\\d|6[1-9]|7[2-8])|7(?:[25-9]\\d|3[4-9]|4[02-9])|8(?:[2679]\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\d|[679][1-9]))\\d{6}",,,, "312345678",,, [9]], [,, "[7-9]0[1-9]\\d{7}",,,, "9012345678",,, [10]], [,, "00(?:(?:37|66)\\d{6,13}|(?:777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)\\d\\d)|(?:120|800\\d)\\d{6}",,,, "120123456"], [,, "990\\d{6}",,,, "990123456",,, [9]], [,,,,,,,,, [-1]], [,, "60\\d{7}",,,, "601234567",,, [9]], [,, "50[1-9]\\d{7}",,,, "5012345678",,, [10]], "JP", 81, "010", "0",,, "0",,,, [[, "(\\d{4})(\\d{4})", "$1-$2", ["007", "0077", "00777", "00777[01]"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"], [, "(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[279]|49|6[0-24-689]|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|6(?:[0-24]|5[0-3589]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:47[59]|59[89]|8(?:6[68]|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3[3-8]|5[2-9])", "[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3(?:[3-6][2-9]|7|8[2-5])|5[2-9])"], "0$1"], [, "(\\d{4})(\\d{2})(\\d{3,4})", "$1-$2-$3", ["007"]], [, "(\\d{4})(\\d{2})(\\d{4})", "$1-$2-$3", ["008"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[2579]|80"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3,4})", "$1-$2-$3", ["0"]], [, "(\\d{4})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["0"]], [, "(\\d{4})(\\d{5})(\\d{5,6})", "$1-$2-$3", ["0"]], [, "(\\d{4})(\\d{6})(\\d{6,7})", "$1-$2-$3", ["0"]]], [[, "(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"], [, "(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[279]|49|6[0-24-689]|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|6(?:[0-24]|5[0-3589]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:47[59]|59[89]|8(?:6[68]|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[0468][01]|[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|2[01]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|6(?:[0-24]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3[3-8]|5[2-9])", "[14]|[29][2-9]|5[3-9]|7[2-4679]|8(?:[246-9]|3(?:[3-6][2-9]|7|8[2-5])|5[2-9])"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[2579]|80"], "0$1"]], [,, "20\\d{8}",,,, "2012345678",,, [10]],,, [,, "00(?:777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)\\d\\d|00(?:37|66)\\d{6,13}"], [,, "570\\d{6}",,,, "570123456",,, [9]],,, [,,,,,,,,, [-1]]],
        KE: [, [,, "(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",,,,,,, [7, 8, 9, 10]], [,, "(?:4[245]|5[2-79]|6[01457-9])\\d{5,7}|(?:4[136]|5[08]|62)\\d{7}|(?:[24]0|51|66)\\d{6,7}",,,, "202012345",,, [7, 8, 9]], [,, "(?:1(?:0[0-2]|1[01])|7\\d\\d)\\d{6}",,,, "712123456",,, [9]], [,, "800[24-8]\\d{5,6}",,,, "800223456",,, [9, 10]], [,, "900[02-9]\\d{5}",,,, "900223456",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "KE", 254, "000", "0",,, "0",,,, [[, "(\\d{2})(\\d{5,7})", "$1 $2", ["[24-6]"], "0$1"], [, "(\\d{3})(\\d{6})", "$1 $2", ["[17]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KG: [, [,, "8\\d{9}|(?:[235-8]\\d|99)\\d{7}",,,,,,, [9, 10], [5, 6]], [,, "312(?:5[0-79]\\d|9(?:[0-689]\\d|7[0-24-9]))\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}",,,, "312123456",,, [9], [5, 6]], [,, "(?:312(?:58\\d|973)|8801\\d\\d)\\d{3}|(?:2(?:0[0-35]|2\\d)|5[0-24-7]\\d|7(?:[07]\\d|55)|99[05-9])\\d{6}",,,, "700123456",,, [9]], [,, "800\\d{6,7}",,,, "800123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "KG", 996, "00", "0",,, "0",,,, [[, "(\\d{4})(\\d{5})", "$1 $2", ["3(?:1[346]|[24-79])"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235-79]|88"], "0$1"], [, "(\\d{3})(\\d{3})(\\d)(\\d{2,3})", "$1 $2 $3 $4", ["8"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KH: [, [,, "1\\d{9}|[1-9]\\d{7,8}",,,,,,, [8, 9, 10], [6, 7]], [,, "23(?:4(?:[2-4]|[56]\\d)|[568]\\d\\d)\\d{4}|23[236-9]\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\d)\\d{5}|6\\d{5,6})",,,, "23756789",,, [8, 9], [6, 7]], [,, "(?:(?:1[28]|3[18]|9[67])\\d|6[016-9]|7(?:[07-9]|[16]\\d)|8(?:[013-79]|8\\d))\\d{6}|(?:1\\d|9[0-57-9])\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\d{5}",,,, "91234567",,, [8, 9]], [,, "1800(?:1\\d|2[019])\\d{4}",,,, "1800123456",,, [10]], [,, "1900(?:1\\d|2[09])\\d{4}",,,, "1900123456",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "KH", 855, "00[14-9]", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-9]"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KI: [, [,, "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",,,,,,, [5, 8]], [,, "(?:[24]\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\d\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\d{3}",,,, "31234"], [,, "(?:63\\d{3}|73(?:0[0-5]\\d|140))\\d{3}|[67]200[01]\\d{3}",,,, "72001234",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "30(?:0[01]\\d\\d|12(?:11|20))\\d\\d",,,, "30010000",,, [8]], "KI", 686, "00", "0",,, "0",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KM: [, [,, "[3478]\\d{6}",,,,,,, [7], [4]], [,, "7[4-7]\\d{5}",,,, "7712345",,,, [4]], [,, "[34]\\d{6}",,,, "3212345"], [,,,,,,,,, [-1]], [,, "8\\d{6}",,,, "8001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "KM", 269, "00",,,,,,,, [[, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[3478]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KN: [, [,, "(?:[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\d{4}",,,, "8692361234",,,, [7]], [,, "869(?:5(?:5[6-8]|6[5-7])|66\\d|76[02-7])\\d{4}",,,, "8697652917",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "KN", 1, "011", "1",,, "1|([2-7]\\d{6})$", "869$1",,,,, [,,,,,,,,, [-1]],, "869", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KP: [, [,, "85\\d{6}|(?:19\\d|2)\\d{7}",,,,,,, [8, 10], [6, 7]], [,, "(?:2\\d|85)\\d{6}",,,, "21234567",,, [8], [6, 7]], [,, "19[1-3]\\d{7}",,,, "1921234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "KP", 850, "00|99", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"], [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"]],, [,,,,,,,,, [-1]],,, [,, "238[02-9]\\d{4}|2(?:[0-24-9]\\d|3[0-79])\\d{5}",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KR: [, [,, "00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",,,,,,, [5, 6, 8, 9, 10, 11, 12, 13, 14], [3, 4, 7]], [,, "(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\d{2,3}",,,, "22123456",,, [5, 6, 8, 9, 10], [3, 4, 7]], [,, "1(?:05(?:[0-8]\\d|9[0-5])|22[13]\\d)\\d{4,5}|1(?:0[1-46-9]|[16-9]\\d|2[013-9])\\d{6,7}",,,, "1020000000",,, [9, 10]], [,, "00(?:308\\d{6,7}|798\\d{7,9})|(?:00368|80)\\d{7}",,,, "801234567",,, [9, 11, 12, 13, 14]], [,, "60[2-9]\\d{6}",,,, "602345678",,, [9]], [,,,,,,,,, [-1]], [,, "50\\d{8,9}",,,, "5012345678",,, [10, 11]], [,, "70\\d{8}",,,, "7012345678",,, [10]], "KR", 82, "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))", "0",,, "0(8(?:[1-46-8]|5\\d\\d))?",,,, [[, "(\\d{5})", "$1", ["1[016-9]1", "1[016-9]11", "1[016-9]114"], "0$1"], [, "(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1", "0$CC-$1"], [, "(\\d{4})(\\d{4})", "$1-$2", ["1"]], [, "(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60|8"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1", "0$CC-$1"], [, "(\\d{5})(\\d{3})(\\d{3})", "$1 $2 $3", ["003", "0030"]], [, "(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1", "0$CC-$1"], [, "(\\d{5})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0"]], [, "(\\d{5})(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["0"]]], [[, "(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1", "0$CC-$1"], [, "(\\d{4})(\\d{4})", "$1-$2", ["1"]], [, "(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60|8"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1", "0$CC-$1"], [, "(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1", "0$CC-$1"]], [,, "15\\d{7,8}",,,, "1523456789",,, [9, 10]],,, [,, "00(?:3(?:08\\d{6,7}|68\\d{7})|798\\d{7,9})",,,,,,, [11, 12, 13, 14]], [,, "1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\\d{4}",,,, "15441234",,, [8]],,, [,,,,,,,,, [-1]]],
        KW: [, [,, "(?:18|[2569]\\d\\d)\\d{5}",,,,,,, [7, 8]], [,, "2(?:[23]\\d\\d|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7]))\\d{4}",,,, "22345678",,, [8]], [,, "(?:5(?:2(?:22|5[25])|88[58])|6(?:222|444|70[013-9]|888|93[039])|9(?:11[01]|333|500))\\d{4}|(?:5(?:[05]\\d|1[0-7]|6[56])|6(?:0[034679]|5[015-9]|6\\d|7[67]|9[069])|9(?:0[09]|22|[4679]\\d|55|8[057-9]))\\d{5}",,,, "50012345",,, [8]], [,, "18\\d{5}",,,, "1801234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "KW", 965, "00",,,,,,,, [[, "(\\d{4})(\\d{3,4})", "$1 $2", ["[169]|2(?:[235]|4[1-35-9])|52"]], [, "(\\d{3})(\\d{5})", "$1 $2", ["[25]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KY: [, [,, "(?:345|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\d{4}",,,, "3452221234",,,, [7]], [,, "345(?:32[1-9]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|9(?:1[67]|2[2-9]|3[689]))\\d{4}",,,, "3453231234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "(?:345976|900[2-9]\\d\\d)\\d{4}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "KY", 1, "011", "1",,, "1|([2-9]\\d{6})$", "345$1",,,,, [,, "345849\\d{4}",,,, "3458491234"],, "345", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        KZ: [, [,, "33622\\d{5}|(?:7\\d|80)\\d{8}",,,,,,, [10], [5, 6]], [,, "(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9])|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}",,,, "7123456789",,,, [5, 6]], [,, "7(?:0[0-25-8]|47|6[02-4]|7[15-8]|85)\\d{7}",,,, "7710009998"], [,, "800\\d{7}",,,, "8001234567"], [,, "809\\d{7}",,,, "8091234567"], [,,,,,,,,, [-1]], [,, "808\\d{7}",,,, "8081234567"], [,, "751\\d{7}",,,, "7511234567"], "KZ", 7, "810", "8",,, "8",, "8~10",,,, [,,,,,,,,, [-1]],, "33|7", [,, "751\\d{7}"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LA: [, [,, "(?:2\\d|3)\\d{8}|(?:[235-8]\\d|41)\\d{6}",,,,,,, [8, 9, 10], [6]], [,, "(?:2[13]|[35-7][14]|41|8[1468])\\d{6}",,,, "21212862",,, [8], [6]], [,, "20(?:[29]\\d|5[24-689]|7[6-8])\\d{6}",,,, "2023123456",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LA", 856, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2[13]|3[14]|[4-8]"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["3"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "30\\d{7}",,,, "301234567",,, [9]],,, [,,,,,,,,, [-1]]],
        LB: [, [,, "[7-9]\\d{7}|[13-9]\\d{6}",,,,,,, [7, 8]], [,, "(?:(?:[14-69]\\d|8[02-9])\\d|7(?:[2-57]\\d|62|8[0-7]|9[04-9]))\\d{4}",,,, "1123456",,, [7]], [,, "793(?:[01]\\d|2[0-4])\\d{3}|(?:(?:3|81)\\d|7(?:[01]\\d|6[013-9]|8[89]|9[12]))\\d{5}",,,, "71123456"], [,,,,,,,,, [-1]], [,, "9[01]\\d{6}",,,, "90123456",,, [8]], [,, "80\\d{6}",,,, "80123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LB", 961, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LC: [, [,, "(?:[58]\\d\\d|758|900)\\d{7}",,,,,,, [10], [7]], [,, "758(?:4(?:30|5\\d|6[2-9]|8[0-2])|57[0-2]|638)\\d{4}",,,, "7584305678",,,, [7]], [,, "758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\d|3[01]))\\d{4}",,,, "7582845678",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "LC", 1, "011", "1",,, "1|([2-7]\\d{6})$", "758$1",,,,, [,,,,,,,,, [-1]],, "758", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LI: [, [,, "90\\d{5}|(?:[2378]|6\\d\\d)\\d{6}",,,,,,, [7, 9]], [,, "(?:2(?:01|1[27]|22|3\\d|6[02-578]|96)|3(?:33|40|7[0135-7]|8[048]|9[0269]))\\d{4}",,,, "2345678",,, [7]], [,, "(?:6(?:4(?:89|9\\d)|5[0-3]\\d|6(?:0[0-7]|10|2[06-9]|39))\\d|7(?:[37-9]\\d|42|56))\\d{4}",,,, "660234567"], [,, "80(?:02[28]|9\\d\\d)\\d\\d",,,, "8002222",,, [7]], [,, "90(?:02[258]|1(?:23|3[14])|66[136])\\d\\d",,,, "9002222",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LI", 423, "00", "0",,, "0|(1001)",,,, [[, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[237-9]"],, "$CC $1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["69"],, "$CC $1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"],, "$CC $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "870(?:28|87)\\d\\d",,,, "8702812",,, [7]],,, [,, "697(?:42|56|[78]\\d)\\d{4}",,,, "697861234",,, [9]]],
        LK: [, [,, "[1-9]\\d{8}",,,,,,, [9], [7]], [,, "(?:12[2-9]|602|8[12]\\d|9(?:1\\d|22|9[245]))\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}",,,, "112345678",,,, [7]], [,, "7[0-25-8]\\d{7}",,,, "712345678"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LK", 94, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-689]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "1973\\d{5}",,,, "197312345"],,, [,,,,,,,,, [-1]]],
        LR: [, [,, "(?:2|33|5\\d|77|88)\\d{7}|[45]\\d{6}",,,,,,, [7, 8, 9]], [,, "(?:2\\d{3}|33333)\\d{4}",,,, "21234567",,, [8, 9]], [,, "(?:(?:330|555|(?:77|88)\\d)\\d|4[67])\\d{5}|5\\d{6}",,,, "770123456",,, [7, 9]], [,,,,,,,,, [-1]], [,, "332(?:02|[34]\\d)\\d{4}",,,, "332021234",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LR", 231, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[45]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3578]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LS: [, [,, "(?:[256]\\d\\d|800)\\d{5}",,,,,,, [8]], [,, "2\\d{7}",,,, "22123456"], [,, "[56]\\d{7}",,,, "50123456"], [,, "800[256]\\d{4}",,,, "80021234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LS", 266, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[2568]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LT: [, [,, "(?:[3469]\\d|52|[78]0)\\d{6}",,,,,,, [8]], [,, "(?:3[1478]|4[124-6]|52)\\d{6}",,,, "31234567"], [,, "6\\d{7}",,,, "61234567"], [,, "80[02]\\d{5}",,,, "80012345"], [,, "9(?:0[0239]|10)\\d{5}",,,, "90012345"], [,, "808\\d{5}",,,, "80812345"], [,, "70[05]\\d{5}",,,, "70012345"], [,, "[89]01\\d{5}",,,, "80123456"], "LT", 370, "00", "8",,, "[08]",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["52[0-7]"], "(8-$1)",, 1], [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[7-9]"], "8 $1",, 1], [, "(\\d{2})(\\d{6})", "$1 $2", ["37|4(?:[15]|6[1-8])"], "(8-$1)",, 1], [, "(\\d{3})(\\d{5})", "$1 $2", ["[3-6]"], "(8-$1)",, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "70[67]\\d{5}",,,, "70712345"],,, [,,,,,,,,, [-1]]],
        LU: [, [,, "35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",,,,,,, [4, 5, 6, 7, 8, 9, 10, 11]], [,, "(?:35[013-9]|80[2-9]|90[89])\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\d|8[13-9]|9[2-579])\\d{2,9}",,,, "27123456"], [,, "6(?:[269][18]|5[158]|7[189]|81)\\d{6}",,,, "628123456",,, [9]], [,, "800\\d{5}",,,, "80012345",,, [8]], [,, "90[015]\\d{5}",,,, "90012345",,, [8]], [,, "801\\d{5}",,,, "80112345",,, [8]], [,,,,,,,,, [-1]], [,, "20(?:1\\d{5}|[2-689]\\d{1,7})",,,, "20201234",,, [4, 5, 6, 7, 8, 9, 10]], "LU", 352, "00",,,, "(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)",,,, [[, "(\\d{2})(\\d{3})", "$1 $2", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"],, "$CC $1"], [, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"],, "$CC $1"], [, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["20[2-689]"],, "$CC $1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4", ["2(?:[0367]|4[3-8])"],, "$CC $1"], [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80[01]|90[015]"],, "$CC $1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["20"],, "$CC $1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"],, "$CC $1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4 $5", ["2(?:[0367]|4[3-8])"],, "$CC $1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})", "$1 $2 $3 $4", ["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"],, "$CC $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LV: [, [,, "(?:[268]\\d|90)\\d{6}",,,,,,, [8]], [,, "6\\d{7}",,,, "63123456"], [,, "2\\d{7}",,,, "21234567"], [,, "80\\d{6}",,,, "80123456"], [,, "90\\d{6}",,,, "90123456"], [,, "81\\d{6}",,,, "81123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LV", 371, "00",,,,,,,, [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[269]|8[01]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        LY: [, [,, "[2-9]\\d{8}",,,,,,, [9], [7]], [,, "(?:2(?:0[56]|[1-6]\\d|7[124579]|8[124])|3(?:1\\d|2[2356])|4(?:[17]\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\d|5[2-57]|8[1-5])|7(?:[13]\\d|2[13-79])|8(?:[124]\\d|5[124]|84))\\d{6}",,,, "212345678",,,, [7]], [,, "9[1-6]\\d{7}",,,, "912345678"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "LY", 218, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{7})", "$1-$2", ["[2-9]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MA: [, [,, "[5-8]\\d{8}",,,,,,, [9]], [,, "5(?:29(?:[189]0|29)|38[89]0)\\d{4}|5(?:2(?:[015-7]\\d|2[02-9]|3[0-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\d|5[02-9]|6[02-8]|80|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}",,,, "520123456"], [,, "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[016-8]|6[1267]|7[0-27]))\\d{6}",,,, "650123456"], [,, "80\\d{7}",,,, "801234567"], [,, "89\\d{7}",,,, "891234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "592(?:4[0-2]|93)\\d{4}",,,, "592401234"], "MA", 212, "00", "0",,, "0",,,, [[, "(\\d{5})(\\d{4})", "$1-$2", ["5(?:29|38)", "5(?:29|38)[89]"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5[45]"], "0$1"], [, "(\\d{4})(\\d{5})", "$1-$2", ["5(?:2[2-489]|3[5-9]|9)|892", "5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"], "0$1"], [, "(\\d{2})(\\d{7})", "$1-$2", ["8"], "0$1"], [, "(\\d{3})(\\d{6})", "$1-$2", ["[5-7]"], "0$1"]],, [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MC: [, [,, "870\\d{5}|(?:[349]|6\\d)\\d{7}",,,,,,, [8, 9]], [,, "(?:870|9[2-47-9]\\d)\\d{5}",,,, "99123456",,, [8]], [,, "4(?:4\\d|5[1-9])\\d{5}|(?:3|6\\d)\\d{7}",,,, "612345678"], [,, "90\\d{6}",,,, "90123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MC", 377, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["8"]], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[39]"]], [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]], [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[39]"]], [, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]], [,,,,,,,,, [-1]],,, [,, "870\\d{5}",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MD: [, [,, "(?:[235-7]\\d|[89]0)\\d{6}",,,,,,, [8]], [,, "(?:(?:2[1-9]|3[1-79])\\d|5(?:33|5[257]))\\d{5}",,,, "22212345"], [,, "562\\d{5}|(?:6\\d|7[16-9])\\d{6}",,,, "62112345"], [,, "800\\d{5}",,,, "80012345"], [,, "90[056]\\d{5}",,,, "90012345"], [,, "808\\d{5}",,,, "80812345"], [,,,,,,,,, [-1]], [,, "3[08]\\d{6}",,,, "30123456"], "MD", 373, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["22|3"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[25-7]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "803\\d{5}",,,, "80312345"],,, [,,,,,,,,, [-1]]],
        ME: [, [,, "(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",,,,,,, [8, 9], [6]], [,, "(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\d{5}",,,, "30234567",,, [8], [6]], [,, "6(?:[07-9]\\d|3[024]|6[0-25])\\d{5}",,,, "67622901",,, [8]], [,, "80(?:[0-2578]|9\\d)\\d{5}",,,, "80080002"], [,, "9(?:4[1568]|5[178])\\d{5}",,,, "94515151",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "78[1-49]\\d{5}",,,, "78108780",,, [8]], "ME", 382, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "77[1-9]\\d{5}",,,, "77273012",,, [8]],,, [,,,,,,,,, [-1]]],
        MF: [, [,, "(?:590|69\\d|976)\\d{6}",,,,,,, [9]], [,, "590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}",,,, "590271234"], [,, "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}",,,, "690001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "976[01]\\d{5}",,,, "976012345"], "MF", 590, "00", "0",,, "0",,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MG: [, [,, "[23]\\d{8}",,,,,,, [9], [7]], [,, "2072[29]\\d{4}|20(?:2\\d|4[47]|5[3467]|6[279]|7[35]|8[268]|9[245])\\d{5}",,,, "202123456",,,, [7]], [,, "3[2-49]\\d{7}",,,, "321234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "22\\d{7}",,,, "221234567"], "MG", 261, "00", "0",,, "0|([24-9]\\d{6})$", "20$1",,, [[, "(\\d{2})(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["[23]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MH: [, [,, "329\\d{4}|(?:[256]\\d|45)\\d{5}",,,,,,, [7]], [,, "(?:247|528|625)\\d{4}",,,, "2471234"], [,, "(?:(?:23|54)5|329|45[56])\\d{4}",,,, "2351234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "635\\d{4}",,,, "6351234"], "MH", 692, "011", "1",,, "1",,,, [[, "(\\d{3})(\\d{4})", "$1-$2", ["[2-6]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MK: [, [,, "[2-578]\\d{7}",,,,,,, [8], [6, 7]], [,, "(?:2(?:[23]\\d|5[0-24578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\d{5}",,,, "22012345",,,, [6, 7]], [,, "7(?:(?:[0-25-8]\\d|3[2-4]|9[23])\\d|4(?:21|60))\\d{4}",,,, "72345678"], [,, "800\\d{5}",,,, "80012345"], [,, "5[02-9]\\d{6}",,,, "50012345"], [,, "8(?:0[1-9]|[1-9]\\d)\\d{5}",,,, "80123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MK", 389, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[347]"], "0$1"], [, "(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[58]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        ML: [, [,, "[24-9]\\d{7}",,,,,,, [8]], [,, "2(?:07[0-8]|12[67])\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-39]))\\d{5}",,,, "20212345"], [,, "2(?:079|17\\d)\\d{4}|(?:5[01]|[679]\\d|8[239])\\d{6}",,,, "65012345"], [,, "80\\d{6}",,,, "80012345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "ML", 223, "00",,,,,,,, [[, "(\\d{4})", "$1", ["67[057-9]|74[045]", "67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]], [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]], [,,,,,,,,, [-1]],,, [,, "80\\d{6}"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MM: [, [,, "1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",,,,,,, [6, 7, 8, 9, 10], [5]], [,, "(?:1(?:(?:2\\d|3[56]|[89][0-6])\\d|4(?:2[2-469]|39|46|6[25]|7[0-3]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\d|2[246]|39|46|62|7[0-3]|83)|51\\d\\d)|4(?:2(?:2\\d\\d|48[0-3])|3(?:20\\d|4(?:70|83)|56)|420\\d|5470)|6(?:0(?:[23]|88\\d)|(?:124|[56]2\\d)\\d|247[23]|3(?:20\\d|470)|4(?:2[04]\\d|47[23])|7(?:(?:3\\d|8[01459])\\d|4(?:39|60|7[013]))))\\d{4}|5(?:2(?:2\\d{5,6}|47[023]\\d{4})|(?:347[23]|4(?:2(?:1|86)|470)|522\\d|6(?:20\\d|483)|7(?:20\\d|48[0-2])|8(?:20\\d|47[02])|9(?:20\\d|47[01]))\\d{4})|7(?:(?:0470|4(?:25\\d|470)|5(?:202|470|96\\d))\\d{4}|1(?:20\\d{4,5}|4(?:70|83)\\d{4}))|8(?:1(?:2\\d{5,6}|4(?:10|7[01]\\d)\\d{3})|2(?:2\\d{5,6}|(?:320|490\\d)\\d{3})|(?:3(?:2\\d\\d|470)|4[24-7]|5(?:2\\d|4[1-9]|51)\\d|6[23])\\d{4})|(?:1[2-6]\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|[35]2\\d))\\d{4}|25\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\d{4}",,,, "1234567",,, [6, 7, 8, 9], [5]], [,, "(?:17[01]|9(?:2(?:[0-4]|[56]\\d\\d)|(?:3(?:[0-36]|4\\d)|(?:6[6-9]|8[89]|9[5-8])\\d|7(?:3|[5-9]\\d))\\d|4(?:(?:[0245]\\d|[1379])\\d|88)|5[0-6])\\d)\\d{4}|9[69]1\\d{6}|9(?:[68]\\d|9[089])\\d{5}",,,, "92123456",,, [7, 8, 9, 10]], [,, "80080(?:[01][1-9]|2\\d)\\d{3}",,,, "8008001234",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "1333\\d{4}|[12]468\\d{4}",,,, "13331234",,, [8]], "MM", 95, "00", "0",,, "0",,,, [[, "(\\d)(\\d{2})(\\d{3})", "$1 $2 $3", ["16|2"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"], "0$1"], [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[4-7]|8[1-35]"], "0$1"], [, "(\\d)(\\d{3})(\\d{4,6})", "$1 $2 $3", ["9(?:2[0-4]|[35-9]|4[137-9])"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"], [, "(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["92"], "0$1"], [, "(\\d)(\\d{5})(\\d{4})", "$1 $2 $3", ["9"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MN: [, [,, "[12]\\d{7,9}|[57-9]\\d{7}",,,,,,, [8, 9, 10], [4, 5, 6]], [,, "[12](?:3[2-8]|4[2-68]|5[1-4689])\\d{6,7}|(?:11(?:3\\d|4[568])|(?:(?:21|5[0568])\\d|70[0-5])\\d)\\d{4}|[12]2(?:[1-3]\\d{5,6}|7\\d{6})",,,, "50123456",,,, [4, 5, 6]], [,, "(?:8(?:[05689]\\d|3[01])|9(?:[014-9]\\d|20|3[0-4]))\\d{5}",,,, "88123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "7(?:100|5(?:0[0579]|1[015]|[389]5|[57][57])|(?:6[0167]|7\\d|8[01])\\d)\\d{4}",,,, "75153456",,, [8]], "MN", 976, "001", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[12]1"], "0$1"], [, "(\\d{4})(\\d{4})", "$1 $2", ["[57-9]"]], [, "(\\d{3})(\\d{5,6})", "$1 $2", ["[12]2[1-3]"], "0$1"], [, "(\\d{4})(\\d{5,6})", "$1 $2", ["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"], "0$1"], [, "(\\d{5})(\\d{4,5})", "$1 $2", ["[12]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MO: [, [,, "(?:28|[68]\\d)\\d{6}",,,,,,, [8]], [,, "(?:28[2-9]|8(?:11|[2-57-9]\\d))\\d{5}",,,, "28212345"], [,, "6(?:[235]\\d\\d|6(?:0[0-5]|[1-9]\\d)|8(?:[02][5-9]|[146-8]\\d|[35][0-4]))\\d{4}",,,, "66123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MO", 853, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[268]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MP: [, [,, "[58]\\d{9}|(?:67|90)0\\d{7}",,,,,,, [10], [7]], [,, "670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}",,,, "6702345678",,,, [7]], [,, "670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}",,,, "6702345678",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "MP", 1, "011", "1",,, "1|([2-9]\\d{6})$", "670$1",, 1,,, [,,,,,,,,, [-1]],, "670", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MQ: [, [,, "69\\d{7}|(?:59|97)6\\d{6}",,,,,,, [9]], [,, "596(?:0[0-7]|10|2[7-9]|3[05-9]|4[0-46-8]|[5-7]\\d|8[09]|9[4-8])\\d{4}",,,, "596301234"], [,, "69(?:6(?:[0-47-9]\\d|5[0-6]|6[0-4])|727)\\d{4}",,,, "696201234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "976(?:6[1-9]|7[0-367])\\d{4}",,,, "976612345"], "MQ", 596, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MR: [, [,, "(?:[2-4]\\d\\d|800)\\d{5}",,,,,,, [8]], [,, "(?:25[08]|35\\d|45[1-7])\\d{5}",,,, "35123456"], [,, "[2-4][0-46-9]\\d{6}",,,, "22123456"], [,, "800\\d{5}",,,, "80012345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MR", 222, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-48]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MS: [, [,, "66449\\d{5}|(?:[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "664491\\d{4}",,,, "6644912345",,,, [7]], [,, "66449[2-6]\\d{4}",,,, "6644923456",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "MS", 1, "011", "1",,, "1|(4\\d{6})$", "664$1",,,,, [,,,,,,,,, [-1]],, "664", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MT: [, [,, "3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",,,,,,, [8]], [,, "2(?:0(?:[19]\\d|3[1-4]|6[059])|[1-357]\\d\\d)\\d{4}",,,, "21001234"], [,, "(?:7(?:210|[79]\\d\\d)|9(?:[29]\\d\\d|69[67]|8(?:1[1-3]|89|97)))\\d{4}",,,, "96961234"], [,, "800[3467]\\d{4}",,,, "80071234"], [,, "5(?:0(?:0(?:37|43)|(?:6\\d|70|9[0168])\\d)|[12]\\d0[1-5])\\d{3}",,,, "50037123"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "3550\\d{4}",,,, "35501234"], "MT", 356, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[2357-9]"]]],, [,, "7117\\d{4}",,,, "71171234"],,, [,,,,,,,,, [-1]], [,, "501\\d{5}",,,, "50112345"],,, [,,,,,,,,, [-1]]],
        MU: [, [,, "(?:[2-468]|5\\d)\\d{6}",,,,,,, [7, 8]], [,, "(?:2(?:[0346-8]\\d|1[0-7])|4(?:[013568]\\d|2[4-7])|54(?:[34]\\d|71)|6\\d\\d|8(?:14|3[129]))\\d{4}",,,, "54480123"], [,, "5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\d{4}|5(?:2[589]|4[3489]|7\\d|8[0-689]|9[0-8])\\d{5}",,,, "52512345",,, [8]], [,, "80[0-2]\\d{4}",,,, "8001234",,, [7]], [,, "30\\d{5}",,,, "3012345",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "3(?:20|9\\d)\\d{4}",,,, "3201234",,, [7]], "MU", 230, "0(?:0|[24-7]0|3[03])",,,,,, "020",, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-46]|8[013]"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["5"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MV: [, [,, "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",,,,,,, [7, 10]], [,, "(?:3(?:0[0-3]|3[0-59])|6(?:[57][02468]|6[024-68]|8[024689]))\\d{4}",,,, "6701234",,, [7]], [,, "46[46]\\d{4}|(?:7[2-9]|9[13-9])\\d{5}",,,, "7712345",,, [7]], [,, "800\\d{7}",,,, "8001234567",,, [10]], [,, "900\\d{7}",,,, "9001234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MV", 960, "0(?:0|19)",,,,,, "00",, [[, "(\\d{3})(\\d{4})", "$1-$2", ["[3467]|9[13-9]"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "4[05]0\\d{4}",,,, "4001234",,, [7]],,, [,,,,,,,,, [-1]]],
        MW: [, [,, "1\\d{6}(?:\\d{2})?|(?:[23]1|77|88|99)\\d{7}",,,,,,, [7, 9]], [,, "(?:1[2-9]|21\\d\\d)\\d{5}",,,, "1234567"], [,, "111\\d{6}|(?:31|77|88|99)\\d{7}",,,, "991234567",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MW", 265, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["1[2-9]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[137-9]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MX: [, [,, "(?:1(?:[01467]\\d|[2359][1-9]|8[1-79])|[2-9]\\d)\\d{8}",,,,,,, [10, 11], [7, 8]], [,, "(?:2(?:0[01]|2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}",,,, "2001234567",,, [10], [7, 8]], [,, "(?:1(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))|2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}",,,, "12221234567",,,, [7, 8]], [,, "8(?:00|88)\\d{7}",,,, "8001234567",,, [10]], [,, "900\\d{7}",,,, "9001234567",,, [10]], [,, "300\\d{7}",,,, "3001234567",,, [10]], [,, "500\\d{7}",,,, "5001234567",,, [10]], [,,,,,,,,, [-1]], "MX", 52, "0[09]", "01",,, "0(?:[12]|4[45])|1",, "00",, [[, "(\\d{5})", "$1", ["53"]], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"],,, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"],,, 1], [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"],,, 1], [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"],,, 1]], [[, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"],,, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"],,, 1], [, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"],,, 1], [, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"],,, 1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MY: [, [,, "1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",,,,,,, [8, 9, 10], [6, 7]], [,, "(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\d|9[0-57])\\d|4(?:2[0-689]|[3-79]\\d|8[1-35689])|5(?:2[0-589]|[3468]\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\d|[3489][0-8]))\\d{5}",,,, "323856789",,, [8, 9], [6, 7]], [,, "1(?:4400|8(?:47|8[27])[0-4])\\d{4}|1(?:0(?:[23568]\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\d\\d|6(?:0[5-9]|[1-9]\\d)|7(?:0[3-9]|1[01]))|(?:[2379][2-9]|4[235-9]|(?:59|6)\\d)\\d|8(?:1[23]|[236]\\d|4[06]|5[7-9]|7[016-9]|8[01]|9[0-8]))\\d{5}",,,, "123456789",,, [9, 10]], [,, "1[378]00\\d{6}",,,, "1300123456",,, [10]], [,, "1600\\d{6}",,,, "1600123456",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "154(?:6(?:0\\d|1[0-3])|8(?:[25]1|4[0189]|7[0-4679]))\\d{4}",,,, "1546012345",,, [10]], "MY", 60, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["[4-79]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1-$2 $3", ["1(?:[02469]|[37][2-9]|8[1-9])|8"], "0$1"], [, "(\\d)(\\d{4})(\\d{4})", "$1-$2 $3", ["3"], "0$1"], [, "(\\d)(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3-$4", ["1[36-8]"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2 $3", ["15"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2 $3", ["1"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        MZ: [, [,, "(?:2|8\\d)\\d{7}",,,,,,, [8, 9]], [,, "2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}",,,, "21123456",,, [8]], [,, "8[2-7]\\d{7}",,,, "821234567",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "MZ", 258, "00",,,,,,,, [[, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2|8[2-7]"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NA: [, [,, "[68]\\d{7,8}",,,,,,, [8, 9]], [,, "6(?:1(?:[02-4]\\d\\d|17)|2(?:17|54\\d|69|70)|3(?:17|2[0237]\\d|34|6[289]|7[01]|81)|4(?:17|(?:27|41|5[25])\\d|69|7[01])|5(?:17|2[236-8]\\d|69|7[01])|6(?:17|26\\d|38|42|69|7[01])|7(?:17|(?:2[2-4]|30)\\d|6[89]|7[01]))\\d{4}|6(?:1(?:2[2-7]|3[01378]|4[0-4]|69|7[014])|25[0-46-8]|32\\d|4(?:2[0-27]|4[016]|5[0-357])|52[02-9]|62[56]|7(?:2[2-69]|3[013]))\\d{4}",,,, "61221234"], [,, "(?:60|8[1245])\\d{7}",,,, "811234567",,, [9]], [,, "80\\d{7}",,,, "800123456",,, [9]], [,, "8701\\d{5}",,,, "870123456",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "8(?:3\\d\\d|86)\\d{5}",,,, "88612345"], "NA", 264, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["88"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["87"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NC: [, [,, "[2-57-9]\\d{5}",,,,,,, [6]], [,, "(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}",,,, "201234"], [,, "(?:5[0-4]|[79]\\d|8[0-79])\\d{4}",,,, "751234"], [,,,,,,,,, [-1]], [,, "36\\d{4}",,,, "366711"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NC", 687, "00",,,,,,,, [[, "(\\d{3})", "$1", ["5[6-8]"]], [, "(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[2-57-9]"]]], [[, "(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[2-57-9]"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NE: [, [,, "[0289]\\d{7}",,,,,,, [8]], [,, "2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}",,,, "20201234"], [,, "(?:23|8[014589]|9\\d)\\d{6}",,,, "93123456"], [,, "08\\d{6}",,,, "08123456"], [,, "09\\d{6}",,,, "09123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NE", 227, "00",,,,,,,, [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["08"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[089]|2[013]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NF: [, [,, "[13]\\d{5}",,,,,,, [6], [5]], [,, "(?:1(?:06|17|28|39)|3[0-2]\\d)\\d{3}",,,, "106609",,,, [5]], [,, "(?:14|3[58])\\d{4}",,,, "381234",,,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NF", 672, "00",,,, "([0-258]\\d{4})$", "3$1",,, [[, "(\\d{2})(\\d{4})", "$1 $2", ["1[0-3]"]], [, "(\\d)(\\d{5})", "$1 $2", ["[13]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NG: [, [,, "(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}",,,,,,, [7, 8, 10, 11, 12, 13, 14], [5, 6]], [,, "(?:(?:[1-356]\\d|4[02-8]|7[0-79]|8[2-9])\\d|9(?:0[3-9]|[1-9]\\d))\\d{5}|(?:[12]\\d|4[147]|5[14579]|6[1578]|7[0-3578])\\d{5}",,,, "18040123",,, [7, 8], [5, 6]], [,, "(?:707[0-3]|8(?:01|19)[01])\\d{6}|(?:70[1-689]|8(?:0[2-9]|1[0-8])|90[1-9])\\d{7}",,,, "8021234567",,, [10]], [,, "800\\d{7,11}",,,, "80017591759",,, [10, 11, 12, 13, 14]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NG", 234, "009", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["78"], "0$1"], [, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]|9(?:0[3-9]|[1-9])"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[3-7]|8[2-9]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[7-9]"], "0$1"], [, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["[78]"], "0$1"], [, "(\\d{3})(\\d{5})(\\d{5,6})", "$1 $2 $3", ["[78]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "700\\d{7,11}",,,, "7001234567",,, [10, 11, 12, 13, 14]],,, [,,,,,,,,, [-1]]],
        NI: [, [,, "(?:1800|[25-8]\\d{3})\\d{4}",,,,,,, [8]], [,, "2\\d{7}",,,, "21234567"], [,, "(?:5(?:5[0-7]|[78]\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\d)\\d)\\d{5}",,,, "81234567"], [,, "1800\\d{4}",,,, "18001234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NI", 505, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[125-8]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NL: [, [,, "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|[89]\\d{6,9}|1\\d{4,5}",,,,,,, [5, 6, 7, 8, 9, 10]], [,, "(?:1(?:[035]\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\d\\d)\\d{6}",,,, "101234567",,, [9]], [,, "6[1-58]\\d{7}",,,, "612345678",,, [9]], [,, "800\\d{4,7}",,,, "8001234",,, [7, 8, 9, 10]], [,, "90[069]\\d{4,7}",,,, "9061234",,, [7, 8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "(?:85|91)\\d{7}",,,, "851234567",,, [9]], "NL", 31, "00", "0",,, "0",,,, [[, "(\\d{4})", "$1", ["1[238]|[34]"]], [, "(\\d{2})(\\d{3,4})", "$1 $2", ["14"]], [, "(\\d{6})", "$1", ["1"]], [, "(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"], [, "(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-57-9]"], "0$1"]], [[, "(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"], [, "(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-57-9]"], "0$1"]], [,, "66\\d{7}",,,, "662345678",,, [9]],,, [,, "140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)\\d",,,,,,, [5, 6]], [,, "140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\d{6})\\d",,,, "14020",,, [5, 6, 9]],,, [,,,,,,,,, [-1]]],
        NO: [, [,, "(?:0|[2-9]\\d{3})\\d{4}",,,,,,, [5, 8]], [,, "(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}",,,, "21234567",,, [8]], [,, "(?:4[015-8]|5[89]|9\\d)\\d{6}",,,, "40612345",,, [8]], [,, "80[01]\\d{5}",,,, "80012345",,, [8]], [,, "82[09]\\d{5}",,,, "82012345",,, [8]], [,, "810(?:0[0-6]|[2-8]\\d)\\d{3}",,,, "81021234",,, [8]], [,, "880\\d{5}",,,, "88012345",,, [8]], [,, "85[0-5]\\d{5}",,,, "85012345",,, [8]], "NO", 47, "00",,,,,,,, [[, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[489]|5[89]"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[235-7]"]]],, [,,,,,,,,, [-1]], 1, "[02-689]|7[0-8]", [,,,,,,,,, [-1]], [,, "(?:0[2-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}",,,, "02000"],,, [,, "81[23]\\d{5}",,,, "81212345",,, [8]]],
        NP: [, [,, "9\\d{9}|[1-9]\\d{7}",,,,,,, [8, 10], [6, 7]], [,, "1[0-6]\\d{6}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-79])[2-6]\\d{5}",,,, "14567890",,, [8], [6, 7]], [,, "9(?:6[0-3]|7[245]|8[0-24-68])\\d{7}",,,, "9841234567",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NP", 977, "00", "0",,, "0",,,, [[, "(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"], [, "(\\d{2})(\\d{6})", "$1-$2", ["[1-8]|9(?:[1-579]|6[2-6])"], "0$1"], [, "(\\d{3})(\\d{7})", "$1-$2", ["9"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NR: [, [,, "(?:444|(?:55|8\\d)\\d|666)\\d{4}",,,,,,, [7]], [,, "444\\d{4}",,,, "4441234"], [,, "(?:55[3-9]|666|8\\d\\d)\\d{4}",,,, "5551234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NR", 674, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[4-68]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NU: [, [,, "(?:[47]|888\\d)\\d{3}",,,,,,, [4, 7]], [,, "[47]\\d{3}",,,, "7012",,, [4]], [,, "888[4-9]\\d{3}",,,, "8884012",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "NU", 683, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["8"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        NZ: [, [,, "2\\d{7,9}|(?:[34]\\d|6[0-35-9])\\d{6}|(?:508|[79]\\d)\\d{6,7}|8\\d{4,9}",,,,,,, [5, 6, 7, 8, 9, 10]], [,, "24099\\d{3}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{6}",,,, "32345678",,, [8], [7]], [,, "2[0-28]\\d{8}|2[0-27-9]\\d{7}|21\\d{6}",,,, "211234567",,, [8, 9, 10]], [,, "508\\d{6,7}|80\\d{6,8}",,,, "800123456",,, [8, 9, 10]], [,, "90\\d{6,7}",,,, "900123456",,, [8, 9]], [,,,,,,,,, [-1]], [,, "70\\d{7}",,,, "701234567",,, [9]], [,,,,,,,,, [-1]], "NZ", 64, "0(?:0|161)", "0",,, "0",, "00",, [[, "(\\d{2})(\\d{3,8})", "$1 $2", ["83"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]0"], "0$1"], [, "(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["24|[346]|7[2-57-9]|9[2-9]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:10|74)|[59]|80"], "0$1"], [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["2[028]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,5})", "$1 $2 $3", ["2(?:[169]|7[0-35-9])|7|86"], "0$1"]],, [,, "[28]6\\d{6,7}",,,, "26123456",,, [8, 9]],,, [,,,,,,,,, [-1]], [,, "83\\d{3,8}",,,, "83012378"],,, [,,,,,,,,, [-1]]],
        OM: [, [,, "(?:1505|[279]\\d{3}|500)\\d{4}|8007\\d{4,5}",,,,,,, [7, 8, 9]], [,, "2[2-6]\\d{6}",,,, "23123456",,, [8]], [,, "(?:1505|90[1-9]\\d)\\d{4}|(?:7[1289]|9[1-9])\\d{6}",,,, "92123456",,, [8]], [,, "500\\d{4}|8007\\d{4,5}",,,, "80071234"], [,, "900\\d{5}",,,, "90012345",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "OM", 968, "00",,,,,,,, [[, "(\\d{3})(\\d{4,6})", "$1 $2", ["[58]"]], [, "(\\d{2})(\\d{6})", "$1 $2", ["2"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["[179]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PA: [, [,, "(?:[1-57-9]|6\\d)\\d{6}",,,,,,, [7, 8]], [,, "(?:1(?:0\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[58]|7[0167]|8[258]|9[139])|2(?:[0235-79]\\d|1[0-7]|4[013-9]|8[026-9])|3(?:[089]\\d|1[014-7]|2[0-5]|33|4[0-79]|55|6[068]|7[03-8])|4(?:00|3[0-579]|4\\d|7[0-57-9])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[056]|7[0-24-9]|8[6-9]|90)|8(?:09|2[89]|3\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\d))\\d{4}",,,, "2001234",,, [7]], [,, "(?:1[16]1|21[89]|6(?:[02-9]\\d|1[0-6])\\d|8(?:1[01]|7[23]))\\d{4}",,,, "61234567"], [,, "800\\d{4}",,,, "8001234",,, [7]], [,, "(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\d{4}",,,, "8601234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "PA", 507, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1-$2", ["[1-57-9]"]], [, "(\\d{4})(\\d{4})", "$1-$2", ["6"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PE: [, [,, "(?:[14-8]|9\\d)\\d{7}",,,,,,, [8, 9], [6, 7]], [,, "19(?:[02-68]\\d|1[035-9]|7[0-689]|9[1-9])\\d{4}|(?:1[0-8]|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\d{6}",,,, "11234567",,, [8], [6, 7]], [,, "9\\d{8}",,,, "912345678",,, [9]], [,, "800\\d{5}",,,, "80012345",,, [8]], [,, "805\\d{5}",,,, "80512345",,, [8]], [,, "801\\d{5}",,,, "80112345",,, [8]], [,, "80[24]\\d{5}",,,, "80212345",,, [8]], [,,,,,,,,, [-1]], "PE", 51, "19(?:1[124]|77|90)00", "0", " Anexo ",, "0",,,, [[, "(\\d{3})(\\d{5})", "$1 $2", ["80"], "(0$1)"], [, "(\\d)(\\d{7})", "$1 $2", ["1"], "(0$1)"], [, "(\\d{2})(\\d{6})", "$1 $2", ["[4-8]"], "(0$1)"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PF: [, [,, "[48]\\d{7}|4\\d{5}",,,,,,, [6, 8]], [,, "4(?:0[4-689]|9[4-68])\\d{5}",,,, "40412345",,, [8]], [,, "8[7-9]\\d{6}",,,, "87123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "499\\d{5}",,,, "49901234",,, [8]], "PF", 689, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["44"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[48]"]]],, [,,,,,,,,, [-1]],,, [,, "44\\d{4}",,,,,,, [6]], [,, "44\\d{4}",,,, "440123",,, [6]],,, [,,,,,,,,, [-1]]],
        PG: [, [,, "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",,,,,,, [7, 8]], [,, "(?:64[1-9]|7730|85[02-46-9])\\d{4}|(?:3[0-2]|4[257]|5[34]|77[0-24]|9[78])\\d{5}",,,, "3123456"], [,, "77(?:3[1-9]|[5-9]\\d)\\d{4}|(?:7[0-689]|81)\\d{6}",,,, "70123456",,, [8]], [,, "180\\d{4}",,,, "1801234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "2(?:0[0-47]|7[568])\\d{4}",,,, "2751234",,, [7]], "PG", 675, "00|140[1-3]",,,,,, "00",, [[, "(\\d{3})(\\d{4})", "$1 $2", ["18|[2-69]|85"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["[78]"]]],, [,, "27[01]\\d{4}",,,, "2700123",,, [7]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PH: [, [,, "1800\\d{7,9}|(?:2|[89]\\d{4})\\d{5}|[2-8]\\d{8}|[28]\\d{7}",,,,,,, [6, 8, 9, 10, 11, 12, 13], [4, 5, 7]], [,, "(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\d{3}|88(?:22\\d\\d|42))\\d{4}|2\\d{5}(?:\\d{2})?|8[2-8]\\d{7}",,,, "21234567",,, [6, 8, 9, 10], [4, 5, 7]], [,, "(?:81[37]|9(?:0[5-9]|1[0-24-9]|2[0-35-9]|[35]\\d|4[235-9]|6[0-25-8]|7[1-9]|8[19]|9[4-9]))\\d{7}",,,, "9051234567",,, [10]], [,, "1800\\d{7,9}",,,, "180012345678",,, [11, 12, 13]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "PH", 63, "00", "0",,, "0",,,, [[, "(\\d)(\\d{5})", "$1 $2", ["2"], "(0$1)"], [, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"], [, "(\\d{4})(\\d{4,6})", "$1 $2", ["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2", "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"], "(0$1)"], [, "(\\d{5})(\\d{4})", "$1 $2", ["346|4(?:27|9[35])|883", "3469|4(?:279|9(?:30|56))|8834"], "(0$1)"], [, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|8[2-8]"], "(0$1)"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]], [, "(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PK: [, [,, "122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",,,,,,, [8, 9, 10, 11, 12], [5, 6, 7]], [,, "(?:(?:21|42)[2-9]|58[126])\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\d{5,6}",,,, "2123456789",,, [9, 10], [5, 6, 7, 8]], [,, "3(?:[014]\\d|2[0-5]|3[0-7]|55|64)\\d{7}",,,, "3012345678",,, [10]], [,, "800\\d{5}",,,, "80012345",,, [8]], [,, "900\\d{5}",,,, "90012345",,, [8]], [,,,,,,,,, [-1]], [,, "122\\d{6}",,,, "122044444",,, [9]], [,,,,,,,,, [-1]], "PK", 92, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["[89]0"], "0$1"], [, "(\\d{4})(\\d{5})", "$1 $2", ["1"]], [, "(\\d{3})(\\d{6,7})", "$1 $2", ["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])", "9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"], "(0$1)"], [, "(\\d{2})(\\d{7,8})", "$1 $2", ["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"], "(0$1)"], [, "(\\d{5})(\\d{5})", "$1 $2", ["58"], "(0$1)"], [, "(\\d{3})(\\d{7})", "$1 $2", ["3"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"], "(0$1)"], [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[24-9]"], "(0$1)"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}",,,, "21111825888",,, [11, 12]],,, [,,,,,,,,, [-1]]],
        PL: [, [,, "[1-57-9]\\d{6}(?:\\d{2})?|6\\d{5,8}",,,,,,, [6, 7, 8, 9]], [,, "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\d{6}|1(?:[0-8]\\d{5}|9\\d{3}(?:\\d{2})?))",,,, "123456789",,, [7, 9]], [,, "(?:45|5[0137]|6[069]|7[2389]|88)\\d{7}",,,, "512345678",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "70[01346-8]\\d{6}",,,, "701234567",,, [9]], [,, "801\\d{6}",,,, "801234567",,, [9]], [,,,,,,,,, [-1]], [,, "39\\d{7}",,,, "391234567",,, [9]], "PL", 48, "00",,,,,,,, [[, "(\\d{5})", "$1", ["19"]], [, "(\\d{3})(\\d{3})", "$1 $2", ["11|64"]], [, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1", "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]], [, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["64"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["39|45|5[0137]|6[0469]|7[02389]|8[08]"]], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[2-8]|[2-8]|9[145]"]]],, [,, "64\\d{4,7}",,,, "641234567"],,, [,,,,,,,,, [-1]], [,, "804\\d{6}",,,, "804123456",,, [9]],,, [,,,,,,,,, [-1]]],
        PM: [, [,, "[45]\\d{5}",,,,,,, [6]], [,, "(?:4[1-3]|50)\\d{4}",,,, "430123"], [,, "(?:4[02-4]|5[05])\\d{4}",,,, "551234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "PM", 508, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[45]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PR: [, [,, "(?:[589]\\d\\d|787)\\d{7}",,,,,,, [10], [7]], [,, "(?:787|939)[2-9]\\d{6}",,,, "7872345678",,,, [7]], [,, "(?:787|939)[2-9]\\d{6}",,,, "7872345678",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "PR", 1, "011", "1",,, "1",,, 1,,, [,,,,,,,,, [-1]],, "787|939", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PS: [, [,, "[2489]2\\d{6}|(?:1\\d|5)\\d{8}",,,,,,, [8, 9, 10], [7]], [,, "(?:22[2-47-9]|42[45]|82[01458]|92[369])\\d{5}",,,, "22234567",,, [8], [7]], [,, "5[69]\\d{7}",,,, "599123456",,, [9]], [,, "1800\\d{6}",,,, "1800123456",,, [10]], [,,,,,,,,, [-1]], [,, "1700\\d{6}",,,, "1700123456",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "PS", 970, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2489]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["5"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PT: [, [,, "(?:[26-9]\\d|30)\\d{7}",,,,,,, [9]], [,, "2(?:[12]\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\d{6}",,,, "212345678"], [,, "6[356]9230\\d{3}|(?:6[036]93|9(?:[1-36]\\d\\d|480))\\d{5}",,,, "912345678"], [,, "80[02]\\d{6}",,,, "800123456"], [,, "(?:6(?:0[178]|4[68])\\d|76(?:0[1-57]|1[2-47]|2[237]))\\d{5}",,,, "760123456"], [,, "80(?:8\\d|9[1579])\\d{5}",,,, "808123456"], [,, "884[0-4689]\\d{5}",,,, "884123456"], [,, "30\\d{7}",,,, "301234567"], "PT", 351, "00",,,,,,,, [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[12]"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[236-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "70(?:7\\d|8[17])\\d{5}",,,, "707123456"],,, [,, "600\\d{6}",,,, "600110000"]],
        PW: [, [,, "(?:[24-8]\\d\\d|345|900)\\d{4}",,,,,,, [7]], [,, "(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\d{4}",,,, "2771234"], [,, "(?:45[0-5]|6[2-4689]0|77\\d|88[0-4])\\d{4}",,,, "6201234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "PW", 680, "01[12]",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        PY: [, [,, "59\\d{4,6}|(?:[2-46-9]\\d|5[0-8])\\d{4,7}",,,,,,, [6, 7, 8, 9], [5]], [,, "(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\d|6[1-578]|75|8[0-8])|858)\\d{5,6}",,,, "212345678",,, [7, 8, 9], [5, 6]], [,, "9(?:51|6[129]|[78][1-6]|9[1-5])\\d{6}",,,, "961456789",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "8700[0-4]\\d{4}",,,, "870012345",,, [9]], "PY", 595, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3,6})", "$1 $2", ["[2-9]0"], "0$1"], [, "(\\d{2})(\\d{5})", "$1 $2", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"], [, "(\\d{3})(\\d{4,5})", "$1 $2", ["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["87"]], [, "(\\d{3})(\\d{6})", "$1 $2", ["9"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "[2-9]0\\d{4,7}",,,, "201234567"],,, [,,,,,,,,, [-1]]],
        QA: [, [,, "[2-7]\\d{7}|(?:2\\d\\d|800)\\d{4}",,,,,,, [7, 8]], [,, "4[04]\\d{6}",,,, "44123456",,, [8]], [,, "(?:28|[35-7]\\d)\\d{6}",,,, "33123456",,, [8]], [,, "800\\d{4}",,,, "8001234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "QA", 974, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["2[126]|8"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]]],, [,, "2(?:[12]\\d|61)\\d{4}",,,, "2123456",,, [7]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        RE: [, [,, "9769\\d{5}|(?:26|[68]\\d)\\d{7}",,,,,,, [9]], [,, "26(?:2\\d\\d|30[01])\\d{4}",,,, "262161234"], [,, "(?:69(?:2\\d\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\d|5[05]|6[0-26]|7[0-27]|8[0-8]|9[0-479]))|9769\\d)\\d{4}",,,, "692123456"], [,, "80\\d{7}",,,, "801234567"], [,, "89[1-37-9]\\d{6}",,,, "891123456"], [,, "8(?:1[019]|2[0156]|84|90)\\d{6}",,,, "810123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "RE", 262, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2689]"], "0$1"]],, [,,,,,,,,, [-1]], 1, "26[23]|69|[89]", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        RO: [, [,, "(?:[237]\\d|[89]0)\\d{7}|[23]\\d{5}",,,,,,, [6, 9]], [,, "[23][13-6]\\d{7}|(?:2(?:19\\d|[3-6]\\d9)|31\\d\\d)\\d\\d",,,, "211234567"], [,, "7[01]20\\d{5}|7(?:0[013-9]|1[01]|[2-7]\\d|8[03-8]|9[09])\\d{6}",,,, "712034567",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "90[0136]\\d{6}",,,, "900123456",,, [9]], [,, "801\\d{6}",,,, "801123456",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "RO", 40, "00", "0", " int ",, "0",,,, [[, "(\\d{3})(\\d{3})", "$1 $2", ["2[3-6]", "2[3-6]\\d9"], "0$1"], [, "(\\d{2})(\\d{4})", "$1 $2", ["219|31"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23]1"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[237-9]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "(?:37\\d|80[578])\\d{6}",,,, "372123456",,, [9]],,, [,,,,,,,,, [-1]]],
        RS: [, [,, "38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",,,,,,, [6, 7, 8, 9, 10, 11, 12], [4, 5]], [,, "(?:11[1-9]\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\d))\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\d{4,9}",,,, "10234567",,, [7, 8, 9, 10, 11, 12], [4, 5, 6]], [,, "6(?:[0-689]|7\\d)\\d{6,7}",,,, "601234567",,, [8, 9, 10]], [,, "800\\d{3,9}",,,, "80012345"], [,, "(?:78\\d|90[0169])\\d{3,7}",,,, "90012345",,, [6, 7, 8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "RS", 381, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3,9})", "$1 $2", ["(?:2[389]|39)0|[7-9]"], "0$1"], [, "(\\d{2})(\\d{5,10})", "$1 $2", ["[1-36]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "7[06]\\d{4,10}",,,, "700123456"],,, [,,,,,,,,, [-1]]],
        RU: [, [,, "[347-9]\\d{9}",,,,,,, [10], [7]], [,, "(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}",,,, "3011234567",,,, [7]], [,, "9\\d{9}",,,, "9123456789"], [,, "80[04]\\d{7}",,,, "8001234567"], [,, "80[39]\\d{7}",,,, "8091234567"], [,,,,,,,,, [-1]], [,, "808\\d{7}",,,, "8081234567"], [,,,,,,,,, [-1]], "RU", 7, "810", "8",,, "8",, "8~10",, [[, "(\\d{3})(\\d{2})(\\d{2})", "$1-$2-$3", ["[0-79]"]], [, "(\\d{4})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-8]|2[1-9])", "7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))", "7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"], "8 ($1)",, 1], [, "(\\d{5})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-68]|2[1-9])", "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))", "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"], "8 ($1)",, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)",, 1], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)",, 1]], [[, "(\\d{4})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-8]|2[1-9])", "7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))", "7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"], "8 ($1)",, 1], [, "(\\d{5})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-68]|2[1-9])", "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))", "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"], "8 ($1)",, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)",, 1], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)",, 1]], [,,,,,,,,, [-1]], 1, "3[04-689]|[489]", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        RW: [, [,, "(?:06|[27]\\d\\d|[89]00)\\d{6}",,,,,,, [8, 9]], [,, "(?:06|2[23568]\\d)\\d{6}",,,, "250123456"], [,, "7[238]\\d{7}",,,, "720123456",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "900\\d{6}",,,, "900123456",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "RW", 250, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SA: [, [,, "92\\d{7}|(?:[15]|8\\d)\\d{8}",,,,,,, [9, 10], [7]], [,, "1(?:1\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}",,,, "112345678",,, [9], [7]], [,, "5(?:[013-689]\\d|7[0-36-8])\\d{6}",,,, "512345678",,, [9]], [,, "800\\d{7}",,,, "8001234567",,, [10]], [,, "925\\d{6}",,,, "925012345",,, [9]], [,, "920\\d{6}",,,, "920012345",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SA", 966, "00", "0",,, "0",,,, [[, "(\\d{4})(\\d{5})", "$1 $2", ["9"]], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["81"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "811\\d{7}",,,, "8110123456",,, [10]],,, [,,,,,,,,, [-1]]],
        SB: [, [,, "(?:[1-6]|[7-9]\\d\\d)\\d{4}",,,,,,, [5, 7]], [,, "(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}",,,, "40123",,, [5]], [,, "48\\d{3}|(?:(?:7[1-9]|8[4-9])\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\d{4}",,,, "7421234"], [,, "1[38]\\d{3}",,,, "18123",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "5[12]\\d{3}",,,, "51123",,, [5]], "SB", 677, "0[01]",,,,,,,, [[, "(\\d{2})(\\d{5})", "$1 $2", ["7|8[4-9]|9(?:[1-8]|9[0-8])"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SC: [, [,, "8000\\d{3}|(?:[249]\\d|64)\\d{5}",,,,,,, [7]], [,, "4[2-46]\\d{5}",,,, "4217123"], [,, "2[5-8]\\d{5}",,,, "2510123"], [,, "8000\\d{3}",,,, "8000000"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "971\\d{4}|(?:64|95)\\d{5}",,,, "6412345"], "SC", 248, "010|0[0-2]",,,,,, "00",, [[, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[246]|9[57]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SD: [, [,, "[19]\\d{8}",,,,,,, [9]], [,, "1(?:5\\d|8[35-7])\\d{6}",,,, "153123456"], [,, "(?:1[0-2]|9[0-3569])\\d{7}",,,, "911231234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SD", 249, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[19]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SE: [, [,, "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",,,,,,, [6, 7, 8, 9, 10, 12]], [,, "(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\d)\\d|90[1-9])\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\d{5,6}",,,, "8123456",,, [7, 8, 9]], [,, "7[02369]\\d{7}",,,, "701234567",,, [9]], [,, "20\\d{4,7}",,,, "20123456",,, [6, 7, 8, 9]], [,, "649\\d{6}|9(?:00|39|44)[1-8]\\d{3,6}",,,, "9001234567",,, [7, 8, 9, 10]], [,, "77[0-7]\\d{6}",,,, "771234567",,, [9]], [,, "75[1-8]\\d{6}",,,, "751234567",,, [9]], [,,,,,,,,, [-1]], "SE", 46, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["20"], "0$1"], [, "(\\d{3})(\\d{4})", "$1-$2", ["9(?:00|39|44)"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})", "$1-$2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"], "0$1"], [, "(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1"], [, "(\\d{3})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1"], [, "(\\d{3})(\\d{2,3})(\\d{3})", "$1-$2 $3", ["9(?:00|39|44)"], "0$1"], [, "(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["10|7"], "0$1"], [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1-$2 $3 $4", ["9"], "0$1"], [, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4 $5", ["[26]"], "0$1"]], [[, "(\\d{2})(\\d{2,3})(\\d{2})", "$1 $2 $3", ["20"]], [, "(\\d{3})(\\d{4})", "$1 $2", ["9(?:00|39|44)"]], [, "(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"]], [, "(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]], [, "(\\d{3})(\\d{2,3})(\\d{2})", "$1 $2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"]], [, "(\\d{3})(\\d{2,3})(\\d{3})", "$1 $2 $3", ["9(?:00|39|44)"]], [, "(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"]], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["10|7"]], [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["8"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"]], [, "(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["9"]], [, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]"]]], [,, "74[02-9]\\d{6}",,,, "740123456",,, [9]],,, [,,,,,,,,, [-1]], [,, "10[1-8]\\d{6}",,,, "102345678",,, [9]],,, [,, "(?:25[245]|67[3-68])\\d{9}",,,, "254123456789",,, [12]]],
        SG: [, [,, "(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",,,,,,, [8, 10, 11]], [,, "662[0-24-9]\\d{4}|6(?:[1-578]\\d|6[013-57-9]|9[0-35-9])\\d{5}",,,, "61234567",,, [8]], [,, "(?:8(?:[1-8]\\d\\d|9(?:[014]\\d|2[1-9]|3[0-489]))|9[0-8]\\d\\d)\\d{4}",,,, "81234567",,, [8]], [,, "(?:18|8)00\\d{7}",,,, "18001234567",,, [10, 11]], [,, "1900\\d{7}",,,, "19001234567",,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "(?:3[12]\\d\\d|666[46])\\d{4}",,,, "31234567",,, [8]], "SG", 65, "0[0-3]\\d",,,,,,,, [[, "(\\d{4,5})", "$1", ["1[013-9]|77", "1(?:[013-8]|9(?:0[1-9]|[1-9]))|77"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["[369]|8[1-9]"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]], [, "(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]], [[, "(\\d{4})(\\d{4})", "$1 $2", ["[369]|8[1-9]"]], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]], [, "(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]], [, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "7000\\d{7}",,,, "70001234567",,, [11]],,, [,,,,,,,,, [-1]]],
        SH: [, [,, "(?:[256]\\d|8)\\d{3}",,,,,,, [4, 5]], [,, "2(?:[0-57-9]\\d|6[4-9])\\d\\d",,,, "22158"], [,, "[56]\\d{4}",,,, "51234",,, [5]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "262\\d\\d",,,, "26212",,, [5]], "SH", 290, "00",,,,,,,,,, [,,,,,,,,, [-1]], 1, "[256]", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SI: [, [,, "[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",,,,,,, [5, 6, 7, 8]], [,, "(?:[1-357][2-8]|4[24-8])\\d{6}",,,, "12345678",,, [8], [7]], [,, "65(?:1\\d|55|[67]0)\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\d{6}",,,, "31234567",,, [8]], [,, "80\\d{4,6}",,,, "80123456",,, [6, 7, 8]], [,, "89[1-3]\\d{2,5}|90\\d{4,6}",,,, "90123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "(?:59\\d\\d|8(?:1(?:[67]\\d|8[01389])|2(?:0\\d|2[0378]|8[0-2489])|3[389]\\d))\\d{4}",,,, "59012345",,, [8]], "SI", 386, "00|10(?:22|66|88|99)", "0",,, "0",, "00",, [[, "(\\d{2})(\\d{3,6})", "$1 $2", ["8[09]|9"], "0$1"], [, "(\\d{3})(\\d{5})", "$1 $2", ["59|8"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37][01]|4[0139]|51|6"], "0$1"], [, "(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-57]"], "(0$1)"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SJ: [, [,, "0\\d{4}|(?:[4589]\\d|79)\\d{6}",,,,,,, [5, 8]], [,, "79\\d{6}",,,, "79123456",,, [8]], [,, "(?:4[015-8]|5[89]|9\\d)\\d{6}",,,, "41234567",,, [8]], [,, "80[01]\\d{5}",,,, "80012345",,, [8]], [,, "82[09]\\d{5}",,,, "82012345",,, [8]], [,, "810(?:0[0-6]|[2-8]\\d)\\d{3}",,,, "81021234",,, [8]], [,, "880\\d{5}",,,, "88012345",,, [8]], [,, "85[0-5]\\d{5}",,,, "85012345",,, [8]], "SJ", 47, "00",,,,,,,,,, [,,,,,,,,, [-1]],, "79", [,,,,,,,,, [-1]], [,, "(?:0[2-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}",,,, "02000"],,, [,, "81[23]\\d{5}",,,, "81212345",,, [8]]],
        SK: [, [,, "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",,,,,,, [6, 7, 9]], [,, "(?:2(?:16|[2-9]\\d{3})|(?:(?:[3-5][1-8]\\d|819)\\d|601[1-5])\\d)\\d{4}|(?:2|[3-5][1-8])1[67]\\d{3}|[3-5][1-8]16\\d\\d",,,, "221234567"], [,, "909[1-9]\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\d)\\d{6}",,,, "912123456",,, [9]], [,, "800\\d{6}",,,, "800123456",,, [9]], [,, "9(?:00|[78]\\d)\\d{6}",,,, "900123456",,, [9]], [,, "8[5-9]\\d{7}",,,, "850123456",,, [9]], [,,,,,,,,, [-1]], [,, "6(?:02|5[0-4]|9[0-6])\\d{6}",,,, "690123456",,, [9]], "SK", 421, "00", "0",,, "0",,,, [[, "(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"], [, "(\\d{4})(\\d{3})", "$1 $2", ["909", "9090"], "0$1"], [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]], [[, "(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"], [, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"], [, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]], [,, "9090\\d{3}",,,, "9090123",,, [7]],,, [,, "9090\\d{3}|(?:602|8(?:00|[5-9]\\d)|9(?:00|[78]\\d))\\d{6}",,,,,,, [7, 9]], [,, "96\\d{7}",,,, "961234567",,, [9]],,, [,,,,,,,,, [-1]]],
        SL: [, [,, "(?:[2378]\\d|66|99)\\d{6}",,,,,,, [8], [6]], [,, "22[2-4][2-9]\\d{4}",,,, "22221234",,,, [6]], [,, "(?:25|3[013-5]|66|7[5-9]|8[08]|99)\\d{6}",,,, "25123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SL", 232, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{6})", "$1 $2", ["[236-9]"], "(0$1)"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SM: [, [,, "(?:0549|[5-7]\\d)\\d{6}",,,,,,, [8, 10], [6]], [,, "0549(?:8[0157-9]|9\\d)\\d{4}",,,, "0549886377",,, [10], [6]], [,, "6[16]\\d{6}",,,, "66661212",,, [8]], [,,,,,,,,, [-1]], [,, "7[178]\\d{6}",,,, "71123456",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "5[158]\\d{6}",,,, "58001110",,, [8]], "SM", 378, "00",,,, "([89]\\d{5})$", "0549$1",,, [[, "(\\d{6})", "$1", ["[89]"]], [, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]], [, "(\\d{4})(\\d{6})", "$1 $2", ["0"]]], [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]], [, "(\\d{4})(\\d{6})", "$1 $2", ["0"]]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SN: [, [,, "(?:[378]\\d{4}|93330)\\d{4}",,,,,,, [9]], [,, "3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\d{5}",,,, "301012345"], [,, "7(?:[06-8]\\d|21|90)\\d{6}",,,, "701234567"], [,, "800\\d{6}",,,, "800123456"], [,, "88[4689]\\d{6}",,,, "884123456"], [,, "81[02468]\\d{6}",,,, "810123456"], [,,,,,,,,, [-1]], [,, "93330\\d{4}|3(?:392|9[01]\\d)\\d{5}",,,, "933301234"], "SN", 221, "00",,,,,,,, [[, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[379]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SO: [, [,, "[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",,,,,,, [6, 7, 8, 9]], [,, "(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\d{5}|(?:[134]\\d|8[125])\\d{4}",,,, "4012345",,, [6, 7]], [,, "28\\d{5}|(?:6[1-9]|79)\\d{6,7}|(?:15|24|(?:3[59]|4[89]|8[08])\\d|60|7[1-8]|9(?:0\\d|[2-9]))\\d{6}",,,, "71123456",,, [7, 8, 9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SO", 252, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{4})", "$1 $2", ["8[125]"]], [, "(\\d{6})", "$1", ["[134]"]], [, "(\\d)(\\d{6})", "$1 $2", ["[15]|2[0-79]|3[0-46-8]|4[0-7]"]], [, "(\\d)(\\d{7})", "$1 $2", ["24|[67]"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3478]|64|90"]], [, "(\\d{2})(\\d{5,7})", "$1 $2", ["1|28|6[1-35-9]|9[2-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SR: [, [,, "(?:[2-5]|68|[78]\\d)\\d{5}",,,,,,, [6, 7]], [,, "(?:2[1-3]|3[0-7]|(?:4|68)\\d|5[2-58])\\d{4}",,,, "211234"], [,, "(?:7[124-7]|8[125-9])\\d{5}",,,, "7412345",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "56\\d{4}",,,, "561234",,, [6]], "SR", 597, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})", "$1-$2-$3", ["56"]], [, "(\\d{3})(\\d{3})", "$1-$2", ["[2-5]"]], [, "(\\d{3})(\\d{4})", "$1-$2", ["[6-8]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SS: [, [,, "[19]\\d{8}",,,,,,, [9]], [,, "18\\d{7}",,,, "181234567"], [,, "(?:12|9[1257])\\d{7}",,,, "977123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SS", 211, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[19]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        ST: [, [,, "(?:22|9\\d)\\d{5}",,,,,,, [7]], [,, "22\\d{5}",,,, "2221234"], [,, "900[5-9]\\d{3}|9(?:0[1-9]|[89]\\d)\\d{4}",,,, "9812345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "ST", 239, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[29]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SV: [, [,, "[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?",,,,,,, [7, 8, 11]], [,, "2[1-6]\\d{6}",,,, "21234567",,, [8]], [,, "[67]\\d{7}",,,, "70123456",,, [8]], [,, "800\\d{4}(?:\\d{4})?",,,, "8001234",,, [7, 11]], [,, "900\\d{4}(?:\\d{4})?",,,, "9001234",,, [7, 11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SV", 503, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[89]"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["[267]"]], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[89]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SX: [, [,, "7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "7215(?:4[2-8]|8[239]|9[056])\\d{4}",,,, "7215425678",,,, [7]], [,, "7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}",,,, "7215205678",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002123456"], [,, "900[2-9]\\d{6}",,,, "9002123456"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "SX", 1, "011", "1",,, "1|(5\\d{6})$", "721$1",,,,, [,,,,,,,,, [-1]],, "721", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SY: [, [,, "[1-39]\\d{8}|[1-5]\\d{7}",,,,,,, [8, 9], [6, 7]], [,, "[12]1\\d{6,7}|(?:1(?:[2356]|4\\d)|2[235]|3(?:[13]\\d|4)|4[13]|5[1-3])\\d{6}",,,, "112345678",,,, [6, 7]], [,, "9(?:22|[3-589]\\d|6[024-9])\\d{6}",,,, "944567890",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "SY", 963, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-5]"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1",, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        SZ: [, [,, "0800\\d{4}|(?:[237]\\d|900)\\d{6}",,,,,,, [8, 9]], [,, "[23][2-5]\\d{6}",,,, "22171234",,, [8]], [,, "7[6-9]\\d{6}",,,, "76123456",,, [8]], [,, "0800\\d{4}",,,, "08001234",,, [8]], [,, "900\\d{6}",,,, "900012345",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "70\\d{6}",,,, "70012345",,, [8]], "SZ", 268, "00",,,,,,,, [[, "(\\d{4})(\\d{4})", "$1 $2", ["[0237]"]], [, "(\\d{5})(\\d{4})", "$1 $2", ["9"]]],, [,,,,,,,,, [-1]],,, [,, "0800\\d{4}",,,,,,, [8]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TA: [, [,, "8\\d{3}",,,,,,, [4]], [,, "8\\d{3}",,,, "8999"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TA", 290, "00",,,,,,,,,, [,,,,,,,,, [-1]],, "8", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TC: [, [,, "(?:[58]\\d\\d|649|900)\\d{7}",,,,,,, [10], [7]], [,, "649(?:712|9(?:4\\d|50))\\d{4}",,,, "6497121234",,,, [7]], [,, "649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-8])|4[34][1-3])\\d{4}",,,, "6492311234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,, "64971[01]\\d{4}",,,, "6497101234",,,, [7]], "TC", 1, "011", "1",,, "1|([2-479]\\d{6})$", "649$1",,,,, [,,,,,,,,, [-1]],, "649", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TD: [, [,, "(?:22|[69]\\d|77)\\d{6}",,,,,,, [8]], [,, "22(?:[37-9]0|5[0-5]|6[89])\\d{4}",,,, "22501234"], [,, "(?:6[023568]|77|9\\d)\\d{6}",,,, "63012345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TD", 235, "00|16",,,,,, "00",, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2679]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TG: [, [,, "[279]\\d{7}",,,,,,, [8]], [,, "2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\d{5}",,,, "22212345"], [,, "(?:7[09]|9[0-36-9])\\d{6}",,,, "90112345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TG", 228, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[279]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TH: [, [,, "1\\d{8,9}|(?:[2-57]|[689]\\d)\\d{7}",,,,,,, [8, 9, 10]], [,, "(?:2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}",,,, "21234567",,, [8]], [,, "(?:14|6[1-6]|[89]\\d)\\d{7}",,,, "812345678",,, [9]], [,, "1800\\d{6}",,,, "1800123456",,, [10]], [,, "1900\\d{6}",,,, "1900123456",,, [10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "6[08]\\d{7}",,,, "601234567",,, [9]], "TH", 66, "00[1-9]", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["14|[3-9]"], "0$1"], [, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TJ: [, [,, "(?:00|11|[3-579]\\d|88)\\d{7}",,,,,,, [9], [3, 5, 6, 7]], [,, "(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}",,,, "372123456",,,, [3, 5, 6, 7]], [,, "41[18]\\d{6}|(?:00|11|5[05]|7[07]|88|9\\d)\\d{7}",,,, "917123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TJ", 992, "810", "8",,, "8",, "8~10",, [[, "(\\d{6})(\\d)(\\d{2})", "$1 $2 $3", ["331", "3317"],,, 1], [, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[34]7|91[78]"],,, 1], [, "(\\d{4})(\\d)(\\d{4})", "$1 $2 $3", ["3"],,, 1], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[0457-9]|11"],,, 1]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TK: [, [,, "[2-47]\\d{3,6}",,,,,,, [4, 5, 6, 7]], [,, "(?:2[2-4]|[34]\\d)\\d{2,5}",,,, "3101"], [,, "7[2-4]\\d{2,5}",,,, "7290"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TK", 690, "00",,,,,,,,,, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TL: [, [,, "7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",,,,,,, [7, 8]], [,, "(?:2[1-5]|3[1-9]|4[1-4])\\d{5}",,,, "2112345",,, [7]], [,, "7[2-8]\\d{6}",,,, "77212345",,, [8]], [,, "80\\d{5}",,,, "8012345",,, [7]], [,, "90\\d{5}",,,, "9012345",,, [7]], [,,,,,,,,, [-1]], [,, "70\\d{5}",,,, "7012345",,, [7]], [,,,,,,,,, [-1]], "TL", 670, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[2-489]|70"]], [, "(\\d{4})(\\d{4})", "$1 $2", ["7"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TM: [, [,, "[1-6]\\d{7}",,,,,,, [8]], [,, "(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}",,,, "12345678"], [,, "6\\d{7}",,,, "66123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TM", 993, "810", "8",,, "8",, "8~10",, [[, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["12"], "(8 $1)"], [, "(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-5]"], "(8 $1)"], [, "(\\d{2})(\\d{6})", "$1 $2", ["6"], "8 $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TN: [, [,, "[2-57-9]\\d{7}",,,,,,, [8]], [,, "81200\\d{3}|(?:3[0-2]|7\\d)\\d{6}",,,, "30010123"], [,, "3(?:001|[12]40)\\d{4}|(?:(?:[259]\\d|4[0-6])\\d|3(?:1[1-35]|6[0-4]|91))\\d{5}",,,, "20123456"], [,, "8010\\d{4}",,,, "80101234"], [,, "88\\d{6}",,,, "88123456"], [,, "8[12]10\\d{4}",,,, "81101234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TN", 216, "00",,,,,,,, [[, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-57-9]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TO: [, [,, "(?:0800|[5-8]\\d{3})\\d{3}|[2-8]\\d{4}",,,,,,, [5, 7]], [,, "(?:2\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\d{3}",,,, "20123",,, [5]], [,, "6(?:3[02]|8[5-9])\\d{4}|(?:6[09]|7\\d|8[46-9])\\d{5}",,,, "7715123",,, [7]], [,, "0800\\d{3}",,,, "0800222",,, [7]], [,, "55[04]\\d{4}",,,, "5501234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TO", 676, "00",,,,,,,, [[, "(\\d{2})(\\d{3})", "$1-$2", ["[2-4]|50|6[09]|7[0-24-69]|8[05]"]], [, "(\\d{4})(\\d{3})", "$1 $2", ["0"]], [, "(\\d{3})(\\d{4})", "$1 $2", ["[5-8]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TR: [, [,, "(?:4|8\\d{5})\\d{6}|(?:[2-58]\\d\\d|900)\\d{7}",,,,,,, [7, 10, 12]], [,, "(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}",,,, "2123456789",,, [10]], [,, "56161\\d{5}|5(?:0[15-7]|1[06]|24|[34]\\d|5[1-59]|9[46])\\d{7}",,,, "5012345678",,, [10]], [,, "800\\d{7}(?:\\d{2})?",,,, "8001234567",,, [10, 12]], [,, "(?:8[89]8|900)\\d{7}",,,, "9001234567",,, [10]], [,,,,,,,,, [-1]], [,, "592(?:21[12]|461)\\d{4}",,,, "5922121234",,, [10]], [,,,,,,,,, [-1]], "TR", 90, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d)(\\d{3})", "$1 $2 $3", ["444"],,, 1], [, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[0589]|90"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5(?:[0-59]|61)", "5(?:[0-59]|616)", "5(?:[0-59]|6161)"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)",, 1], [, "(\\d{3})(\\d{3})(\\d{6})", "$1 $2 $3", ["80"], "0$1",, 1]], [[, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[0589]|90"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5(?:[0-59]|61)", "5(?:[0-59]|616)", "5(?:[0-59]|6161)"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)",, 1], [, "(\\d{3})(\\d{3})(\\d{6})", "$1 $2 $3", ["80"], "0$1",, 1]], [,, "512\\d{7}",,,, "5123456789",,, [10]],,, [,, "444\\d{4}",,,,,,, [7]], [,, "(?:444|850\\d{3})\\d{4}",,,, "4441444",,, [7, 10]],,, [,,,,,,,,, [-1]]],
        TT: [, [,, "(?:[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "868(?:2(?:01|1[89]|[23]\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}",,,, "8682211234",,,, [7]], [,, "868(?:2(?:6[346-9]|[7-9]\\d)|[37](?:0[1-9]|1[02-9]|[2-9]\\d)|4[6-9]\\d|6(?:20|78|8\\d))\\d{4}",,,, "8682911234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "TT", 1, "011", "1",,, "1|([2-46-8]\\d{6})$", "868$1",,,,, [,,,,,,,,, [-1]],, "868", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, "868619\\d{4}",,,, "8686191234",,,, [7]]],
        TV: [, [,, "(?:2|7\\d\\d|90)\\d{4}",,,,,,, [5, 6, 7]], [,, "2[02-9]\\d{3}",,,, "20123",,, [5]], [,, "(?:7[01]\\d|90)\\d{4}",,,, "901234",,, [6, 7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "TV", 688, "00",,,,,,,, [[, "(\\d{2})(\\d{3})", "$1 $2", ["2"]], [, "(\\d{2})(\\d{4})", "$1 $2", ["90"]], [, "(\\d{2})(\\d{5})", "$1 $2", ["7"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        TW: [, [,, "[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",,,,,,, [7, 8, 9, 10, 11]], [,, "(?:2[2-8]\\d|370|55[01]|7[1-9])\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\d)|1[023]\\d)\\d{4,5}|(?:[239]\\d\\d|4(?:0[56]|12|49))\\d{5})|6(?:[01]\\d{7}|4(?:0[56]|12|24|4[09])\\d{4,5})|8(?:(?:2(?:3\\d|4[0-269]|[578]0|66)|36[24-9]|90\\d\\d)\\d{4}|4(?:0[56]|12|24|4[09])\\d{4,5})|(?:2(?:2(?:0\\d\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\d|1[0-4])|(?:4\\d|5[0-49]|6[0-29]|7[0-5])\\d)\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\d\\d|4(?:2(?:[089]\\d|7[1-9])|(?:3[0-4]|[78]\\d|9[01])\\d))\\d)\\d{3}",,,, "221234567",,, [8, 9]], [,, "(?:40001[0-2]|9[0-8]\\d{4})\\d{3}",,,, "912345678",,, [9]], [,, "80[0-79]\\d{6}|800\\d{5}",,,, "800123456",,, [8, 9]], [,, "20(?:[013-9]\\d\\d|2)\\d{4}",,,, "203123456",,, [7, 9]], [,,,,,,,,, [-1]], [,, "99\\d{7}",,,, "990123456",,, [9]], [,, "7010(?:[0-2679]\\d|3[0-7]|8[0-5])\\d{5}|70\\d{8}",,,, "7012345678",,, [10, 11]], "TW", 886, "0(?:0[25-79]|19)", "0", "#",, "0",,,, [[, "(\\d{2})(\\d)(\\d{4})", "$1 $2 $3", ["202"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[258]0"], "0$1"], [, "(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]", "[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"], "0$1"], [, "(\\d{2})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["7"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "50[0-46-9]\\d{6}",,,, "500123456",,, [9]],,, [,,,,,,,,, [-1]]],
        TZ: [, [,, "(?:[26-8]\\d|41|90)\\d{7}",,,,,,, [9]], [,, "2[2-8]\\d{7}",,,, "222345678"], [,, "(?:6[2-9]|7[13-9])\\d{7}",,,, "621234567"], [,, "80[08]\\d{6}",,,, "800123456"], [,, "90\\d{7}",,,, "900123456"], [,, "8(?:40|6[01])\\d{6}",,,, "840123456"], [,,,,,,,,, [-1]], [,, "41\\d{7}",,,, "412345678"], "TZ", 255, "00[056]", "0",,, "0",,,, [[, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[24]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[67]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,, "(?:8(?:[04]0|6[01])|90\\d)\\d{6}"], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        UA: [, [,, "[89]\\d{9}|[3-9]\\d{8}",,,,,,, [9, 10], [5, 6, 7]], [,, "(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}",,,, "311234567",,, [9], [5, 6, 7]], [,, "(?:50|6[36-8]|7[1-3]|9[1-9])\\d{7}",,,, "501234567",,, [9]], [,, "800[1-8]\\d{5,6}",,,, "800123456"], [,, "900[239]\\d{5,6}",,,, "900212345"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "89[1-579]\\d{6}",,,, "891234567",,, [9]], "UA", 380, "00", "0",,, "0",, "0~0",, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]", "6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["4[45][0-5]|5(?:0|6[37])|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]", "4[45][0-5]|5(?:0|6(?:3[14-7]|7))|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]"], "0$1"], [, "(\\d{4})(\\d{5})", "$1 $2", ["[3-6]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        UG: [, [,, "800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",,,,,,, [9], [5, 6, 7]], [,, "20(?:(?:(?:24|81)0|30[67])\\d|6(?:00[0-2]|30[0-4]))\\d{3}|(?:20(?:[0147]\\d|2[5-9]|32|5[0-4]|6[15-9])|[34]\\d{3})\\d{5}",,,, "312345678",,,, [5, 6, 7]], [,, "7260\\d{5}|7(?:[0157-9]\\d|20|36|4[0-4])\\d{6}",,,, "712345678"], [,, "800[1-3]\\d{5}",,,, "800123456"], [,, "90[1-3]\\d{6}",,,, "901123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "UG", 256, "00[057]", "0",,, "0",,,, [[, "(\\d{4})(\\d{5})", "$1 $2", ["202", "2024"], "0$1"], [, "(\\d{3})(\\d{6})", "$1 $2", ["[27-9]|4(?:6[45]|[7-9])"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["[34]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        US: [, [,, "[2-9]\\d{9}",,,,,,, [10], [7]], [,, "(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[0179]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}",,,, "2015550123",,,, [7]], [,, "(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[0179]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}",,,, "2015550123",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "US", 1, "011", "1",,, "1",,, 1, [[, "(\\d{3})(\\d{4})", "$1-$2", ["[2-9]"]], [, "(\\d{3})(\\d{3})(\\d{4})", "($1) $2-$3", ["[2-9]"],,, 1]], [[, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-9]"]]], [,,,,,,,,, [-1]], 1,, [,,,,,,,,, [-1]], [,, "710[2-9]\\d{6}",,,, "7102123456"],,, [,,,,,,,,, [-1]]],
        UY: [, [,, "(?:[249]\\d\\d|80)\\d{5}|9\\d{6}",,,,,,, [7, 8]], [,, "(?:2\\d|4[2-7])\\d{6}",,,, "21231234",,, [8], [7]], [,, "9[1-9]\\d{6}",,,, "94231234",,, [8]], [,, "80[05]\\d{4}",,,, "8001234",,, [7]], [,, "90[0-8]\\d{4}",,,, "9001234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "UY", 598, "0(?:0|1[3-9]\\d)", "0", " int. ",, "0",, "00",, [[, "(\\d{3})(\\d{4})", "$1 $2", ["8|90"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"], [, "(\\d{4})(\\d{4})", "$1 $2", ["[24]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        UZ: [, [,, "[679]\\d{8}",,,,,,, [9]], [,, "78(?:1(?:13|2[02]|50)|2(?:10|2[139]|98)|77[01])\\d{4}|(?:6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\d\\d|7(?:[23]\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|1[12]\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\d{5}",,,, "669050123"], [,, "(?:6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:(?:11|7\\d)\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\d)\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\d|7[0-4])|(?:5[67]|7\\d)\\d|6(?:2[0-26]|8\\d)))|7(?:0\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\d|41[179]|5(?:[349]\\d|5[0-2])|7(?:0[017]|[13]\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07])))|9[0-57-9]\\d{3})\\d{4}",,,, "912345678"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "UZ", 998, "810", "8",,, "8",, "8~10",, [[, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[679]"], "8 $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        VA: [, [,, "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",,,,,,, [6, 7, 8, 9, 10, 11, 12]], [,, "06698\\d{1,6}",,,, "0669812345",,, [6, 7, 8, 9, 10, 11]], [,, "3[1-9]\\d{8}|3[2-9]\\d{7}",,,, "3123456789",,, [9, 10]], [,, "80(?:0\\d{3}|3)\\d{3}",,,, "800123456",,, [6, 9]], [,, "(?:0878\\d\\d|89(?:2|4[5-9]\\d))\\d{3}|89[45][0-4]\\d\\d|(?:1(?:44|6[346])|89(?:5[5-9]|9))\\d{6}",,,, "899123456",,, [6, 8, 9, 10]], [,, "84(?:[08]\\d{3}|[17])\\d{3}",,,, "848123456",,, [6, 9]], [,, "1(?:78\\d|99)\\d{6}",,,, "1781234567",,, [9, 10]], [,, "55\\d{8}",,,, "5512345678",,, [10]], "VA", 39, "00",,,,,,,,,, [,,,,,,,,, [-1]],, "06698", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, "3[2-8]\\d{9,10}",,,, "33101234501",,, [11, 12]]],
        VC: [, [,, "(?:[58]\\d\\d|784|900)\\d{7}",,,,,,, [10], [7]], [,, "784(?:266|3(?:6[6-9]|7\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}",,,, "7842661234",,,, [7]], [,, "784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4]))\\d{4}",,,, "7844301234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "VC", 1, "011", "1",,, "1|([2-7]\\d{6})$", "784$1",,,,, [,,,,,,,,, [-1]],, "784", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        VE: [, [,, "[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",,,,,,, [10], [7]], [,, "(?:2(?:12|3[457-9]|[467]\\d|[58][1-9]|9[1-6])|[4-6]00)\\d{7}",,,, "2121234567",,,, [7]], [,, "4(?:1[24-8]|2[46])\\d{7}",,,, "4121234567"], [,, "800\\d{7}",,,, "8001234567"], [,, "90[01]\\d{7}",,,, "9001234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "VE", 58, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{7})", "$1-$2", ["[24-689]"], "0$1", "$CC $1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "501\\d{7}",,,, "5010123456",,,, [7]],,, [,,,,,,,,, [-1]]],
        VG: [, [,, "(?:284|[58]\\d\\d|900)\\d{7}",,,,,,, [10], [7]], [,, "284496[0-5]\\d{3}|284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\d{4}",,,, "2842291234",,,, [7]], [,, "284496[6-9]\\d{3}|284(?:3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|99)|54[0-57])\\d{4}",,,, "2843001234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "VG", 1, "011", "1",,, "1|([2-578]\\d{6})$", "284$1",,,,, [,,,,,,,,, [-1]],, "284", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        VI: [, [,, "[58]\\d{9}|(?:34|90)0\\d{7}",,,,,,, [10], [7]], [,, "340(?:2(?:0[12]|2[06-8]|4[49]|77)|3(?:32|44)|4(?:22|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\d)|884|998)\\d{4}",,,, "3406421234",,,, [7]], [,, "340(?:2(?:0[12]|2[06-8]|4[49]|77)|3(?:32|44)|4(?:22|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\d)|884|998)\\d{4}",,,, "3406421234",,,, [7]], [,, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}",,,, "8002345678"], [,, "900[2-9]\\d{6}",,,, "9002345678"], [,,,,,,,,, [-1]], [,, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}",,,, "5002345678"], [,,,,,,,,, [-1]], "VI", 1, "011", "1",,, "1|([2-9]\\d{6})$", "340$1",, 1,,, [,,,,,,,,, [-1]],, "340", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        VN: [, [,, "[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",,,,,,, [7, 8, 9, 10]], [,, "2(?:0[3-9]|1[0-689]|2[0-25-9]|3[2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|8[2-79]|9[0-4679])\\d{7}",,,, "2101234567",,, [10]], [,, "(?:52[238]|8(?:79|9[689])|99[013-9])\\d{6}|(?:3\\d|5[689]|7[06-9]|8[1-68]|9[0-8])\\d{7}",,,, "912345678",,, [9]], [,, "1800\\d{4,6}|12(?:03|28)\\d{4}",,,, "1800123456",,, [8, 9, 10]], [,, "1900\\d{4,6}",,,, "1900123456",,, [8, 9, 10]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "672\\d{6}",,,, "672012345",,, [9]], "VN", 84, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[17]99"], "0$1",, 1], [, "(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1",, 1], [, "(\\d{3})(\\d{4,5})", "$1 $2", ["69"], "0$1",, 1], [, "(\\d{4})(\\d{4,6})", "$1 $2", ["1"],,, 1], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1",, 1], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1",, 1], [, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1",, 1]], [[, "(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1",, 1], [, "(\\d{4})(\\d{4,6})", "$1 $2", ["1"],,, 1], [, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1",, 1], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1",, 1], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1",, 1], [, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1",, 1]], [,,,,,,,,, [-1]],,, [,, "[17]99\\d{4}|69\\d{5,6}",,,,,,, [7, 8]], [,, "(?:[17]99|80\\d)\\d{4}|69\\d{5,6}",,,, "1992000",,, [7, 8]],,, [,,,,,,,,, [-1]]],
        VU: [, [,, "(?:[23]\\d|[48]8)\\d{3}|(?:[57]\\d|90)\\d{5}",,,,,,, [5, 7]], [,, "(?:38[0-8]|48[4-9])\\d\\d|(?:2[02-9]|3[4-7]|88)\\d{3}",,,, "22123",,, [5]], [,, "(?:5\\d|7[013-7])\\d{5}",,,, "5912345",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "90[1-9]\\d{4}",,,, "9010123",,, [7]], "VU", 678, "00",,,,,,,, [[, "(\\d{3})(\\d{4})", "$1 $2", ["[579]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "(?:3[03]|900\\d)\\d{3}",,,, "30123"],,, [,,,,,,,,, [-1]]],
        WF: [, [,, "(?:[45]0|68|72|8\\d)\\d{4}",,,,,,, [6]], [,, "(?:50|68|72)\\d{4}",,,, "501234"], [,, "(?:50|68|72|8[23])\\d{4}",,,, "501234"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "WF", 681, "00",,,,,,,, [[, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[4-8]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, "[48]0\\d{4}",,,, "401234"]],
        WS: [, [,, "(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",,,,,,, [5, 6, 7, 10]], [,, "6[1-9]\\d{3}|(?:[2-5]|60)\\d{4}",,,, "22123",,, [5, 6]], [,, "(?:7[235-7]|8(?:[3-7]|9\\d{3}))\\d{5}",,,, "7212345",,, [7, 10]], [,, "800\\d{3}",,,, "800123",,, [6]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "WS", 685, "0",,,,,,,, [[, "(\\d{5})", "$1", ["[2-5]|6[1-9]"]], [, "(\\d{3})(\\d{3,7})", "$1 $2", ["[68]"]], [, "(\\d{2})(\\d{5})", "$1 $2", ["7"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        XK: [, [,, "[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}",,,,,,, [8, 9]], [,, "(?:2[89]|39)0\\d{6}|[23][89]\\d{6}",,,, "28012345"], [,, "4[3-9]\\d{6}",,,, "43201234",,, [8]], [,, "800\\d{5}",,,, "80001234",,, [8]], [,, "900\\d{5}",,,, "90001234",,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "XK", 383, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-4]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[23]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        YE: [, [,, "(?:1|7\\d)\\d{7}|[1-7]\\d{6}",,,,,,, [7, 8, 9], [6]], [,, "17\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\d{5}",,,, "1234567",,, [7, 8], [6]], [,, "7[0137]\\d{7}",,,, "712345678",,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "YE", 967, "00", "0",,, "0",,,, [[, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-6]|7[24-68]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        YT: [, [,, "80\\d{7}|(?:26|63)9\\d{6}",,,,,,, [9]], [,, "269(?:0[67]|5[0-2]|6\\d|[78]0)\\d{4}",,,, "269601234"], [,, "639(?:0[0-79]|1[019]|[267]\\d|3[09]|[45]0|9[04-79])\\d{4}",,,, "639012345"], [,, "80\\d{7}",,,, "801234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "YT", 262, "00", "0",,, "0",,,,,, [,,,,,,,,, [-1]],, "269|63", [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        ZA: [, [,, "[1-9]\\d{8}|8\\d{4,7}",,,,,,, [5, 6, 7, 8, 9]], [,, "(?:1[0-8]|2[1-378]|3[1-69]|4\\d|5[1346-8])\\d{7}",,,, "101234567",,, [9]], [,, "(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\d{3}|8[1-4]\\d{3,7}|(?:2[27]|47|54)4950\\d{3}|(?:1(?:049[2-4]|9[12]\\d\\d)|(?:6\\d|7[0-46-9])\\d{3}|8(?:5\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\d{3}|(?:12|[2-5]1)492\\d{4}",,,, "711234567"], [,, "80\\d{7}",,,, "801234567",,, [9]], [,, "(?:86[2-9]|9[0-2]\\d)\\d{6}",,,, "862345678",,, [9]], [,, "860\\d{6}",,,, "860123456",,, [9]], [,,,,,,,,, [-1]], [,, "87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\d)\\d{5}",,,, "871234567",,, [9]], "ZA", 27, "00", "0",,, "0",,,, [[, "(\\d{2})(\\d{3,4})", "$1 $2", ["8[1-4]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["8[1-4]"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["860"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-9]"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "861\\d{6}",,,, "861123456",,, [9]],,, [,,,,,,,,, [-1]]],
        ZM: [, [,, "(?:63|80)0\\d{6}|(?:21|[79]\\d)\\d{7}",,,,,,, [9], [6]], [,, "21[1-8]\\d{6}",,,, "211234567",,,, [6]], [,, "(?:7[679]|9[5-8])\\d{7}",,,, "955123456"], [,, "800\\d{6}",,,, "800123456"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "630\\d{6}",,,, "630012345"], "ZM", 260, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3})", "$1 $2", ["[1-9]"]], [, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]], [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        ZW: [, [,, "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",,,,,,, [5, 6, 7, 8, 9, 10], [3, 4]], [,, "(?:1(?:(?:3\\d|9)\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\d\\d|[56](?:[14]\\d\\d|20)|7(?:[089]|2[03]|[35]\\d\\d))\\d|4(?:2\\d\\d|8))\\d|1(?:2|[39]\\d{4}))|3(?:(?:123|(?:29\\d|92)\\d)\\d\\d|7(?:[19]|[56]\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\d{3}|83)|5(?:25\\d\\d|[78])|[689]\\d)|6(?:(?:[16-8]21|28|52[013])\\d\\d|[39])|8(?:[1349]28|523)\\d\\d)\\d{3}|(?:4\\d\\d|9[2-9])\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\d|7[1-7])\\d|2(?:[278]\\d|92)|58(?:2\\d|3))|3(?:[26]|9\\d{3})|5(?:4\\d|5)\\d\\d)\\d|6(?:(?:(?:[0-246]|[78]\\d)\\d|37)\\d|5[2-8]))\\d\\d|(?:2(?:[569]\\d|8[2-57-9])|3(?:[013-59]\\d|8[37])|6[89]8)\\d{3}",,,, "1312345",,,, [3, 4]], [,, "7(?:[17]\\d|[38][1-9])\\d{6}",,,, "712345678",,, [9]], [,, "80(?:[01]\\d|20|8[0-8])\\d{3}",,,, "8001234",,, [7]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "86(?:1[12]|22|30|44|55|77|8[368])\\d{6}",,,, "8686123456",,, [10]], "ZW", 263, "00", "0",,, "0",,,, [[, "(\\d{3})(\\d{3,5})", "$1 $2", ["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"], "0$1"], [, "(\\d)(\\d{3})(\\d{2,4})", "$1 $2 $3", ["[49]"], "0$1"], [, "(\\d{3})(\\d{4})", "$1 $2", ["80"], "0$1"], [, "(\\d{2})(\\d{7})", "$1 $2", ["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2", "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"], "(0$1)"], [, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"], [, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)", "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"], "0$1"], [, "(\\d{4})(\\d{6})", "$1 $2", ["8"], "0$1"], [, "(\\d{2})(\\d{3,5})", "$1 $2", ["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"], "0$1"], [, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["29[013-9]|39|54"], "0$1"], [, "(\\d{4})(\\d{3,5})", "$1 $2", ["(?:25|54)8", "258|5483"], "0$1"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        800: [, [,, "\\d{8}",,,,,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "\\d{8}",,,, "12345678"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "001", 800,,,,,,,, 1, [[, "(\\d{4})(\\d{4})", "$1 $2"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        808: [, [,, "\\d{8}",,,,,,, [8]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "\\d{8}",,,, "12345678"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "001", 808,,,,,,,, 1, [[, "(\\d{4})(\\d{4})", "$1 $2"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        870: [, [,, "[35-7]\\d{8}",,,,,,, [9]], [,,,,,,,,, [-1]], [,, "(?:[356]\\d|7[6-8])\\d{7}",,,, "301234567"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "001", 870,,,,,,,,, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[35-7]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        878: [, [,, "10\\d{10}",,,,,,, [12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "10\\d{10}",,,, "101234567890"], "001", 878,,,,,,,, 1, [[, "(\\d{2})(\\d{5})(\\d{5})", "$1 $2 $3", ["1"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        881: [, [,, "[67]\\d{8}",,,,,,, [9]], [,,,,,,,,, [-1]], [,, "[67]\\d{8}",,,, "612345678"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "001", 881,,,,,,,,, [[, "(\\d)(\\d{3})(\\d{5})", "$1 $2 $3", ["[67]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        882: [, [,, "1\\d{6,11}|3\\d{6}(?:\\d{2,5})?",,,,,,, [7, 8, 9, 10, 11, 12]], [,,,,,,,,, [-1]], [,, "3(?:37\\d\\d|42)\\d{4}|3(?:2|47|7\\d{3})\\d{7}",,,, "3421234",,, [7, 9, 10, 12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|3(?:45|9\\d{3})\\d{7}",,,, "390123456789"], "001", 882,,,,,,,,, [[, "(\\d{2})(\\d{5})", "$1 $2", ["16|342"]], [, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["1"]], [, "(\\d{2})(\\d{4})(\\d{3})", "$1 $2 $3", ["3[23]"]], [, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"]], [, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["34[57]"]], [, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["34"]], [, "(\\d{2})(\\d{4,5})(\\d{5})", "$1 $2 $3", ["[13]"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,, "348[57]\\d{7}",,,, "34851234567",,, [11]]],
        883: [, [,, "51\\d{7}(?:\\d{3})?",,,,,,, [9, 12]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "51[013]0\\d{8}|5100\\d{5}",,,, "510012345"], "001", 883,,,,,,,, 1, [[, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["510"]], [, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["510"]], [, "(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["5"]]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]],
        888: [, [,, "\\d{11}",,,,,,, [11]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "001", 888,,,,,,,, 1, [[, "(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,, "\\d{11}",,,, "12345678901"],,, [,,,,,,,,, [-1]]],
        979: [, [,, "\\d{9}",,,,,,, [9]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,, "\\d{9}",,,, "123456789"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]], "001", 979,,,,,,,, 1, [[, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3"]],, [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,, [,,,,,,,,, [-1]]]
      };
      /*
      
       Copyright (C) 2010 The Libphonenumber Authors.
      
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
      
       http://www.apache.org/licenses/LICENSE-2.0
      
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
      */

      i18n.phonenumbers.PhoneNumberUtil = function () {
        this.regionToMetadataMap = {};
      };

      goog.addSingletonGetter(i18n.phonenumbers.PhoneNumberUtil);
      i18n.phonenumbers.Error = {
        INVALID_COUNTRY_CODE: "Invalid country calling code",
        NOT_A_NUMBER: "The string supplied did not seem to be a phone number",
        TOO_SHORT_AFTER_IDD: "Phone number too short after IDD",
        TOO_SHORT_NSN: "The string supplied is too short to be a phone number",
        TOO_LONG: "The string supplied is too long to be a phone number"
      };
      i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_ = 1;
      i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_ = 2;
      i18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_FOR_NSN_ = 17;
      i18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_COUNTRY_CODE_ = 3;
      i18n.phonenumbers.PhoneNumberUtil.MAX_INPUT_STRING_LENGTH_ = 250;
      i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_ = "ZZ";
      i18n.phonenumbers.PhoneNumberUtil.COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX_ = "3";
      i18n.phonenumbers.PhoneNumberUtil.MOBILE_TOKEN_MAPPINGS_ = {
        54: "9"
      };
      i18n.phonenumbers.PhoneNumberUtil.GEO_MOBILE_COUNTRIES_ = [52, 54, 55];
      i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN = "+";
      i18n.phonenumbers.PhoneNumberUtil.STAR_SIGN_ = "*";
      i18n.phonenumbers.PhoneNumberUtil.RFC3966_EXTN_PREFIX_ = ";ext=";
      i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_ = "tel:";
      i18n.phonenumbers.PhoneNumberUtil.RFC3966_PHONE_CONTEXT_ = ";phone-context=";
      i18n.phonenumbers.PhoneNumberUtil.RFC3966_ISDN_SUBADDRESS_ = ";isub=";
      i18n.phonenumbers.PhoneNumberUtil.DIGIT_MAPPINGS = {
        0: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        "\uff10": "0",
        "\uff11": "1",
        "\uff12": "2",
        "\uff13": "3",
        "\uff14": "4",
        "\uff15": "5",
        "\uff16": "6",
        "\uff17": "7",
        "\uff18": "8",
        "\uff19": "9",
        "\u0660": "0",
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u06f0": "0",
        "\u06f1": "1",
        "\u06f2": "2",
        "\u06f3": "3",
        "\u06f4": "4",
        "\u06f5": "5",
        "\u06f6": "6",
        "\u06f7": "7",
        "\u06f8": "8",
        "\u06f9": "9"
      };
      i18n.phonenumbers.PhoneNumberUtil.DIALLABLE_CHAR_MAPPINGS_ = {
        0: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        "+": i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN,
        "*": "*",
        "#": "#"
      };
      i18n.phonenumbers.PhoneNumberUtil.ALPHA_MAPPINGS_ = {
        A: "2",
        B: "2",
        C: "2",
        D: "3",
        E: "3",
        F: "3",
        G: "4",
        H: "4",
        I: "4",
        J: "5",
        K: "5",
        L: "5",
        M: "6",
        N: "6",
        O: "6",
        P: "7",
        Q: "7",
        R: "7",
        S: "7",
        T: "8",
        U: "8",
        V: "8",
        W: "9",
        X: "9",
        Y: "9",
        Z: "9"
      };
      i18n.phonenumbers.PhoneNumberUtil.ALL_NORMALIZATION_MAPPINGS_ = {
        0: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        "\uff10": "0",
        "\uff11": "1",
        "\uff12": "2",
        "\uff13": "3",
        "\uff14": "4",
        "\uff15": "5",
        "\uff16": "6",
        "\uff17": "7",
        "\uff18": "8",
        "\uff19": "9",
        "\u0660": "0",
        "\u0661": "1",
        "\u0662": "2",
        "\u0663": "3",
        "\u0664": "4",
        "\u0665": "5",
        "\u0666": "6",
        "\u0667": "7",
        "\u0668": "8",
        "\u0669": "9",
        "\u06f0": "0",
        "\u06f1": "1",
        "\u06f2": "2",
        "\u06f3": "3",
        "\u06f4": "4",
        "\u06f5": "5",
        "\u06f6": "6",
        "\u06f7": "7",
        "\u06f8": "8",
        "\u06f9": "9",
        A: "2",
        B: "2",
        C: "2",
        D: "3",
        E: "3",
        F: "3",
        G: "4",
        H: "4",
        I: "4",
        J: "5",
        K: "5",
        L: "5",
        M: "6",
        N: "6",
        O: "6",
        P: "7",
        Q: "7",
        R: "7",
        S: "7",
        T: "8",
        U: "8",
        V: "8",
        W: "9",
        X: "9",
        Y: "9",
        Z: "9"
      };
      i18n.phonenumbers.PhoneNumberUtil.ALL_PLUS_NUMBER_GROUPING_SYMBOLS_ = {
        0: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        A: "A",
        B: "B",
        C: "C",
        D: "D",
        E: "E",
        F: "F",
        G: "G",
        H: "H",
        I: "I",
        J: "J",
        K: "K",
        L: "L",
        M: "M",
        N: "N",
        O: "O",
        P: "P",
        Q: "Q",
        R: "R",
        S: "S",
        T: "T",
        U: "U",
        V: "V",
        W: "W",
        X: "X",
        Y: "Y",
        Z: "Z",
        a: "A",
        b: "B",
        c: "C",
        d: "D",
        e: "E",
        f: "F",
        g: "G",
        h: "H",
        i: "I",
        j: "J",
        k: "K",
        l: "L",
        m: "M",
        n: "N",
        o: "O",
        p: "P",
        q: "Q",
        r: "R",
        s: "S",
        t: "T",
        u: "U",
        v: "V",
        w: "W",
        x: "X",
        y: "Y",
        z: "Z",
        "-": "-",
        "\uff0d": "-",
        "\u2010": "-",
        "\u2011": "-",
        "\u2012": "-",
        "\u2013": "-",
        "\u2014": "-",
        "\u2015": "-",
        "\u2212": "-",
        "/": "/",
        "\uff0f": "/",
        " ": " ",
        "\u3000": " ",
        "\u2060": " ",
        ".": ".",
        "\uff0e": "."
      };
      i18n.phonenumbers.PhoneNumberUtil.SINGLE_INTERNATIONAL_PREFIX_ = /[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?/;
      i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION = "-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e";
      i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ = "0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9";
      i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_ = "A-Za-z";
      i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ = "+\uff0b";
      i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_PATTERN = new RegExp("[" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + "]+");
      i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN = new RegExp("^[" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + "]+");
      i18n.phonenumbers.PhoneNumberUtil.SEPARATOR_PATTERN_ = "[" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + "]+";
      i18n.phonenumbers.PhoneNumberUtil.CAPTURING_DIGIT_PATTERN = new RegExp("([" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "])");
      i18n.phonenumbers.PhoneNumberUtil.VALID_START_CHAR_PATTERN_ = new RegExp("[" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "]");
      i18n.phonenumbers.PhoneNumberUtil.SECOND_NUMBER_START_PATTERN_ = /[\\\/] *x/;
      i18n.phonenumbers.PhoneNumberUtil.UNWANTED_END_CHAR_PATTERN_ = new RegExp("[^" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_ + "#]+$");
      i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_PHONE_PATTERN_ = /(?:.*?[A-Za-z]){3}.*/;
      i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_PHONE_NUMBER_PATTERN_ = "[" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "]{" + i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_ + "}";
      i18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_ = "[" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + "]*(?:[" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + i18n.phonenumbers.PhoneNumberUtil.STAR_SIGN_ + "]*[" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "]){3,}[" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + i18n.phonenumbers.PhoneNumberUtil.STAR_SIGN_ + i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_ + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "]*";
      i18n.phonenumbers.PhoneNumberUtil.DEFAULT_EXTN_PREFIX_ = " ext. ";
      i18n.phonenumbers.PhoneNumberUtil.CAPTURING_EXTN_DIGITS_ = "([" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "]{1,7})";
      i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERNS_FOR_PARSING_ = i18n.phonenumbers.PhoneNumberUtil.RFC3966_EXTN_PREFIX_ + i18n.phonenumbers.PhoneNumberUtil.CAPTURING_EXTN_DIGITS_ + "|[ \u00a0\\t,]*(?:e?xt(?:ensi(?:o\u0301?|\u00f3))?n?|\uff45?\uff58\uff54\uff4e?|\u0434\u043e\u0431|[;,x\uff58#\uff03~\uff5e]|int|anexo|\uff49\uff4e\uff54)[:\\.\uff0e]?[ \u00a0\\t,-]*" + i18n.phonenumbers.PhoneNumberUtil.CAPTURING_EXTN_DIGITS_ + "#?|[- ]+([" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + "]{1,5})#";
      i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERN_ = new RegExp("(?:" + i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERNS_FOR_PARSING_ + ")$", "i");
      i18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_PATTERN_ = new RegExp("^" + i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_PHONE_NUMBER_PATTERN_ + "$|^" + i18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_ + "(?:" + i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERNS_FOR_PARSING_ + ")?$", "i");
      i18n.phonenumbers.PhoneNumberUtil.NON_DIGITS_PATTERN_ = /\D+/;
      i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_PATTERN_ = /(\$\d)/;
      i18n.phonenumbers.PhoneNumberUtil.NP_PATTERN_ = /\$NP/;
      i18n.phonenumbers.PhoneNumberUtil.FG_PATTERN_ = /\$FG/;
      i18n.phonenumbers.PhoneNumberUtil.CC_PATTERN_ = /\$CC/;
      i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_ONLY_PREFIX_PATTERN_ = /^\(?\$1\)?$/;
      i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY = "001";
      i18n.phonenumbers.PhoneNumberFormat = {
        E164: 0,
        INTERNATIONAL: 1,
        NATIONAL: 2,
        RFC3966: 3
      };
      i18n.phonenumbers.PhoneNumberType = {
        FIXED_LINE: 0,
        MOBILE: 1,
        FIXED_LINE_OR_MOBILE: 2,
        TOLL_FREE: 3,
        PREMIUM_RATE: 4,
        SHARED_COST: 5,
        VOIP: 6,
        PERSONAL_NUMBER: 7,
        PAGER: 8,
        UAN: 9,
        VOICEMAIL: 10,
        UNKNOWN: -1
      };
      i18n.phonenumbers.PhoneNumberUtil.MatchType = {
        NOT_A_NUMBER: 0,
        NO_MATCH: 1,
        SHORT_NSN_MATCH: 2,
        NSN_MATCH: 3,
        EXACT_MATCH: 4
      };
      i18n.phonenumbers.PhoneNumberUtil.ValidationResult = {
        IS_POSSIBLE: 0,
        IS_POSSIBLE_LOCAL_ONLY: 4,
        INVALID_COUNTRY_CODE: 1,
        TOO_SHORT: 2,
        INVALID_LENGTH: 5,
        TOO_LONG: 3
      };

      i18n.phonenumbers.PhoneNumberUtil.extractPossibleNumber = function (a) {
        var b = a.search(i18n.phonenumbers.PhoneNumberUtil.VALID_START_CHAR_PATTERN_);
        0 <= b ? (a = a.substring(b), a = a.replace(i18n.phonenumbers.PhoneNumberUtil.UNWANTED_END_CHAR_PATTERN_, ""), b = a.search(i18n.phonenumbers.PhoneNumberUtil.SECOND_NUMBER_START_PATTERN_), 0 <= b && (a = a.substring(0, b))) : a = "";
        return a;
      };

      i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber = function (a) {
        return a.length < i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_ ? !1 : i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_PATTERN_, a);
      };

      i18n.phonenumbers.PhoneNumberUtil.normalize = function (a) {
        return i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_PHONE_PATTERN_, a) ? i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.ALL_NORMALIZATION_MAPPINGS_, !0) : i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(a);
      };

      i18n.phonenumbers.PhoneNumberUtil.normalizeSB_ = function (a) {
        var b = i18n.phonenumbers.PhoneNumberUtil.normalize(a.toString());
        a.clear();
        a.append(b);
      };

      i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly = function (a) {
        return i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.DIGIT_MAPPINGS, !0);
      };

      i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly = function (a) {
        return i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.DIALLABLE_CHAR_MAPPINGS_, !0);
      };

      i18n.phonenumbers.PhoneNumberUtil.convertAlphaCharactersInNumber = function (a) {
        return i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.ALL_NORMALIZATION_MAPPINGS_, !1);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getLengthOfGeographicalAreaCode = function (a) {
        var b = this.getMetadataForRegion(this.getRegionCodeForNumber(a));
        return null != b && (b.hasNationalPrefix() || a.hasItalianLeadingZero()) && this.isNumberGeographical(a) ? this.getLengthOfNationalDestinationCode(a) : 0;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getLengthOfNationalDestinationCode = function (a) {
        if (a.hasExtension()) {
          var b = a.clone();
          b.clearExtension();
        } else {
          b = a;
        }

        b = this.format(b, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL).split(i18n.phonenumbers.PhoneNumberUtil.NON_DIGITS_PATTERN_);
        0 == b[0].length && b.shift();
        return 2 >= b.length ? 0 : this.getNumberType(a) == i18n.phonenumbers.PhoneNumberType.MOBILE && (a = i18n.phonenumbers.PhoneNumberUtil.getCountryMobileToken(a.getCountryCodeOrDefault()), "" != a) ? b[2].length + a.length : b[1].length;
      };

      i18n.phonenumbers.PhoneNumberUtil.getCountryMobileToken = function (a) {
        return i18n.phonenumbers.PhoneNumberUtil.MOBILE_TOKEN_MAPPINGS_[a] || "";
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedRegions = function () {
        return goog.array.filter(Object.keys(i18n.phonenumbers.metadata.countryToMetadata), function (a) {
          return isNaN(a);
        });
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedGlobalNetworkCallingCodes = function () {
        var a = goog.array.filter(Object.keys(i18n.phonenumbers.metadata.countryToMetadata), function (a) {
          return !isNaN(a);
        });
        return goog.array.map(a, function (a) {
          return parseInt(a, 10);
        });
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedCallingCodes = function () {
        var a = Object.keys(i18n.phonenumbers.metadata.countryCodeToRegionCodeMap);
        return goog.array.join(this.getSupportedGlobalNetworkCallingCodes(), goog.array.map(a, function (a) {
          return parseInt(a, 10);
        }));
      };

      i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_ = function (a) {
        return null != a && (1 != a.possibleLengthCount() || -1 != a.possibleLengthArray()[0]);
      };

      i18n.phonenumbers.PhoneNumberUtil.descHasData_ = function (a) {
        return null != a && (a.hasExampleNumber() || i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_(a) || a.hasNationalNumberPattern());
      };

      i18n.phonenumbers.PhoneNumberUtil.getSupportedTypesForMetadata_ = function (a) {
        var b = [];
        goog.object.forEach(i18n.phonenumbers.PhoneNumberType, function (c) {
          if (c != i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE && c != i18n.phonenumbers.PhoneNumberType.UNKNOWN) {
            var d = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(a, c);
            i18n.phonenumbers.PhoneNumberUtil.descHasData_(d) && b.push(c);
          }
        });
        return b;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedTypesForRegion = function (a) {
        return this.isValidRegionCode_(a) ? i18n.phonenumbers.PhoneNumberUtil.getSupportedTypesForMetadata_(this.getMetadataForRegion(a)) : [];
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedTypesForNonGeoEntity = function (a) {
        a = this.getMetadataForNonGeographicalRegion(a);
        return null == a ? [] : i18n.phonenumbers.PhoneNumberUtil.getSupportedTypesForMetadata_(a);
      };

      i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_ = function (a, b, c) {
        for (var d = new goog.string.StringBuffer(), e, f, g = a.length, h = 0; h < g; ++h) {
          e = a.charAt(h), f = b[e.toUpperCase()], null != f ? d.append(f) : c || d.append(e);
        }

        return d.toString();
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formattingRuleHasFirstGroupOnly = function (a) {
        return 0 == a.length || i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_ONLY_PREFIX_PATTERN_.test(a);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isNumberGeographical = function (a) {
        var b = this.getNumberType(a);
        return b == i18n.phonenumbers.PhoneNumberType.FIXED_LINE || b == i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE || goog.array.contains(i18n.phonenumbers.PhoneNumberUtil.GEO_MOBILE_COUNTRIES_, a.getCountryCodeOrDefault()) && b == i18n.phonenumbers.PhoneNumberType.MOBILE;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isValidRegionCode_ = function (a) {
        return null != a && isNaN(a) && a.toUpperCase() in i18n.phonenumbers.metadata.countryToMetadata;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.hasValidCountryCallingCode_ = function (a) {
        return a in i18n.phonenumbers.metadata.countryCodeToRegionCodeMap;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.format = function (a, b) {
        if (0 == a.getNationalNumber() && a.hasRawInput()) {
          var c = a.getRawInputOrDefault();

          if (0 < c.length) {
            return c;
          }
        }

        c = a.getCountryCodeOrDefault();
        var d = this.getNationalSignificantNumber(a);

        if (b == i18n.phonenumbers.PhoneNumberFormat.E164) {
          return this.prefixNumberWithCountryCallingCode_(c, i18n.phonenumbers.PhoneNumberFormat.E164, d, "");
        }

        if (!this.hasValidCountryCallingCode_(c)) {
          return d;
        }

        var e = this.getRegionCodeForCountryCode(c),
            f = this.getMetadataForRegionOrCallingCode_(c, e);
        e = this.maybeGetFormattedExtension_(a, f, b);
        d = this.formatNsn_(d, f, b);
        return this.prefixNumberWithCountryCallingCode_(c, b, d, e);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatByPattern = function (a, b, c) {
        var d = a.getCountryCodeOrDefault(),
            e = this.getNationalSignificantNumber(a);

        if (!this.hasValidCountryCallingCode_(d)) {
          return e;
        }

        var f = this.getRegionCodeForCountryCode(d);
        f = this.getMetadataForRegionOrCallingCode_(d, f);
        var g = this.chooseFormattingPatternForNumber_(c, e);

        if (null != g) {
          c = g.clone();
          g = g.getNationalPrefixFormattingRuleOrDefault();

          if (0 < g.length) {
            var h = f.getNationalPrefixOrDefault();
            0 < h.length ? (g = g.replace(i18n.phonenumbers.PhoneNumberUtil.NP_PATTERN_, h).replace(i18n.phonenumbers.PhoneNumberUtil.FG_PATTERN_, "$1"), c.setNationalPrefixFormattingRule(g)) : c.clearNationalPrefixFormattingRule();
          }

          e = this.formatNsnUsingPattern_(e, c, b);
        }

        a = this.maybeGetFormattedExtension_(a, f, b);
        return this.prefixNumberWithCountryCallingCode_(d, b, e, a);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatNationalNumberWithCarrierCode = function (a, b) {
        var c = a.getCountryCodeOrDefault(),
            d = this.getNationalSignificantNumber(a);

        if (!this.hasValidCountryCallingCode_(c)) {
          return d;
        }

        var e = this.getRegionCodeForCountryCode(c),
            f = this.getMetadataForRegionOrCallingCode_(c, e);
        e = this.maybeGetFormattedExtension_(a, f, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);
        d = this.formatNsn_(d, f, i18n.phonenumbers.PhoneNumberFormat.NATIONAL, b);
        return this.prefixNumberWithCountryCallingCode_(c, i18n.phonenumbers.PhoneNumberFormat.NATIONAL, d, e);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getMetadataForRegionOrCallingCode_ = function (a, b) {
        return i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY == b ? this.getMetadataForNonGeographicalRegion(a) : this.getMetadataForRegion(b);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatNationalNumberWithPreferredCarrierCode = function (a, b) {
        return this.formatNationalNumberWithCarrierCode(a, 0 < a.getPreferredDomesticCarrierCodeOrDefault().length ? a.getPreferredDomesticCarrierCodeOrDefault() : b);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatNumberForMobileDialing = function (a, b, c) {
        var d = a.getCountryCodeOrDefault();

        if (!this.hasValidCountryCallingCode_(d)) {
          return a.hasRawInput() ? a.getRawInputOrDefault() : "";
        }

        var e = "";
        a = a.clone();
        a.clearExtension();
        var f = this.getRegionCodeForCountryCode(d),
            g = this.getNumberType(a),
            h = g != i18n.phonenumbers.PhoneNumberType.UNKNOWN;

        if (b == f) {
          e = g == i18n.phonenumbers.PhoneNumberType.FIXED_LINE || g == i18n.phonenumbers.PhoneNumberType.MOBILE || g == i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE, "CO" == f && g == i18n.phonenumbers.PhoneNumberType.FIXED_LINE ? e = this.formatNationalNumberWithCarrierCode(a, i18n.phonenumbers.PhoneNumberUtil.COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX_) : "BR" == f && e ? e = 0 < a.getPreferredDomesticCarrierCodeOrDefault().length ? this.formatNationalNumberWithPreferredCarrierCode(a, "") : "" : d == i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_ ? (b = this.getMetadataForRegion(b), e = this.canBeInternationallyDialled(a) && this.testNumberLength_(this.getNationalSignificantNumber(a), b) != i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_SHORT ? this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL) : this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL)) : e = (f == i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY || ("MX" == f || "CL" == f || "UZ" == f) && e) && this.canBeInternationallyDialled(a) ? this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL) : this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);
        } else {
          if (h && this.canBeInternationallyDialled(a)) {
            return c ? this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL) : this.format(a, i18n.phonenumbers.PhoneNumberFormat.E164);
          }
        }

        return c ? e : i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(e);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatOutOfCountryCallingNumber = function (a, b) {
        if (!this.isValidRegionCode_(b)) {
          return this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);
        }

        var c = a.getCountryCodeOrDefault(),
            d = this.getNationalSignificantNumber(a);

        if (!this.hasValidCountryCallingCode_(c)) {
          return d;
        }

        if (c == i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_) {
          if (this.isNANPACountry(b)) {
            return c + " " + this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);
          }
        } else {
          if (c == this.getCountryCodeForValidRegion_(b)) {
            return this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);
          }
        }

        var e = this.getMetadataForRegion(b),
            f = e.getInternationalPrefixOrDefault(),
            g = "";
        i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.SINGLE_INTERNATIONAL_PREFIX_, f) ? g = f : e.hasPreferredInternationalPrefix() && (g = e.getPreferredInternationalPrefixOrDefault());
        e = this.getRegionCodeForCountryCode(c);
        e = this.getMetadataForRegionOrCallingCode_(c, e);
        d = this.formatNsn_(d, e, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);
        e = this.maybeGetFormattedExtension_(a, e, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);
        return 0 < g.length ? g + " " + c + " " + d + e : this.prefixNumberWithCountryCallingCode_(c, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL, d, e);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatInOriginalFormat = function (a, b) {
        if (a.hasRawInput() && !this.hasFormattingPatternForNumber_(a)) {
          return a.getRawInputOrDefault();
        }

        if (!a.hasCountryCodeSource()) {
          return this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);
        }

        switch (a.getCountryCodeSource()) {
          case i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN:
            var c = this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);
            break;

          case i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_IDD:
            c = this.formatOutOfCountryCallingNumber(a, b);
            break;

          case i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN:
            c = this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL).substring(1);
            break;

          default:
            var d = this.getRegionCodeForCountryCode(a.getCountryCodeOrDefault()),
                e = this.getNddPrefixForRegion(d, !0);
            c = this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);

            if (null != e && 0 != e.length && !this.rawInputContainsNationalPrefix_(a.getRawInputOrDefault(), e, d) && (d = this.getMetadataForRegion(d), e = this.getNationalSignificantNumber(a), d = this.chooseFormattingPatternForNumber_(d.numberFormatArray(), e), null != d)) {
              e = d.getNationalPrefixFormattingRuleOrDefault();
              var f = e.indexOf("$1");
              0 >= f || (e = e.substring(0, f), e = i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(e), 0 != e.length && (c = d.clone(), c.clearNationalPrefixFormattingRule(), c = this.formatByPattern(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL, [c])));
            }

        }

        d = a.getRawInputOrDefault();
        null != c && 0 < d.length && (e = i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(c), f = i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(d), e != f && (c = d));
        return c;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.rawInputContainsNationalPrefix_ = function (a, b, c) {
        a = i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(a);

        if (goog.string.startsWith(a, b)) {
          try {
            return this.isValidNumber(this.parse(a.substring(b.length), c));
          } catch (d) {}
        }

        return !1;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.hasFormattingPatternForNumber_ = function (a) {
        var b = a.getCountryCodeOrDefault(),
            c = this.getRegionCodeForCountryCode(b);
        b = this.getMetadataForRegionOrCallingCode_(b, c);

        if (null == b) {
          return !1;
        }

        a = this.getNationalSignificantNumber(a);
        return null != this.chooseFormattingPatternForNumber_(b.numberFormatArray(), a);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatOutOfCountryKeepingAlphaChars = function (a, b) {
        var c = a.getRawInputOrDefault();

        if (0 == c.length) {
          return this.formatOutOfCountryCallingNumber(a, b);
        }

        var d = a.getCountryCodeOrDefault();

        if (!this.hasValidCountryCallingCode_(d)) {
          return c;
        }

        c = i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(c, i18n.phonenumbers.PhoneNumberUtil.ALL_PLUS_NUMBER_GROUPING_SYMBOLS_, !0);
        var e = this.getNationalSignificantNumber(a);

        if (3 < e.length) {
          var f = c.indexOf(e.substring(0, 3));
          -1 != f && (c = c.substring(f));
        }

        f = this.getMetadataForRegion(b);

        if (d == i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_) {
          if (this.isNANPACountry(b)) {
            return d + " " + c;
          }
        } else {
          if (null != f && d == this.getCountryCodeForValidRegion_(b)) {
            d = this.chooseFormattingPatternForNumber_(f.numberFormatArray(), e);

            if (null == d) {
              return c;
            }

            d = d.clone();
            d.setPattern("(\\d+)(.*)");
            d.setFormat("$1$2");
            return this.formatNsnUsingPattern_(c, d, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);
          }
        }

        e = "";
        null != f && (e = f.getInternationalPrefixOrDefault(), e = i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.SINGLE_INTERNATIONAL_PREFIX_, e) ? e : f.getPreferredInternationalPrefixOrDefault());
        f = this.getRegionCodeForCountryCode(d);
        f = this.getMetadataForRegionOrCallingCode_(d, f);
        f = this.maybeGetFormattedExtension_(a, f, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);
        return 0 < e.length ? e + " " + d + " " + c + f : this.prefixNumberWithCountryCallingCode_(d, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL, c, f);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getNationalSignificantNumber = function (a) {
        if (!a.hasNationalNumber()) {
          return "";
        }

        var b = "" + a.getNationalNumber();
        return a.hasItalianLeadingZero() && a.getItalianLeadingZero() && 0 < a.getNumberOfLeadingZerosOrDefault() ? Array(a.getNumberOfLeadingZerosOrDefault() + 1).join("0") + b : b;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.prefixNumberWithCountryCallingCode_ = function (a, b, c, d) {
        switch (b) {
          case i18n.phonenumbers.PhoneNumberFormat.E164:
            return i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + a + c + d;

          case i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL:
            return i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + a + " " + c + d;

          case i18n.phonenumbers.PhoneNumberFormat.RFC3966:
            return i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_ + i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + a + "-" + c + d;

          default:
            return c + d;
        }
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatNsn_ = function (a, b, c, d) {
        b = 0 == b.intlNumberFormatArray().length || c == i18n.phonenumbers.PhoneNumberFormat.NATIONAL ? b.numberFormatArray() : b.intlNumberFormatArray();
        b = this.chooseFormattingPatternForNumber_(b, a);
        return null == b ? a : this.formatNsnUsingPattern_(a, b, c, d);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.chooseFormattingPatternForNumber_ = function (a, b) {
        for (var c, d = a.length, e = 0; e < d; ++e) {
          c = a[e];
          var f = c.leadingDigitsPatternCount();

          if (0 == f || 0 == b.search(c.getLeadingDigitsPattern(f - 1))) {
            if (f = new RegExp(c.getPattern()), i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, b)) {
              return c;
            }
          }
        }

        return null;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.formatNsnUsingPattern_ = function (a, b, c, d) {
        var e = b.getFormatOrDefault(),
            f = new RegExp(b.getPattern()),
            g = b.getDomesticCarrierCodeFormattingRuleOrDefault();
        c == i18n.phonenumbers.PhoneNumberFormat.NATIONAL && null != d && 0 < d.length && 0 < g.length ? (b = g.replace(i18n.phonenumbers.PhoneNumberUtil.CC_PATTERN_, d), e = e.replace(i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_PATTERN_, b), a = a.replace(f, e)) : (b = b.getNationalPrefixFormattingRuleOrDefault(), a = c == i18n.phonenumbers.PhoneNumberFormat.NATIONAL && null != b && 0 < b.length ? a.replace(f, e.replace(i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_PATTERN_, b)) : a.replace(f, e));
        c == i18n.phonenumbers.PhoneNumberFormat.RFC3966 && (a = a.replace(new RegExp("^" + i18n.phonenumbers.PhoneNumberUtil.SEPARATOR_PATTERN_), ""), a = a.replace(new RegExp(i18n.phonenumbers.PhoneNumberUtil.SEPARATOR_PATTERN_, "g"), "-"));
        return a;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getExampleNumber = function (a) {
        return this.getExampleNumberForType(a, i18n.phonenumbers.PhoneNumberType.FIXED_LINE);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getExampleNumberForType = function (a, b) {
        if (!this.isValidRegionCode_(a)) {
          return null;
        }

        var c = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(this.getMetadataForRegion(a), b);

        try {
          if (c.hasExampleNumber()) {
            return this.parse(c.getExampleNumber(), a);
          }
        } catch (d) {}

        return null;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getExampleNumberForNonGeoEntity = function (a) {
        var b = this.getMetadataForNonGeographicalRegion(a);

        if (null != b && (b = goog.array.find([b.getMobile(), b.getTollFree(), b.getSharedCost(), b.getVoip(), b.getVoicemail(), b.getUan(), b.getPremiumRate()], function (a, b) {
          return a.hasExampleNumber();
        }), null != b)) {
          try {
            return this.parse("+" + a + b.getExampleNumber(), "ZZ");
          } catch (c) {}
        }

        return null;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.maybeGetFormattedExtension_ = function (a, b, c) {
        return a.hasExtension() && 0 != a.getExtension().length ? c == i18n.phonenumbers.PhoneNumberFormat.RFC3966 ? i18n.phonenumbers.PhoneNumberUtil.RFC3966_EXTN_PREFIX_ + a.getExtension() : b.hasPreferredExtnPrefix() ? b.getPreferredExtnPrefix() + a.getExtensionOrDefault() : i18n.phonenumbers.PhoneNumberUtil.DEFAULT_EXTN_PREFIX_ + a.getExtensionOrDefault() : "";
      };

      i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_ = function (a, b) {
        switch (b) {
          case i18n.phonenumbers.PhoneNumberType.PREMIUM_RATE:
            return a.getPremiumRate();

          case i18n.phonenumbers.PhoneNumberType.TOLL_FREE:
            return a.getTollFree();

          case i18n.phonenumbers.PhoneNumberType.MOBILE:
            return a.getMobile();

          case i18n.phonenumbers.PhoneNumberType.FIXED_LINE:
          case i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE:
            return a.getFixedLine();

          case i18n.phonenumbers.PhoneNumberType.SHARED_COST:
            return a.getSharedCost();

          case i18n.phonenumbers.PhoneNumberType.VOIP:
            return a.getVoip();

          case i18n.phonenumbers.PhoneNumberType.PERSONAL_NUMBER:
            return a.getPersonalNumber();

          case i18n.phonenumbers.PhoneNumberType.PAGER:
            return a.getPager();

          case i18n.phonenumbers.PhoneNumberType.UAN:
            return a.getUan();

          case i18n.phonenumbers.PhoneNumberType.VOICEMAIL:
            return a.getVoicemail();

          default:
            return a.getGeneralDesc();
        }
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getNumberType = function (a) {
        var b = this.getRegionCodeForNumber(a);
        b = this.getMetadataForRegionOrCallingCode_(a.getCountryCodeOrDefault(), b);

        if (null == b) {
          return i18n.phonenumbers.PhoneNumberType.UNKNOWN;
        }

        a = this.getNationalSignificantNumber(a);
        return this.getNumberTypeHelper_(a, b);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getNumberTypeHelper_ = function (a, b) {
        return this.isNumberMatchingDesc_(a, b.getGeneralDesc()) ? this.isNumberMatchingDesc_(a, b.getPremiumRate()) ? i18n.phonenumbers.PhoneNumberType.PREMIUM_RATE : this.isNumberMatchingDesc_(a, b.getTollFree()) ? i18n.phonenumbers.PhoneNumberType.TOLL_FREE : this.isNumberMatchingDesc_(a, b.getSharedCost()) ? i18n.phonenumbers.PhoneNumberType.SHARED_COST : this.isNumberMatchingDesc_(a, b.getVoip()) ? i18n.phonenumbers.PhoneNumberType.VOIP : this.isNumberMatchingDesc_(a, b.getPersonalNumber()) ? i18n.phonenumbers.PhoneNumberType.PERSONAL_NUMBER : this.isNumberMatchingDesc_(a, b.getPager()) ? i18n.phonenumbers.PhoneNumberType.PAGER : this.isNumberMatchingDesc_(a, b.getUan()) ? i18n.phonenumbers.PhoneNumberType.UAN : this.isNumberMatchingDesc_(a, b.getVoicemail()) ? i18n.phonenumbers.PhoneNumberType.VOICEMAIL : this.isNumberMatchingDesc_(a, b.getFixedLine()) ? b.getSameMobileAndFixedLinePattern() || this.isNumberMatchingDesc_(a, b.getMobile()) ? i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE : i18n.phonenumbers.PhoneNumberType.FIXED_LINE : !b.getSameMobileAndFixedLinePattern() && this.isNumberMatchingDesc_(a, b.getMobile()) ? i18n.phonenumbers.PhoneNumberType.MOBILE : i18n.phonenumbers.PhoneNumberType.UNKNOWN : i18n.phonenumbers.PhoneNumberType.UNKNOWN;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getMetadataForRegion = function (a) {
        if (null == a) {
          return null;
        }

        a = a.toUpperCase();
        var b = this.regionToMetadataMap[a];

        if (null == b) {
          b = new goog.proto2.PbLiteSerializer();
          var c = i18n.phonenumbers.metadata.countryToMetadata[a];

          if (null == c) {
            return null;
          }

          b = b.deserialize(i18n.phonenumbers.PhoneMetadata.getDescriptor(), c);
          this.regionToMetadataMap[a] = b;
        }

        return b;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getMetadataForNonGeographicalRegion = function (a) {
        return this.getMetadataForRegion("" + a);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isNumberMatchingDesc_ = function (a, b) {
        var c = a.length;
        return 0 < b.possibleLengthCount() && -1 == goog.array.indexOf(b.possibleLengthArray(), c) ? !1 : i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(b.getNationalNumberPatternOrDefault(), a);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isValidNumber = function (a) {
        var b = this.getRegionCodeForNumber(a);
        return this.isValidNumberForRegion(a, b);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isValidNumberForRegion = function (a, b) {
        var c = a.getCountryCodeOrDefault(),
            d = this.getMetadataForRegionOrCallingCode_(c, b);

        if (null == d || i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY != b && c != this.getCountryCodeForValidRegion_(b)) {
          return !1;
        }

        c = this.getNationalSignificantNumber(a);
        return this.getNumberTypeHelper_(c, d) != i18n.phonenumbers.PhoneNumberType.UNKNOWN;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodeForNumber = function (a) {
        if (null == a) {
          return null;
        }

        var b = a.getCountryCodeOrDefault();
        b = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[b];
        return null == b ? null : 1 == b.length ? b[0] : this.getRegionCodeForNumberFromRegionList_(a, b);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodeForNumberFromRegionList_ = function (a, b) {
        for (var c = this.getNationalSignificantNumber(a), d, e = b.length, f = 0; f < e; f++) {
          d = b[f];
          var g = this.getMetadataForRegion(d);

          if (g.hasLeadingDigits()) {
            if (0 == c.search(g.getLeadingDigits())) {
              return d;
            }
          } else {
            if (this.getNumberTypeHelper_(c, g) != i18n.phonenumbers.PhoneNumberType.UNKNOWN) {
              return d;
            }
          }
        }

        return null;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodeForCountryCode = function (a) {
        a = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[a];
        return null == a ? i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_ : a[0];
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodesForCountryCode = function (a) {
        a = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[a];
        return null == a ? [] : a;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getCountryCodeForRegion = function (a) {
        return this.isValidRegionCode_(a) ? this.getCountryCodeForValidRegion_(a) : 0;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getCountryCodeForValidRegion_ = function (a) {
        var b = this.getMetadataForRegion(a);

        if (null == b) {
          throw Error("Invalid region code: " + a);
        }

        return b.getCountryCodeOrDefault();
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.getNddPrefixForRegion = function (a, b) {
        var c = this.getMetadataForRegion(a);

        if (null == c) {
          return null;
        }

        c = c.getNationalPrefixOrDefault();

        if (0 == c.length) {
          return null;
        }

        b && (c = c.replace("~", ""));
        return c;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isNANPACountry = function (a) {
        return null != a && goog.array.contains(i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_], a.toUpperCase());
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isAlphaNumber = function (a) {
        if (!i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber(a)) {
          return !1;
        }

        a = new goog.string.StringBuffer(a);
        this.maybeStripExtension(a);
        return i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_PHONE_PATTERN_, a.toString());
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumber = function (a) {
        a = this.isPossibleNumberWithReason(a);
        return a == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE || a == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE_LOCAL_ONLY;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberForType = function (a, b) {
        var c = this.isPossibleNumberForTypeWithReason(a, b);
        return c == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE || c == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE_LOCAL_ONLY;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.testNumberLength_ = function (a, b) {
        return this.testNumberLengthForType_(a, b, i18n.phonenumbers.PhoneNumberType.UNKNOWN);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.testNumberLengthForType_ = function (a, b, c) {
        var d = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(b, c),
            e = 0 == d.possibleLengthCount() ? b.getGeneralDesc().possibleLengthArray() : d.possibleLengthArray();
        d = d.possibleLengthLocalOnlyArray();

        if (c == i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE) {
          if (i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_(i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(b, i18n.phonenumbers.PhoneNumberType.FIXED_LINE))) {
            c = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(b, i18n.phonenumbers.PhoneNumberType.MOBILE), i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_(c) && (e = e.concat(0 == c.possibleLengthCount() ? b.getGeneralDesc().possibleLengthArray() : c.possibleLengthArray()), goog.array.sort(e), 0 == d.length ? d = c.possibleLengthLocalOnlyArray() : (d = d.concat(c.possibleLengthLocalOnlyArray()), goog.array.sort(d)));
          } else {
            return this.testNumberLengthForType_(a, b, i18n.phonenumbers.PhoneNumberType.MOBILE);
          }
        }

        if (-1 == e[0]) {
          return i18n.phonenumbers.PhoneNumberUtil.ValidationResult.INVALID_LENGTH;
        }

        a = a.length;

        if (-1 < goog.array.indexOf(d, a)) {
          return i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE_LOCAL_ONLY;
        }

        b = e[0];
        return b == a ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE : b > a ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_SHORT : e[e.length - 1] < a ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_LONG : -1 < goog.array.indexOf(e, a, 1) ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE : i18n.phonenumbers.PhoneNumberUtil.ValidationResult.INVALID_LENGTH;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberWithReason = function (a) {
        return this.isPossibleNumberForTypeWithReason(a, i18n.phonenumbers.PhoneNumberType.UNKNOWN);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberForTypeWithReason = function (a, b) {
        var c = this.getNationalSignificantNumber(a),
            d = a.getCountryCodeOrDefault();

        if (!this.hasValidCountryCallingCode_(d)) {
          return i18n.phonenumbers.PhoneNumberUtil.ValidationResult.INVALID_COUNTRY_CODE;
        }

        var e = this.getRegionCodeForCountryCode(d);
        d = this.getMetadataForRegionOrCallingCode_(d, e);
        return this.testNumberLengthForType_(c, d, b);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberString = function (a, b) {
        try {
          return this.isPossibleNumber(this.parse(a, b));
        } catch (c) {
          return !1;
        }
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.truncateTooLongNumber = function (a) {
        if (this.isValidNumber(a)) {
          return !0;
        }

        var b = a.clone(),
            c = a.getNationalNumberOrDefault();

        do {
          if (c = Math.floor(c / 10), b.setNationalNumber(c), 0 == c || this.isPossibleNumberWithReason(b) == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_SHORT) {
            return !1;
          }
        } while (!this.isValidNumber(b));

        a.setNationalNumber(c);
        return !0;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.extractCountryCode = function (a, b) {
        var c = a.toString();

        if (0 == c.length || "0" == c.charAt(0)) {
          return 0;
        }

        for (var d, e = c.length, f = 1; f <= i18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_COUNTRY_CODE_ && f <= e; ++f) {
          if (d = parseInt(c.substring(0, f), 10), d in i18n.phonenumbers.metadata.countryCodeToRegionCodeMap) {
            return b.append(c.substring(f)), d;
          }
        }

        return 0;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.maybeExtractCountryCode = function (a, b, c, d, e) {
        if (0 == a.length) {
          return 0;
        }

        a = new goog.string.StringBuffer(a);
        var f;
        null != b && (f = b.getInternationalPrefix());
        null == f && (f = "NonMatch");
        f = this.maybeStripInternationalPrefixAndNormalize(a, f);
        d && e.setCountryCodeSource(f);

        if (f != i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_DEFAULT_COUNTRY) {
          if (a.getLength() <= i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_) {
            throw Error(i18n.phonenumbers.Error.TOO_SHORT_AFTER_IDD);
          }

          b = this.extractCountryCode(a, c);

          if (0 != b) {
            return e.setCountryCode(b), b;
          }

          throw Error(i18n.phonenumbers.Error.INVALID_COUNTRY_CODE);
        }

        if (null != b) {
          f = b.getCountryCodeOrDefault();
          var g = "" + f,
              h = a.toString();

          if (goog.string.startsWith(h, g) && (g = new goog.string.StringBuffer(h.substring(g.length)), h = b.getGeneralDesc(), h = new RegExp(h.getNationalNumberPatternOrDefault()), this.maybeStripNationalPrefixAndCarrierCode(g, b, null), g = g.toString(), !i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(h, a.toString()) && i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(h, g) || this.testNumberLength_(a.toString(), b) == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_LONG)) {
            return c.append(g), d && e.setCountryCodeSource(i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN), e.setCountryCode(f), f;
          }
        }

        e.setCountryCode(0);
        return 0;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.parsePrefixAsIdd_ = function (a, b) {
        var c = b.toString();

        if (0 == c.search(a)) {
          var d = c.match(a)[0].length,
              e = c.substring(d).match(i18n.phonenumbers.PhoneNumberUtil.CAPTURING_DIGIT_PATTERN);

          if (e && null != e[1] && 0 < e[1].length && "0" == i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(e[1])) {
            return !1;
          }

          b.clear();
          b.append(c.substring(d));
          return !0;
        }

        return !1;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.maybeStripInternationalPrefixAndNormalize = function (a, b) {
        var c = a.toString();

        if (0 == c.length) {
          return i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_DEFAULT_COUNTRY;
        }

        if (i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(c)) {
          return c = c.replace(i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN, ""), a.clear(), a.append(i18n.phonenumbers.PhoneNumberUtil.normalize(c)), i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN;
        }

        c = new RegExp(b);
        i18n.phonenumbers.PhoneNumberUtil.normalizeSB_(a);
        return this.parsePrefixAsIdd_(c, a) ? i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_IDD : i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_DEFAULT_COUNTRY;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.maybeStripNationalPrefixAndCarrierCode = function (a, b, c) {
        var d = a.toString(),
            e = d.length,
            f = b.getNationalPrefixForParsing();

        if (0 == e || null == f || 0 == f.length) {
          return !1;
        }

        var g = new RegExp("^(?:" + f + ")");

        if (e = g.exec(d)) {
          f = new RegExp(b.getGeneralDesc().getNationalNumberPatternOrDefault());
          var h = i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, d),
              k = e.length - 1;
          b = b.getNationalPrefixTransformRule();

          if (null == b || 0 == b.length || null == e[k] || 0 == e[k].length) {
            if (h && !i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, d.substring(e[0].length))) {
              return !1;
            }

            null != c && 0 < k && null != e[k] && c.append(e[1]);
            a.set(d.substring(e[0].length));
          } else {
            d = d.replace(g, b);

            if (h && !i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, d)) {
              return !1;
            }

            null != c && 0 < k && c.append(e[1]);
            a.set(d);
          }

          return !0;
        }

        return !1;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.maybeStripExtension = function (a) {
        var b = a.toString(),
            c = b.search(i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERN_);

        if (0 <= c && i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber(b.substring(0, c))) {
          for (var d = b.match(i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERN_), e = d.length, f = 1; f < e; ++f) {
            if (null != d[f] && 0 < d[f].length) {
              return a.clear(), a.append(b.substring(0, c)), d[f];
            }
          }
        }

        return "";
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.checkRegionForParsing_ = function (a, b) {
        return this.isValidRegionCode_(b) || null != a && 0 < a.length && i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(a);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.parse = function (a, b) {
        return this.parseHelper_(a, b, !1, !0);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.parseAndKeepRawInput = function (a, b) {
        if (!this.isValidRegionCode_(b) && 0 < a.length && a.charAt(0) != i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN) {
          throw Error(i18n.phonenumbers.Error.INVALID_COUNTRY_CODE);
        }

        return this.parseHelper_(a, b, !0, !0);
      };

      i18n.phonenumbers.PhoneNumberUtil.setItalianLeadingZerosForPhoneNumber_ = function (a, b) {
        if (1 < a.length && "0" == a.charAt(0)) {
          b.setItalianLeadingZero(!0);

          for (var c = 1; c < a.length - 1 && "0" == a.charAt(c);) {
            c++;
          }

          1 != c && b.setNumberOfLeadingZeros(c);
        }
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.parseHelper_ = function (a, b, c, d) {
        if (null == a) {
          throw Error(i18n.phonenumbers.Error.NOT_A_NUMBER);
        }

        if (a.length > i18n.phonenumbers.PhoneNumberUtil.MAX_INPUT_STRING_LENGTH_) {
          throw Error(i18n.phonenumbers.Error.TOO_LONG);
        }

        var e = new goog.string.StringBuffer();
        this.buildNationalNumberForParsing_(a, e);

        if (!i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber(e.toString())) {
          throw Error(i18n.phonenumbers.Error.NOT_A_NUMBER);
        }

        if (d && !this.checkRegionForParsing_(e.toString(), b)) {
          throw Error(i18n.phonenumbers.Error.INVALID_COUNTRY_CODE);
        }

        d = new i18n.phonenumbers.PhoneNumber();
        c && d.setRawInput(a);
        a = this.maybeStripExtension(e);
        0 < a.length && d.setExtension(a);
        var f = this.getMetadataForRegion(b);
        a = new goog.string.StringBuffer();
        var g = 0,
            h = e.toString();

        try {
          g = this.maybeExtractCountryCode(h, f, a, c, d);
        } catch (k) {
          if (k.message == i18n.phonenumbers.Error.INVALID_COUNTRY_CODE && i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(h)) {
            if (h = h.replace(i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN, ""), g = this.maybeExtractCountryCode(h, f, a, c, d), 0 == g) {
              throw k;
            }
          } else {
            throw k;
          }
        }

        0 != g ? (e = this.getRegionCodeForCountryCode(g), e != b && (f = this.getMetadataForRegionOrCallingCode_(g, e))) : (i18n.phonenumbers.PhoneNumberUtil.normalizeSB_(e), a.append(e.toString()), null != b ? (g = f.getCountryCodeOrDefault(), d.setCountryCode(g)) : c && d.clearCountryCodeSource());

        if (a.getLength() < i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_) {
          throw Error(i18n.phonenumbers.Error.TOO_SHORT_NSN);
        }

        null != f && (b = new goog.string.StringBuffer(), e = new goog.string.StringBuffer(a.toString()), this.maybeStripNationalPrefixAndCarrierCode(e, f, b), f = this.testNumberLength_(e.toString(), f), g = i18n.phonenumbers.PhoneNumberUtil.ValidationResult, f != g.TOO_SHORT && f != g.IS_POSSIBLE_LOCAL_ONLY && f != g.INVALID_LENGTH && (a = e, c && 0 < b.toString().length && d.setPreferredDomesticCarrierCode(b.toString())));
        c = a.toString();
        a = c.length;

        if (a < i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_) {
          throw Error(i18n.phonenumbers.Error.TOO_SHORT_NSN);
        }

        if (a > i18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_FOR_NSN_) {
          throw Error(i18n.phonenumbers.Error.TOO_LONG);
        }

        i18n.phonenumbers.PhoneNumberUtil.setItalianLeadingZerosForPhoneNumber_(c, d);
        d.setNationalNumber(parseInt(c, 10));
        return d;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.buildNationalNumberForParsing_ = function (a, b) {
        var c = a.indexOf(i18n.phonenumbers.PhoneNumberUtil.RFC3966_PHONE_CONTEXT_);

        if (0 <= c) {
          var d = c + i18n.phonenumbers.PhoneNumberUtil.RFC3966_PHONE_CONTEXT_.length;

          if (a.charAt(d) == i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN) {
            var e = a.indexOf(";", d);
            0 < e ? b.append(a.substring(d, e)) : b.append(a.substring(d));
          }

          d = a.indexOf(i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_);
          b.append(a.substring(0 <= d ? d + i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_.length : 0, c));
        } else {
          b.append(i18n.phonenumbers.PhoneNumberUtil.extractPossibleNumber(a));
        }

        c = b.toString();
        d = c.indexOf(i18n.phonenumbers.PhoneNumberUtil.RFC3966_ISDN_SUBADDRESS_);
        0 < d && (b.clear(), b.append(c.substring(0, d)));
      };

      i18n.phonenumbers.PhoneNumberUtil.copyCoreFieldsOnly_ = function (a) {
        var b = new i18n.phonenumbers.PhoneNumber();
        b.setCountryCode(a.getCountryCodeOrDefault());
        b.setNationalNumber(a.getNationalNumberOrDefault());
        0 < a.getExtensionOrDefault().length && b.setExtension(a.getExtensionOrDefault());
        a.getItalianLeadingZero() && (b.setItalianLeadingZero(!0), b.setNumberOfLeadingZeros(a.getNumberOfLeadingZerosOrDefault()));
        return b;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isNumberMatch = function (a, b) {
        if ("string" == typeof a) {
          try {
            var c = this.parse(a, i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_);
          } catch (g) {
            if (g.message != i18n.phonenumbers.Error.INVALID_COUNTRY_CODE) {
              return i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER;
            }

            if ("string" != typeof b) {
              var d = this.getRegionCodeForCountryCode(b.getCountryCodeOrDefault());

              if (d != i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_) {
                try {
                  c = this.parse(a, d);
                } catch (h) {
                  return i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER;
                }

                c = this.isNumberMatch(c, b);
                return c == i18n.phonenumbers.PhoneNumberUtil.MatchType.EXACT_MATCH ? i18n.phonenumbers.PhoneNumberUtil.MatchType.NSN_MATCH : c;
              }
            }

            try {
              c = this.parseHelper_(a, null, !1, !1);
            } catch (h) {
              return i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER;
            }
          }
        } else {
          c = a.clone();
        }

        if ("string" == typeof b) {
          try {
            var e = this.parse(b, i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_);
            return this.isNumberMatch(a, e);
          } catch (g) {
            return g.message != i18n.phonenumbers.Error.INVALID_COUNTRY_CODE ? i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER : this.isNumberMatch(b, c);
          }
        } else {
          e = b.clone();
        }

        c = i18n.phonenumbers.PhoneNumberUtil.copyCoreFieldsOnly_(c);
        e = i18n.phonenumbers.PhoneNumberUtil.copyCoreFieldsOnly_(e);

        if (c.hasExtension() && e.hasExtension() && c.getExtension() != e.getExtension()) {
          return i18n.phonenumbers.PhoneNumberUtil.MatchType.NO_MATCH;
        }

        d = c.getCountryCodeOrDefault();
        var f = e.getCountryCodeOrDefault();

        if (0 != d && 0 != f) {
          return c.equals(e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.EXACT_MATCH : d == f && this.isNationalNumberSuffixOfTheOther_(c, e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.SHORT_NSN_MATCH : i18n.phonenumbers.PhoneNumberUtil.MatchType.NO_MATCH;
        }

        c.setCountryCode(0);
        e.setCountryCode(0);
        return c.equals(e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.NSN_MATCH : this.isNationalNumberSuffixOfTheOther_(c, e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.SHORT_NSN_MATCH : i18n.phonenumbers.PhoneNumberUtil.MatchType.NO_MATCH;
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.isNationalNumberSuffixOfTheOther_ = function (a, b) {
        var c = "" + a.getNationalNumber(),
            d = "" + b.getNationalNumber();
        return goog.string.endsWith(c, d) || goog.string.endsWith(d, c);
      };

      i18n.phonenumbers.PhoneNumberUtil.prototype.canBeInternationallyDialled = function (a) {
        var b = this.getMetadataForRegion(this.getRegionCodeForNumber(a));

        if (null == b) {
          return !0;
        }

        a = this.getNationalSignificantNumber(a);
        return !this.isNumberMatchingDesc_(a, b.getNoInternationalDialling());
      };

      i18n.phonenumbers.PhoneNumberUtil.matchesEntirely = function (a, b) {
        var c = "string" == typeof a ? b.match("^(?:" + a + ")$") : b.match(a);
        return c && c[0].length == b.length ? !0 : !1;
      };

      i18n.phonenumbers.PhoneNumberUtil.matchesPrefix = function (a, b) {
        var c = "string" == typeof a ? b.match("^(?:" + a + ")") : b.match(a);
        return c && goog.string.startsWith(b, c[0]) ? !0 : !1;
      };

      i18n.phonenumbers.AsYouTypeFormatter = function (a) {
        this.DIGIT_PLACEHOLDER_ = "\u2008";
        this.DIGIT_PATTERN_ = new RegExp(this.DIGIT_PLACEHOLDER_);
        this.currentOutput_ = "";
        this.formattingTemplate_ = new goog.string.StringBuffer();
        this.currentFormattingPattern_ = "";
        this.accruedInput_ = new goog.string.StringBuffer();
        this.accruedInputWithoutFormatting_ = new goog.string.StringBuffer();
        this.ableToFormat_ = !0;
        this.isExpectingCountryCallingCode_ = this.isCompleteNumber_ = this.inputHasFormatting_ = !1;
        this.phoneUtil_ = i18n.phonenumbers.PhoneNumberUtil.getInstance();
        this.positionToRemember_ = this.originalPosition_ = this.lastMatchPosition_ = 0;
        this.prefixBeforeNationalNumber_ = new goog.string.StringBuffer();
        this.shouldAddSpaceAfterNationalPrefix_ = !1;
        this.extractedNationalPrefix_ = "";
        this.nationalNumber_ = new goog.string.StringBuffer();
        this.possibleFormats_ = [];
        this.defaultCountry_ = a;
        this.defaultMetadata_ = this.currentMetadata_ = this.getMetadataForRegion_(this.defaultCountry_);
      };

      i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_ = " ";
      i18n.phonenumbers.AsYouTypeFormatter.EMPTY_METADATA_ = new i18n.phonenumbers.PhoneMetadata();
      i18n.phonenumbers.AsYouTypeFormatter.EMPTY_METADATA_.setInternationalPrefix("NA");
      i18n.phonenumbers.AsYouTypeFormatter.ELIGIBLE_FORMAT_PATTERN_ = new RegExp("^[" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + "]*(\\$\\d[" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + "]*)+$");
      i18n.phonenumbers.AsYouTypeFormatter.NATIONAL_PREFIX_SEPARATORS_PATTERN_ = /[- ]/;
      i18n.phonenumbers.AsYouTypeFormatter.MIN_LEADING_DIGITS_LENGTH_ = 3;

      i18n.phonenumbers.AsYouTypeFormatter.prototype.getMetadataForRegion_ = function (a) {
        a = this.phoneUtil_.getCountryCodeForRegion(a);
        a = this.phoneUtil_.getRegionCodeForCountryCode(a);
        a = this.phoneUtil_.getMetadataForRegion(a);
        return null != a ? a : i18n.phonenumbers.AsYouTypeFormatter.EMPTY_METADATA_;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.maybeCreateNewTemplate_ = function () {
        for (var a = this.possibleFormats_.length, b = 0; b < a; ++b) {
          var c = this.possibleFormats_[b],
              d = c.getPatternOrDefault();

          if (this.currentFormattingPattern_ == d) {
            return !1;
          }

          if (this.createFormattingTemplate_(c)) {
            return this.currentFormattingPattern_ = d, this.shouldAddSpaceAfterNationalPrefix_ = i18n.phonenumbers.AsYouTypeFormatter.NATIONAL_PREFIX_SEPARATORS_PATTERN_.test(c.getNationalPrefixFormattingRule()), this.lastMatchPosition_ = 0, !0;
          }
        }

        return this.ableToFormat_ = !1;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.getAvailableFormats_ = function (a) {
        for (var b = this.isCompleteNumber_ && 0 == this.extractedNationalPrefix_.length && 0 < this.currentMetadata_.intlNumberFormatCount() ? this.currentMetadata_.intlNumberFormatArray() : this.currentMetadata_.numberFormatArray(), c = b.length, d = 0; d < c; ++d) {
          var e = b[d];
          0 < this.extractedNationalPrefix_.length && this.phoneUtil_.formattingRuleHasFirstGroupOnly(e.getNationalPrefixFormattingRuleOrDefault()) && !e.getNationalPrefixOptionalWhenFormatting() && !e.hasDomesticCarrierCodeFormattingRule() || (0 != this.extractedNationalPrefix_.length || this.isCompleteNumber_ || this.phoneUtil_.formattingRuleHasFirstGroupOnly(e.getNationalPrefixFormattingRuleOrDefault()) || e.getNationalPrefixOptionalWhenFormatting()) && i18n.phonenumbers.AsYouTypeFormatter.ELIGIBLE_FORMAT_PATTERN_.test(e.getFormatOrDefault()) && this.possibleFormats_.push(e);
        }

        this.narrowDownPossibleFormats_(a);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.narrowDownPossibleFormats_ = function (a) {
        for (var b = [], c = a.length - i18n.phonenumbers.AsYouTypeFormatter.MIN_LEADING_DIGITS_LENGTH_, d = this.possibleFormats_.length, e = 0; e < d; ++e) {
          var f = this.possibleFormats_[e];

          if (0 == f.leadingDigitsPatternCount()) {
            b.push(this.possibleFormats_[e]);
          } else {
            var g = Math.min(c, f.leadingDigitsPatternCount() - 1);
            f = f.getLeadingDigitsPattern(g);
            0 == a.search(f) && b.push(this.possibleFormats_[e]);
          }
        }

        this.possibleFormats_ = b;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.createFormattingTemplate_ = function (a) {
        var b = a.getPatternOrDefault();
        this.formattingTemplate_.clear();
        a = this.getFormattingTemplate_(b, a.getFormatOrDefault());
        return 0 < a.length ? (this.formattingTemplate_.append(a), !0) : !1;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.getFormattingTemplate_ = function (a, b) {
        var c = "999999999999999".match(a)[0];

        if (c.length < this.nationalNumber_.getLength()) {
          return "";
        }

        c = c.replace(new RegExp(a, "g"), b);
        return c = c.replace(RegExp("9", "g"), this.DIGIT_PLACEHOLDER_);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.clear = function () {
        this.currentOutput_ = "";
        this.accruedInput_.clear();
        this.accruedInputWithoutFormatting_.clear();
        this.formattingTemplate_.clear();
        this.lastMatchPosition_ = 0;
        this.currentFormattingPattern_ = "";
        this.prefixBeforeNationalNumber_.clear();
        this.extractedNationalPrefix_ = "";
        this.nationalNumber_.clear();
        this.ableToFormat_ = !0;
        this.inputHasFormatting_ = !1;
        this.originalPosition_ = this.positionToRemember_ = 0;
        this.isExpectingCountryCallingCode_ = this.isCompleteNumber_ = !1;
        this.possibleFormats_ = [];
        this.shouldAddSpaceAfterNationalPrefix_ = !1;
        this.currentMetadata_ != this.defaultMetadata_ && (this.currentMetadata_ = this.getMetadataForRegion_(this.defaultCountry_));
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigit = function (a) {
        return this.currentOutput_ = this.inputDigitWithOptionToRememberPosition_(a, !1);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigitAndRememberPosition = function (a) {
        return this.currentOutput_ = this.inputDigitWithOptionToRememberPosition_(a, !0);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigitWithOptionToRememberPosition_ = function (a, b) {
        this.accruedInput_.append(a);
        b && (this.originalPosition_ = this.accruedInput_.getLength());
        this.isDigitOrLeadingPlusSign_(a) ? a = this.normalizeAndAccrueDigitsAndPlusSign_(a, b) : (this.ableToFormat_ = !1, this.inputHasFormatting_ = !0);

        if (!this.ableToFormat_) {
          if (!this.inputHasFormatting_) {
            if (this.attemptToExtractIdd_()) {
              if (this.attemptToExtractCountryCallingCode_()) {
                return this.attemptToChoosePatternWithPrefixExtracted_();
              }
            } else {
              if (this.ableToExtractLongerNdd_()) {
                return this.prefixBeforeNationalNumber_.append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_), this.attemptToChoosePatternWithPrefixExtracted_();
              }
            }
          }

          return this.accruedInput_.toString();
        }

        switch (this.accruedInputWithoutFormatting_.getLength()) {
          case 0:
          case 1:
          case 2:
            return this.accruedInput_.toString();

          case 3:
            if (this.attemptToExtractIdd_()) {
              this.isExpectingCountryCallingCode_ = !0;
            } else {
              return this.extractedNationalPrefix_ = this.removeNationalPrefixFromNationalNumber_(), this.attemptToChooseFormattingPattern_();
            }

          default:
            if (this.isExpectingCountryCallingCode_) {
              return this.attemptToExtractCountryCallingCode_() && (this.isExpectingCountryCallingCode_ = !1), this.prefixBeforeNationalNumber_.toString() + this.nationalNumber_.toString();
            }

            if (0 < this.possibleFormats_.length) {
              var c = this.inputDigitHelper_(a),
                  d = this.attemptToFormatAccruedDigits_();

              if (0 < d.length) {
                return d;
              }

              this.narrowDownPossibleFormats_(this.nationalNumber_.toString());
              return this.maybeCreateNewTemplate_() ? this.inputAccruedNationalNumber_() : this.ableToFormat_ ? this.appendNationalNumber_(c) : this.accruedInput_.toString();
            }

            return this.attemptToChooseFormattingPattern_();
        }
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToChoosePatternWithPrefixExtracted_ = function () {
        this.ableToFormat_ = !0;
        this.isExpectingCountryCallingCode_ = !1;
        this.possibleFormats_ = [];
        this.lastMatchPosition_ = 0;
        this.formattingTemplate_.clear();
        this.currentFormattingPattern_ = "";
        return this.attemptToChooseFormattingPattern_();
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.getExtractedNationalPrefix_ = function () {
        return this.extractedNationalPrefix_;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.ableToExtractLongerNdd_ = function () {
        if (0 < this.extractedNationalPrefix_.length) {
          var a = this.nationalNumber_.toString();
          this.nationalNumber_.clear();
          this.nationalNumber_.append(this.extractedNationalPrefix_);
          this.nationalNumber_.append(a);
          a = this.prefixBeforeNationalNumber_.toString();
          var b = a.lastIndexOf(this.extractedNationalPrefix_);
          this.prefixBeforeNationalNumber_.clear();
          this.prefixBeforeNationalNumber_.append(a.substring(0, b));
        }

        return this.extractedNationalPrefix_ != this.removeNationalPrefixFromNationalNumber_();
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.isDigitOrLeadingPlusSign_ = function (a) {
        return i18n.phonenumbers.PhoneNumberUtil.CAPTURING_DIGIT_PATTERN.test(a) || 1 == this.accruedInput_.getLength() && i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_PATTERN.test(a);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToFormatAccruedDigits_ = function () {
        for (var a = this.nationalNumber_.toString(), b = this.possibleFormats_.length, c = 0; c < b; ++c) {
          var d = this.possibleFormats_[c],
              e = d.getPatternOrDefault();

          if (new RegExp("^(?:" + e + ")$").test(a) && (this.shouldAddSpaceAfterNationalPrefix_ = i18n.phonenumbers.AsYouTypeFormatter.NATIONAL_PREFIX_SEPARATORS_PATTERN_.test(d.getNationalPrefixFormattingRule()), d = a.replace(new RegExp(e, "g"), d.getFormat()), d = this.appendNationalNumber_(d), i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(d) == this.accruedInputWithoutFormatting_)) {
            return d;
          }
        }

        return "";
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.appendNationalNumber_ = function (a) {
        var b = this.prefixBeforeNationalNumber_.getLength();
        return this.shouldAddSpaceAfterNationalPrefix_ && 0 < b && this.prefixBeforeNationalNumber_.toString().charAt(b - 1) != i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_ ? this.prefixBeforeNationalNumber_ + i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_ + a : this.prefixBeforeNationalNumber_ + a;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.getRememberedPosition = function () {
        if (!this.ableToFormat_) {
          return this.originalPosition_;
        }

        for (var a = 0, b = 0, c = this.accruedInputWithoutFormatting_.toString(), d = this.currentOutput_.toString(); a < this.positionToRemember_ && b < d.length;) {
          c.charAt(a) == d.charAt(b) && a++, b++;
        }

        return b;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToChooseFormattingPattern_ = function () {
        var a = this.nationalNumber_.toString();
        return a.length >= i18n.phonenumbers.AsYouTypeFormatter.MIN_LEADING_DIGITS_LENGTH_ ? (this.getAvailableFormats_(a), a = this.attemptToFormatAccruedDigits_(), 0 < a.length ? a : this.maybeCreateNewTemplate_() ? this.inputAccruedNationalNumber_() : this.accruedInput_.toString()) : this.appendNationalNumber_(a);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.inputAccruedNationalNumber_ = function () {
        var a = this.nationalNumber_.toString(),
            b = a.length;

        if (0 < b) {
          for (var c = "", d = 0; d < b; d++) {
            c = this.inputDigitHelper_(a.charAt(d));
          }

          return this.ableToFormat_ ? this.appendNationalNumber_(c) : this.accruedInput_.toString();
        }

        return this.prefixBeforeNationalNumber_.toString();
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.isNanpaNumberWithNationalPrefix_ = function () {
        if (1 != this.currentMetadata_.getCountryCode()) {
          return !1;
        }

        var a = this.nationalNumber_.toString();
        return "1" == a.charAt(0) && "0" != a.charAt(1) && "1" != a.charAt(1);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.removeNationalPrefixFromNationalNumber_ = function () {
        var a = this.nationalNumber_.toString(),
            b = 0;

        if (this.isNanpaNumberWithNationalPrefix_()) {
          b = 1, this.prefixBeforeNationalNumber_.append("1").append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_), this.isCompleteNumber_ = !0;
        } else {
          if (this.currentMetadata_.hasNationalPrefixForParsing()) {
            var c = new RegExp("^(?:" + this.currentMetadata_.getNationalPrefixForParsing() + ")");
            c = a.match(c);
            null != c && null != c[0] && 0 < c[0].length && (this.isCompleteNumber_ = !0, b = c[0].length, this.prefixBeforeNationalNumber_.append(a.substring(0, b)));
          }
        }

        this.nationalNumber_.clear();
        this.nationalNumber_.append(a.substring(b));
        return a.substring(0, b);
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToExtractIdd_ = function () {
        var a = this.accruedInputWithoutFormatting_.toString(),
            b = new RegExp("^(?:\\" + i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + "|" + this.currentMetadata_.getInternationalPrefix() + ")");
        b = a.match(b);
        return null != b && null != b[0] && 0 < b[0].length ? (this.isCompleteNumber_ = !0, b = b[0].length, this.nationalNumber_.clear(), this.nationalNumber_.append(a.substring(b)), this.prefixBeforeNationalNumber_.clear(), this.prefixBeforeNationalNumber_.append(a.substring(0, b)), a.charAt(0) != i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN && this.prefixBeforeNationalNumber_.append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_), !0) : !1;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToExtractCountryCallingCode_ = function () {
        if (0 == this.nationalNumber_.getLength()) {
          return !1;
        }

        var a = new goog.string.StringBuffer(),
            b = this.phoneUtil_.extractCountryCode(this.nationalNumber_, a);

        if (0 == b) {
          return !1;
        }

        this.nationalNumber_.clear();
        this.nationalNumber_.append(a.toString());
        a = this.phoneUtil_.getRegionCodeForCountryCode(b);
        i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY == a ? this.currentMetadata_ = this.phoneUtil_.getMetadataForNonGeographicalRegion(b) : a != this.defaultCountry_ && (this.currentMetadata_ = this.getMetadataForRegion_(a));
        this.prefixBeforeNationalNumber_.append("" + b).append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_);
        this.extractedNationalPrefix_ = "";
        return !0;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.normalizeAndAccrueDigitsAndPlusSign_ = function (a, b) {
        if (a == i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN) {
          var c = a;
          this.accruedInputWithoutFormatting_.append(a);
        } else {
          c = i18n.phonenumbers.PhoneNumberUtil.DIGIT_MAPPINGS[a], this.accruedInputWithoutFormatting_.append(c), this.nationalNumber_.append(c);
        }

        b && (this.positionToRemember_ = this.accruedInputWithoutFormatting_.getLength());
        return c;
      };

      i18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigitHelper_ = function (a) {
        var b = this.formattingTemplate_.toString();

        if (0 <= b.substring(this.lastMatchPosition_).search(this.DIGIT_PATTERN_)) {
          var c = b.search(this.DIGIT_PATTERN_);
          a = b.replace(this.DIGIT_PATTERN_, a);
          this.formattingTemplate_.clear();
          this.formattingTemplate_.append(a);
          this.lastMatchPosition_ = c;
          return a.substring(0, this.lastMatchPosition_ + 1);
        }

        1 == this.possibleFormats_.length && (this.ableToFormat_ = !1);
        this.currentFormattingPattern_ = "";
        return this.accruedInput_.toString();
      };

      i18n.phonenumbers.shortnumbermetadata = {};
      i18n.phonenumbers.shortnumbermetadata.countryCodeToRegionCodeMap = {
        0: "AC AD AE AF AG AI AL AM AO AR AS AT AU AW AX AZ BA BB BD BE BF BG BH BI BJ BL BM BN BO BQ BR BS BT BW BY BZ CA CC CD CF CG CH CI CK CL CM CN CO CR CU CV CW CX CY CZ DE DJ DK DM DO DZ EC EE EG EH ER ES ET FI FJ FK FM FO FR GA GB GD GE GF GG GH GI GL GM GN GP GR GT GU GW GY HK HN HR HT HU ID IE IL IM IN IQ IR IS IT JE JM JO JP KE KG KH KI KM KN KP KR KW KY KZ LA LB LC LI LK LR LS LT LU LV LY MA MC MD ME MF MG MH MK ML MM MN MO MP MQ MR MS MT MU MV MW MX MY MZ NA NC NE NF NG NI NL NO NP NR NU NZ OM PA PE PF PG PH PK PL PM PR PS PT PW PY QA RE RO RS RU RW SA SB SC SD SE SG SH SI SJ SK SL SM SN SO SR ST SV SX SY SZ TC TD TG TH TJ TL TM TN TO TR TT TV TW TZ UA UG US UY UZ VA VC VE VG VI VN VU WF WS XK YE YT ZA ZM ZW".split(" ")
      };
      i18n.phonenumbers.shortnumbermetadata.countryToMetadata = {
        AC: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "AC",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        AD: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[0268]",,,, "110"], [,,,,,,,,, [-1]],,,, "AD",,,,,,,,,,,,,,,,,, [,, "11[0268]",,,, "110"],, [,, "11[0268]",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        AE: [, [,, "[149]\\d{2,3}",,,,,,, [3, 4]],,, [,, "112|99[7-9]",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "AE",,,,,,,,,,,,,,,,,, [,, "112|99[7-9]",,,, "112",,, [3]],, [,, "112|445[16]|99[7-9]",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "445\\d",,,, "4450",,, [4]]],
        AF: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "1(?:0[02]|19)",,,, "100",,, [3]], [,,,,,,,,, [-1]],,,, "AF",,,,,,,,,,,,,,,,,, [,, "1(?:0[02]|19)",,,, "100",,, [3]],, [,, "1(?:0[02]|19)|40404",,,, "100"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        AG: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "AG",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911"],, [,, "176|9(?:11|99)",,,, "176"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        AI: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "AI",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "176|911",,,, "176"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        AL: [, [,, "[15]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:1(?:2|6[01]\\d\\d)|2[7-9]|3[15]|41)",,,, "112",,, [3, 6]], [,, "5\\d{4}",,,, "50000",,, [5]],,,, "AL",,,,,,,,,,,,,,,,,, [,, "1(?:12|2[7-9])",,,, "112",,, [3]],, [,, "1(?:1(?:6(?:000|1(?:06|11|23))|8\\d\\d)|65\\d|89[12])|5\\d{4}|1(?:[1349]\\d|2[2-9])",,,, "110"], [,,,,,,,,, [-1]], [,, "123",,,, "123",,, [3]],, [,, "131|5\\d{4}",,,, "131",,, [3, 5]]],
        AM: [, [,, "[148]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "10[1-3]",,,, "101",,, [3]], [,,,,,,,,, [-1]],,,, "AM",,,,,,,,,,,,,,,,,, [,, "10[1-3]",,,, "101",,, [3]],, [,, "(?:1|8[1-7])\\d\\d|40404",,,, "100"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        AO: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[235]",,,, "112"], [,,,,,,,,, [-1]],,,, "AO",,,,,,,,,,,,,,,,,, [,, "11[235]",,,, "112"],, [,, "11[235]",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        AR: [, [,, "[01389]\\d{1,4}",,,,,,, [2, 3, 4, 5]],,, [,, "000|1(?:0[0-35-7]|1[0245]|2[15]|9)|911",,,, "19",,, [2, 3]], [,,,,,,,,, [-1]],,,, "AR",,,,,,,,,,,,,,,,,, [,, "10[017]|911",,,, "100",,, [3]],, [,, "000|1(?:0[0-35-7]|1[02-5]|2[15]|9)|3372|89338|911",,,, "19"], [,,,,,,,,, [-1]], [,, "893\\d\\d",,,, "89300",,, [5]],, [,, "(?:337|893\\d)\\d",,,, "3370",,, [4, 5]]],
        AS: [, [,, "[49]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "911",,,, "911",,, [3]], [,,,,,,,,, [-1]],,,, "AS",,,,,,,,,,,,,,,,,, [,, "911",,,, "911",,, [3]],, [,, "40404|911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        AT: [, [,, "1\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "116\\d{3}|1(?:[12]2|33|44)",,,, "112"], [,,,,,,,,, [-1]],,,, "AT",,,,,,,,,,,,,,,,,, [,, "1(?:[12]2|33|44)",,,, "112",,, [3]],, [,, "116(?:00[06]|1(?:17|23))|1(?:[12]2|33|44)",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        AU: [, [,, "[0-27]\\d{2,7}",,,,,,, [3, 4, 5, 6, 7, 8]],,, [,, "000|1(?:06|12|258885|55\\d)|733",,,, "000",,, [3, 4, 7]], [,, "1(?:2(?:34|456)|9\\d{4,6})",,,, "1234",,, [4, 5, 6, 7, 8]],,,, "AU",,,,,,,,,,,,,,,,,, [,, "000|1(?:06|12)",,,, "000",,, [3]],, [,, "000|1(?:06|1(?:00|2|9[46])|2(?:[23]\\d|(?:4|5\\d)\\d{2,3}|8(?:[013-9]\\d|2))|555|9\\d{4,6})|225|7(?:33|67)",,,, "000"], [,, "1(?:1[09]\\d|24733)|225|767",,,, "225",,, [3, 4, 6]], [,, "1(?:258885|55\\d)",,,, "1550",,, [4, 7]],, [,, "19\\d{4,6}",,,, "190000",,, [6, 7, 8]]],
        AW: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "100|911",,,, "100"], [,,,,,,,,, [-1]],,,, "AW",,,,,,,,,,,,,,,,,, [,, "100|911",,,, "100"],, [,, "1(?:00|18|76)|91[13]",,,, "100"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        AX: [, [,, "[17]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "112",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "AX",,,,,,,,,,,,,,,,,, [,, "112",,,, "112",,, [3]],, [,, "112|75[12]\\d\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        AZ: [, [,, "[148]\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:0[1-3]|12)",,,, "101",,, [3]], [,,,,,,,,, [-1]],,,, "AZ",,,,,,,,,,,,,,,,,, [,, "1(?:0[1-3]|12)",,,, "101",,, [3]],, [,, "1(?:0[1-3]|12)|(?:404|880)0",,,, "101"], [,,,,,,,,, [-1]], [,, "(?:404|880)\\d",,,, "4040",,, [4]],, [,, "(?:404|880)\\d",,,, "4040",,, [4]]],
        BA: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:16\\d{3}|2[2-4])",,,, "122",,, [3, 6]], [,,,,,,,,, [-1]],,,, "BA",,,,,,,,,,,,,,,,,, [,, "12[2-4]",,,, "122",,, [3]],, [,, "1(?:16(?:00[06]|1(?:1[17]|23))|2(?:0[0-7]|[2-5]|6[0-26])|(?:[3-5]|7\\d)\\d\\d)|1(?:18|2[78])\\d\\d?",,,, "122"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BB: [, [,, "[2-689]\\d\\d",,,,,,, [3]],,, [,, "[2359]11",,,, "211"], [,,,,,,,,, [-1]],,,, "BB",,,,,,,,,,,,,,,,,, [,, "[2359]11",,,, "211"],, [,, "[2-689]11",,,, "211"], [,,,,,,,,, [-1]], [,, "[468]11",,,, "411"],, [,,,,,,,,, [-1]]],
        BD: [, [,, "[1579]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "10[0-26]|[19]99",,,, "100",,, [3]], [,,,,,,,,, [-1]],,,, "BD",,,,,,,,,,,,,,,,,, [,, "10[0-2]|[19]99",,,, "100",,, [3]],, [,, "1(?:0(?:[0-369]|5[1-4]|7[0-4]|8[0-29])|1[16-9]|2(?:[134]|2[0-5])|3(?:1\\d?|6[3-6])|5[2-9])|5012|786|9594|[19]99|1(?:0(?:50|6\\d)|33|4(?:0|1\\d))\\d",,,, "100"], [,,,,,,,,, [-1]], [,, "1(?:11|2[13])|(?:501|959)\\d|786",,,, "111",,, [3, 4]],, [,, "959\\d",,,, "9590",,, [4]]],
        BE: [, [,, "[1-9]\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "1(?:0[0-25-8]|1[02]|7(?:12|77)|813)|(?:116|8)\\d{3}",,,, "100"], [,, "1(?:2[03]|40)4|(?:1(?:[24]1|3[01])|[2-79]\\d\\d)\\d",,,, "1204",,, [4]],,,, "BE",,,,,,,,,,,,,,,,,, [,, "1(?:0[01]|12)",,,, "100",,, [3]],, [,, "1(?:0[0-8]|1(?:[027]|6117)|2(?:12|3[0-24])|313|414|5(?:1[05]|5[15]|66|95)|6(?:1[167]|36|6[16])|7(?:[07][017]|1[27-9]|22|33|65)|81[39])|[2-9]\\d{3}|1(?:1600|45)0|1(?:[2-4]9|78)9|1[2-4]0[47]",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "[2-9]\\d{3}",,,, "2000",,, [4]]],
        BF: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]],,,, "BF",,,,,,,,,,,,,,,,,, [,, "1[78]",,,, "17"],, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BG: [, [,, "1\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "1(?:1(?:2|6\\d{3})|50|6[06])",,,, "112"], [,,,,,,,,, [-1]],,,, "BG",,,,,,,,,,,,,,,,,, [,, "1(?:12|50|6[06])",,,, "112",,, [3]],, [,, "1(?:1(?:2|6(?:000|111))|50|6[06])",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BH: [, [,, "[0189]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "(?:0[167]|81)\\d{3}|[19]99",,,, "199"], [,, "9[148]\\d{3}",,,, "91000",,, [5]],,,, "BH",,,,,,,,,,,,,,,,,, [,, "[19]99",,,, "199",,, [3]],, [,, "1(?:[02]\\d|12|4[01]|51|8[18]|9[169])|99[02489]|(?:0[167]|8[158]|9[148])\\d{3}",,,, "100"], [,,,,,,,,, [-1]], [,, "0[67]\\d{3}|88000|98555",,,, "06000",,, [5]],, [,, "88000|98555",,,, "88000",,, [5]]],
        BI: [, [,, "[16-9]\\d{2,3}",,,,,,, [3, 4]],,, [,, "11[237]|611",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "BI",,,,,,,,,,,,,,,,,, [,, "11[237]",,,, "112",,, [3]],, [,, "1(?:1\\d|5[2-9]|6[0-256])|611|7(?:10|77|979)|8[28]8|900",,,, "110"], [,,,,,,,,, [-1]], [,, "611|7(?:10|77)|888|900",,,, "611",,, [3]],, [,, "(?:71|90)0",,,, "710",,, [3]]],
        BJ: [, [,, "[17]\\d{2,3}",,,,,,, [3, 4]],,, [,, "11[78]|7[3-5]\\d\\d",,,, "117"], [,,,,,,,,, [-1]],,,, "BJ",,,,,,,,,,,,,,,,,, [,, "11[78]",,,, "117",,, [3]],, [,, "1(?:1[78]|2[02-5]|60)|7[0-5]\\d\\d",,,, "117"], [,,,,,,,,, [-1]], [,, "12[02-5]",,,, "120",,, [3]],, [,,,,,,,,, [-1]]],
        BL: [, [,, "1\\d",,,,,,, [2]],,, [,, "18",,,, "18"], [,,,,,,,,, [-1]],,,, "BL",,,,,,,,,,,,,,,,,, [,, "18",,,, "18"],, [,, "18",,,, "18"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BM: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "BM",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "176|911",,,, "176"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        BN: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "99[135]",,,, "991"], [,,,,,,,,, [-1]],,,, "BN",,,,,,,,,,,,,,,,,, [,, "99[135]",,,, "991"],, [,, "99[135]",,,, "991"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BO: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "11[089]",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "BO",,,,,,,,,,,,,,,,,, [,, "11[089]",,,, "110",,, [3]],, [,, "11[089]|40404",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        BQ: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "112|911",,,, "112"], [,,,,,,,,, [-1]],,,, "BQ",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112"],, [,, "1(?:12|76)|911",,,, "112"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        BR: [, [,, "[1-69]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:00|12|28|8[015]|9[0-47-9])|4(?:57|82\\d)|911",,,, "100",,, [3, 4]], [,,,,,,,,, [-1]],,,, "BR",,,,,,,,,,,,,,,,,, [,, "1(?:12|28|9[023])|911",,,, "112",,, [3]],, [,, "1(?:0(?:[02]|3(?:1[2-579]|2[13-9]|3[124-9]|4[1-3578]|5[1-468]|6[139]|8[149]|9[168])|5[0-35-9]|6(?:0|1[0-35-8]?|2[0145]|3[0137]?|4[37-9]?|5[0-35]|6[016]?|7[137]?|8[5-8]|9[1359]))|1[25-8]|2[357-9]|3[024-68]|4[12568]|5\\d|6[0-8]|8[015]|9[0-47-9])|2(?:7(?:330|878)|85959?)|(?:32|91)1|4(?:0404?|57|828)|55555|6(?:0\\d{4}|10000)|(?:133|411)[12]",,,, "100"], [,, "102|273\\d\\d|321",,,, "102",,, [3, 5]], [,, "151|(?:278|555)\\d\\d|4(?:04\\d\\d?|11\\d|57)",,,, "151",,, [3, 4, 5]],, [,, "285\\d{2,3}|321|40404|(?:27[38]\\d|482)\\d|6(?:0\\d|10)\\d{3}",,,, "321"]],
        BS: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "91[19]",,,, "911"], [,,,,,,,,, [-1]],,,, "BS",,,,,,,,,,,,,,,,,, [,, "91[19]",,,, "911"],, [,, "91[19]",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BT: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "11[023]",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "BT",,,,,,,,,,,,,,,,,, [,, "11[023]",,,, "110",,, [3]],, [,, "11[0-6]|40404",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        BW: [, [,, "[19]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "99[7-9]",,,, "997",,, [3]], [,,,,,,,,, [-1]],,,, "BW",,,,,,,,,,,,,,,,,, [,, "99[7-9]",,,, "997",,, [3]],, [,, "13123|99[7-9]",,,, "997"], [,,,,,,,,, [-1]], [,, "131\\d\\d",,,, "13100",,, [5]],, [,, "131\\d\\d",,,, "13100",,, [5]]],
        BY: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:0[1-3]|12)",,,, "101"], [,,,,,,,,, [-1]],,,, "BY",,,,,,,,,,,,,,,,,, [,, "1(?:0[1-3]|12)",,,, "101"],, [,, "1(?:0[1-79]|1[246]|35|5[1-35]|6[89]|7[5-7]|8[58]|9[1-7])",,,, "101"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        BZ: [, [,, "9\\d\\d?",,,,,,, [2, 3]],,, [,, "9(?:0|11)",,,, "90"], [,,,,,,,,, [-1]],,,, "BZ",,,,,,,,,,,,,,,,,, [,, "9(?:0|11)",,,, "90"],, [,, "9(?:0|11)",,,, "90"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CA: [, [,, "[1-9]\\d\\d(?:\\d\\d(?:\\d(?:\\d{2})?)?)?",,,,,,, [3, 5, 6, 8]],,, [,, "112|[29]11",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "CA",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112",,, [3]],, [,, "112|30000\\d{3}|[1-35-9]\\d{4,5}|[2-9]11",,,, "112"], [,,,,,,,,, [-1]], [,, "[235-7]11",,,, "211",,, [3]],, [,, "300\\d{5}|[1-35-9]\\d{4,5}",,,, "10000",,, [5, 6, 8]]],
        CC: [, [,, "[01]\\d\\d",,,,,,, [3]],,, [,, "000|112",,,, "000"], [,,,,,,,,, [-1]],,,, "CC",,,,,,,,,,,,,,,,,, [,, "000|112",,,, "000"],, [,, "000|112",,,, "000"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CD: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "1(?:1[348]|77|88)",,,, "113",,, [3]], [,,,,,,,,, [-1]],,,, "CD",,,,,,,,,,,,,,,,,, [,, "1(?:1[348]|77|88)",,,, "113",,, [3]],, [,, "1(?:1[348]|23|77|88)|40404",,,, "113"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        CF: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1[78]|22\\d)",,,, "117"], [,,,,,,,,, [-1]],,,, "CF",,,,,,,,,,,,,,,,,, [,, "1(?:1[78]|220)",,,, "117"],, [,, "1(?:1[478]|220)",,,, "114"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CG: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[178]",,,, "111"], [,,,,,,,,, [-1]],,,, "CG",,,,,,,,,,,,,,,,,, [,, "11[78]",,,, "117"],, [,, "11[126-8]",,,, "111"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CH: [, [,, "[1-9]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:1(?:[278]|6\\d{3})|4[47])|5200",,,, "112",,, [3, 4, 6]], [,, "1(?:14|8[01589])\\d|543|83111",,,, "543",,, [3, 4, 5]],,,, "CH",,,,,,,,,,,,,,,,,, [,, "1(?:1[278]|44)",,,, "112",,, [3]],, [,, "1(?:0[78]\\d\\d|1(?:[278]|45|6(?:000|111))|4(?:[03-57]|1[45])|6(?:00|[1-46])|8(?:02|1[189]|50|7|8[08]|99))|[2-9]\\d{2,4}",,,, "112"], [,, "1(?:4[035]|6[1-46])|1(?:41|60)\\d",,,, "140",,, [3, 4]], [,, "5(?:200|35)",,,, "535",,, [3, 4]],, [,, "[2-9]\\d{2,4}",,,, "200",,, [3, 4, 5]]],
        CI: [, [,, "[14]\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1[01]|[78]0)",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "CI",,,,,,,,,,,,,,,,,, [,, "1(?:1[01]|[78]0)",,,, "110",,, [3]],, [,, "1(?:1[01]|[78]0)|4443",,,, "110"], [,,,,,,,,, [-1]], [,, "444\\d",,,, "4440",,, [4]],, [,, "444\\d",,,, "4440",,, [4]]],
        CK: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "99[689]",,,, "996"], [,,,,,,,,, [-1]],,,, "CK",,,,,,,,,,,,,,,,,, [,, "99[689]",,,, "996"],, [,, "99[689]",,,, "996"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CL: [, [,, "[1-9]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:213|3[1-3])|434\\d|911",,,, "131",,, [3, 4]], [,, "1(?:211|3(?:13|[348]0|5[01]))|(?:1(?:[05]6|[48]1|9[18])|2(?:01\\d|[23]2|77|88)|3(?:0[59]|13|3[279]|66)|4(?:[12]4|36\\d|4[017]|55)|5(?:00|41\\d|5[67]|99)|6(?:07\\d|13|22|3[06]|50|69)|787|8(?:[01]1|[48]8)|9(?:01|[12]0|33))\\d",,,, "1060",,, [4, 5]],,,, "CL",,,,,,,,,,,,,,,,,, [,, "13[1-3]|911",,,, "131",,, [3]],, [,, "1(?:00|21[13]|3(?:13|[348]0|5[01])|4(?:0[02-6]|17|[379])|818|919)|2(?:0(?:01|122)|22[47]|323|777|882)|3(?:0(?:51|99)|132|3(?:29|[37]7)|665)|43656|5(?:(?:00|415)4|5(?:66|77)|995)|6(?:131|222|366|699)|7878|8(?:011|11[28]|482|889)|9(?:01|1)1|13\\d|4(?:[13]42|243|4(?:02|15|77)|554)|(?:1(?:[05]6|98)|339|6(?:07|[35])0|9(?:[12]0|33))0",,,, "100"], [,, "(?:200|333)\\d",,,, "2000",,, [4]], [,,,,,,,,, [-1]],, [,, "13(?:13|[348]0|5[01])|(?:1(?:[05]6|[28]1|4[01]|9[18])|2(?:0(?:0|1\\d)|[23]2|77|88)|3(?:0[59]|13|3[2379]|66)|436\\d|5(?:00|41\\d|5[67]|99)|6(?:07\\d|13|22|3[06]|50|69)|787|8(?:[01]1|[48]8)|9(?:01|[12]0|33))\\d|4(?:[1-3]4|4[017]|55)\\d",,,, "1060",,, [4, 5]]],
        CM: [, [,, "[18]\\d{1,3}",,,,,,, [2, 3, 4]],,, [,, "1(?:1[37]|[37])",,,, "13",,, [2, 3]], [,,,,,,,,, [-1]],,,, "CM",,,,,,,,,,,,,,,,,, [,, "1(?:1[37]|[37])",,,, "13",,, [2, 3]],, [,, "1(?:1[37]|[37])|8711",,,, "13"], [,,,,,,,,, [-1]], [,, "871\\d",,,, "8710",,, [4]],, [,, "871\\d",,,, "8710",,, [4]]],
        CN: [, [,, "[19]\\d\\d(?:\\d{2,3})?",,,,,,, [3, 5, 6]],,, [,, "1(?:1[09]|20)",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "CN",,,,,,,,,,,,,,,,,, [,, "1(?:1[09]|20)",,,, "110",,, [3]],, [,, "1(?:00\\d\\d|1[029]|20)|95\\d{3,4}",,,, "110"], [,, "1(?:00\\d\\d|12)|95\\d{3,4}",,,, "112"], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CO: [, [,, "[148]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "1(?:1[29]|23|32|56)",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "CO",,,,,,,,,,,,,,,,,, [,, "1(?:1[29]|23|32|56)",,,, "112",,, [3]],, [,, "1(?:06|1[2-9]|2[35-7]|3[27]|4[467]|5[36]|6[4-7]|95)|40404|85432",,,, "106"], [,,,,,,,,, [-1]], [,, "(?:40|85)4\\d\\d",,,, "40400",,, [5]],, [,, "(?:40|85)4\\d\\d",,,, "40400",,, [5]]],
        CR: [, [,, "[1359]\\d{2,3}",,,,,,, [3, 4]],,, [,, "112|911",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "CR",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112",,, [3]],, [,, "1(?:0(?:00|15|2[2-4679])|1(?:1[0-35-9]|2|37|[46]6|7[57]|8[79]|9[0-379])|2(?:00|[12]2|34|55)|3(?:21|33)|4(?:0[06]|1[4-6])|5(?:15|5[15])|693|7(?:00|1[7-9]|2[02]|[67]7)|975)|3855|5(?:0(?:30|49)|510)|911",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "(?:385|5(?:0[34]|51))\\d",,,, "3850",,, [4]]],
        CU: [, [,, "[12]\\d\\d(?:\\d{3,4})?",,,,,,, [3, 6, 7]],,, [,, "10[4-7]|(?:116|204\\d)\\d{3}",,,, "104"], [,,,,,,,,, [-1]],,,, "CU",,,,,,,,,,,,,,,,,, [,, "10[4-6]",,,, "104",,, [3]],, [,, "1(?:0[4-7]|1(?:6111|8)|40)|2045252",,,, "104"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CV: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "13[0-2]",,,, "130"], [,,,,,,,,, [-1]],,,, "CV",,,,,,,,,,,,,,,,,, [,, "13[0-2]",,,, "130"],, [,, "13[0-2]",,,, "130"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CW: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "112|911",,,, "112"], [,,,,,,,,, [-1]],,,, "CW",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112"],, [,, "1(?:12|76)|911",,,, "112"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        CX: [, [,, "[01]\\d\\d",,,,,,, [3]],,, [,, "000|112",,,, "000"], [,,,,,,,,, [-1]],,,, "CX",,,,,,,,,,,,,,,,,, [,, "000|112",,,, "000"],, [,, "000|112",,,, "000"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CY: [, [,, "1\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "1(?:1(?:2|6\\d{3})|99)",,,, "112"], [,,,,,,,,, [-1]],,,, "CY",,,,,,,,,,,,,,,,,, [,, "1(?:12|99)",,,, "112",,, [3]],, [,, "1(?:1(?:2|6(?:000|111))|99)",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        CZ: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:1(?:2|6(?:00[06]|1(?:11|23)))|5[0568])",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "CZ",,,,,,,,,,,,,,,,,, [,, "1(?:12|5[0568])",,,, "112",,, [3]],, [,, "1(?:1(?:2|8\\d)|(?:2|3\\d)\\d{2,3}|5[0568]|99)|1(?:16|4)\\d{3}",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        DE: [, [,, "1\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "11(?:[02]|6\\d{3})",,,, "110"], [,,,,,,,,, [-1]],,,, "DE",,,,,,,,,,,,,,,,,, [,, "11[02]",,,, "110",,, [3]],, [,, "11(?:[025]|6(?:00[06]|1(?:1[167]|23)))",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        DJ: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]],,,, "DJ",,,,,,,,,,,,,,,,,, [,, "1[78]",,,, "17"],, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        DK: [, [,, "1\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "11(?:[24]|6\\d{3})",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "DK",,,,,,,,,,,,,,,,,, [,, "11[24]",,,, "112",,, [3]],, [,, "1(?:1(?:[2-48]|6(?:00[06]|111))|8(?:[08]1|1[0238]|28|30|5[13]))",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        DM: [, [,, "[39]\\d\\d",,,,,,, [3]],,, [,, "333|9(?:11|99)",,,, "333"], [,,,,,,,,, [-1]],,,, "DM",,,,,,,,,,,,,,,,,, [,, "333|9(?:11|99)",,,, "333"],, [,, "333|9(?:11|99)",,,, "333"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        DO: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "112|911",,,, "112"], [,,,,,,,,, [-1]],,,, "DO",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112"],, [,, "112|911",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        DZ: [, [,, "[17]\\d\\d?",,,,,,, [2, 3]],,, [,, "1[47]",,,, "14",,, [2]], [,,,,,,,,, [-1]],,,, "DZ",,,,,,,,,,,,,,,,,, [,, "1[47]",,,, "14",,, [2]],, [,, "1[47]|730",,,, "14"], [,,,,,,,,, [-1]], [,, "730",,,, "730",,, [3]],, [,, "730",,,, "730",,, [3]]],
        EC: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "1(?:0[12]|12)|911",,,, "101"], [,,,,,,,,, [-1]],,,, "EC",,,,,,,,,,,,,,,,,, [,, "1(?:0[12]|12)|911",,,, "101"],, [,, "1(?:0[12]|12)|911",,,, "101"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        EE: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:1(?:[02]|6\\d{3})|2(?:05|28)|3(?:014|3(?:21|5\\d?)|660)|492|5(?:1[03]|410|501)|6(?:112|333|644)|7(?:012|127|89)|8(?:10|8[57])|9(?:0[134]|14))",,,, "110"], [,, "1(?:18(?:00|[12458]\\d?)|2(?:0(?:[02-46-8]\\d?|1[0-36])|1(?:[0-4]\\d?|6[06])|2(?:[0-4]\\d?|5[25])|[367]|4(?:0[04]|[12]\\d?|4[24]|54)|55[12457])|3(?:0(?:[02]\\d?|1[13578]|3[356])|1[1347]|2[02-5]|3(?:[01347]\\d?|2[023]|88)|4(?:[35]\\d?|4[34])|5(?:3[134]|5[035])|666)|4(?:2(?:00|4\\d?)|4(?:0[01358]|1[024]|50|7\\d?)|900)|5(?:0[0-35]|1(?:[1267]\\d?|5[0-7]|82)|2(?:[014-6]\\d?|22)|330|4(?:[35]\\d?|44)|5(?:00|[1-69]\\d?)|9(?:[159]\\d?|[38]0|77))|6(?:1(?:00|1[19]|[35-9]\\d?)|2(?:2[26]|[68]\\d?)|3(?:22|36|6[36])|5|6(?:[0-359]\\d?|6[0-26])|7(?:00|55|7\\d?|8[89])|9(?:00|1\\d?|69))|7(?:0(?:[023]\\d?|1[0578])|1(?:00|2[034]|[4-9]\\d?)|2(?:[07]\\d?|20|44)|7(?:[0-57]\\d?|9[79])|8(?:0[08]|2\\d?|8[0178])|9(?:00|97))|8(?:1[127]|8[1268]|9[269])|9(?:0(?:[02]\\d?|69|9[0269])|1[1-3689]|21))",,,, "123",,, [3, 4, 5]],,,, "EE",,,,,,,,,,,,,,,,,, [,, "11[02]",,,, "110",,, [3]],, [,, "1(?:1(?:[02-579]|6(?:000|111)|8(?:[09]\\d|[1-8]))|2[36-9]|3[7-9]|4[05-7]|5[6-8]|6[05]|7[3-6]|8[02-7]|9[3-9])|1(?:2[0-245]|3[0-6]|4[1-489]|5[0-59]|6[1-46-9]|7[0-27-9]|8[189]|9[0-2])\\d\\d?",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "1(?:18[1258]|2(?:0(?:1[036]|[46]\\d?)|166|21|4(?:0[04]|1\\d?|5[47])|[67])|3(?:0(?:1[13-578]|2\\d?|3[56])|1[15]|2[045]|3(?:[13]\\d?|2[13])|43|5(?:00|3[34]|53))|44(?:0[0135]|14|50|7\\d?)|5(?:05|1(?:[12]\\d?|5[1246]|8[12])|2(?:[01]\\d?|22)|3(?:00|3[03])|4(?:15|5\\d?)|500|9(?:5\\d?|77|80))|6(?:1[35-8]|226|3(?:22|3[36]|66)|644|7(?:00|7\\d?|89)|9(?:00|69))|7(?:01[258]|1(?:00|[15]\\d?)|2(?:44|7\\d?)|8(?:00|87|9\\d?))|8(?:1[128]|8[56]|9(?:[26]\\d?|77))|90(?:2\\d?|69|92))",,,, "126",,, [3, 4, 5]]],
        EG: [, [,, "[13]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "1(?:2[23]|80)",,,, "122",,, [3]], [,,,,,,,,, [-1]],,,, "EG",,,,,,,,,,,,,,,,,, [,, "1(?:2[23]|80)",,,, "122",,, [3]],, [,, "1(?:2[23]|[69]\\d{3}|80)|34400",,,, "122"], [,,,,,,,,, [-1]], [,, "344\\d\\d",,,, "34400",,, [5]],, [,, "344\\d\\d",,,, "34400",,, [5]]],
        EH: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:[59]|77)",,,, "15"], [,,,,,,,,, [-1]],,,, "EH",,,,,,,,,,,,,,,,,, [,, "1(?:[59]|77)",,,, "15"],, [,, "1(?:[59]|77)",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ER: [, [,, "[12]\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "11[2-46]|(?:12[47]|20[12])\\d{3}",,,, "112"], [,,,,,,,,, [-1]],,,, "ER",,,,,,,,,,,,,,,,,, [,, "1(?:1[2-46]|24422)|20(?:1(?:606|917)|2914)|(?:1277|2020)99",,,, "112"],, [,, "1(?:1[2-6]|24422)|20(?:1(?:606|917)|2914)|(?:1277|2020)99",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ES: [, [,, "[0-379]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "0(?:16|6[57]|8[58])|1(?:006|12|[3-7]\\d\\d)|(?:116|20\\d)\\d{3}",,,, "016",,, [3, 4, 6]], [,, "[12]2\\d{1,4}|90(?:5\\d|7)|(?:118|2(?:[357]\\d|80)|3[357]\\d)\\d\\d|[79]9[57]\\d{3}",,,, "120"],,,, "ES",,,,,,,,,,,,,,,,,, [,, "08[58]|112",,,, "085",,, [3]],, [,, "0(?:1[0-26]|6[0-257]|8[058]|9[12])|1(?:0[03-57]\\d{1,3}|1(?:2|6(?:000|111)|8\\d\\d)|2\\d{1,4}|[3-9]\\d\\d)|2(?:2\\d{1,4}|80\\d\\d)|90(?:5[124578]|7)|1(?:3[34]|77)|(?:2[01]\\d|[79]9[57])\\d{3}|[23][357]\\d{3}",,,, "010"], [,, "0(?:[16][0-2]|80|9[12])|21\\d{4}",,,, "010",,, [3, 6]], [,, "1(?:3[34]|77)|[12]2\\d{1,4}",,,, "120"],, [,, "(?:2[0-2]\\d|3[357]|[79]9[57])\\d{3}|2(?:[2357]\\d|80)\\d\\d",,,, "22000",,, [5, 6]]],
        ET: [, [,, "9\\d\\d?",,,,,,, [2, 3]],,, [,, "9(?:07|11?|2|39?|9[17])",,,, "91"], [,,,,,,,,, [-1]],,,, "ET",,,,,,,,,,,,,,,,,, [,, "9(?:11?|2|39?|9[17])",,,, "91"],, [,, "9(?:07|11?|2|39?|45|9[17])",,,, "91"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        FI: [, [,, "[17]\\d\\d(?:\\d{2,3})?",,,,,,, [3, 5, 6]],,, [,, "11(?:2|6\\d{3})",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "FI",,,,,,,,,,,,,,,,,, [,, "112",,,, "112",,, [3]],, [,, "11(?:2|6111)|75[12]\\d\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        FJ: [, [,, "[0-579]\\d(?:\\d(?:\\d{2})?)?",,,,,,, [2, 3, 5]],,, [,, "91[17]",,,, "911",,, [3]], [,,,,,,,,, [-1]],,,, "FJ",,,,,,,,,,,,,,,,,, [,, "91[17]",,,, "911",,, [3]],, [,, "0(?:1[34]|8[1-4])|1(?:0[1-3]|[25]9)|2[289]|30|40404|91[137]|[45]4|75",,,, "22"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        FK: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "FK",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "1\\d\\d|999",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        FM: [, [,, "[39]\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "320\\d{3}|911",,,, "911"], [,,,,,,,,, [-1]],,,, "FM",,,,,,,,,,,,,,,,,, [,, "(?:32022|91)1",,,, "911"],, [,, "(?:32022|91)1",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        FO: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "11[24]",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "FO",,,,,,,,,,,,,,,,,, [,, "11[24]",,,, "112",,, [3]],, [,, "11[248]|1(?:4[124]|71|8[7-9])\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        FR: [, [,, "[1-8]\\d{1,5}",,,,,,, [2, 3, 4, 5, 6]],,, [,, "1(?:0(?:07|[13]3)|1[02459]|[578]|9[167])|224|(?:3370|74)0|(?:116\\d|3[01])\\d\\d",,,, "15"], [,, "(?:118|[4-8]\\d)\\d{3}|36665",,,, "36665",,, [5, 6]],,,, "FR",,,,,,,,,,,,,,,,,, [,, "1(?:12|[578])",,,, "15",,, [2, 3]],, [,, "1(?:0\\d\\d|1(?:[02459]|6(?:000|111)|8\\d{3})|[578]|9[167])|2(?:0(?:00|2)0|24)|[3-8]\\d{4}|3\\d{3}|6(?:1[14]|34)|7(?:0[06]|22|40)",,,, "15"], [,, "10(?:[134]4|2[23]|5\\d|99)|202\\d|3(?:646|9[07]0)|634|70[06]|(?:106|61)[14]",,,, "611",,, [3, 4]], [,, "118777|224|6(?:1[14]|34)|7(?:0[06]|22|40)|20(?:0\\d|2)\\d",,,, "224",,, [3, 4, 5, 6]],, [,, "114|[3-8]\\d{4}",,,, "114",,, [3, 5]]],
        GA: [, [,, "1\\d(?:\\d{2})?",,,,,,, [2, 4]],,, [,, "18|1(?:3\\d|73)\\d",,,, "18"], [,,,,,,,,, [-1]],,,, "GA",,,,,,,,,,,,,,,,,, [,, "1(?:3\\d\\d|730|8)",,,, "18"],, [,, "1(?:3\\d\\d|730|8)",,,, "18"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GB: [, [,, "[1-46-9]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:05|1(?:2|6\\d{3})|7[56]\\d|8000)|2(?:20\\d|48)|4444|999",,,, "105"], [,,,,,,,,, [-1]],,,, "GB",,,,,,,,,,,,,,,,,, [,, "112|999",,,, "112",,, [3]],, [,, "1(?:0[015]|1(?:[12]|6(?:000|1(?:11|23))|8\\d{3})|2(?:[1-3]|50)|33|4(?:1|7\\d)|571|7(?:0\\d|[56]0)|800\\d|9[15])|2(?:0202|1300|2(?:02|11)|3(?:02|336|45)|4(?:25|8))|3[13]3|4(?:0[02]|35[01]|44[45]|5\\d)|(?:[68]\\d|7[089])\\d{3}|15\\d|2[02]2|650|789|9(?:01|99)",,,, "100"], [,,,,,,,,, [-1]], [,, "1(?:(?:25|7[56])\\d|571)|2(?:02(?:\\d{2})?|[13]3\\d\\d|48)|4444|901",,,, "202",,, [3, 4, 5]],, [,, "(?:125|2(?:020|13\\d)|(?:7[089]|8[01])\\d\\d)\\d",,,, "1250",,, [4, 5]]],
        GD: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "GD",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "176|911",,,, "176"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        GE: [, [,, "[014]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "0(?:11|33)|11[1-3]|[01]22",,,, "011",,, [3]], [,,,,,,,,, [-1]],,,, "GE",,,,,,,,,,,,,,,,,, [,, "0(?:11|33)|11[1-3]|[01]22",,,, "011",,, [3]],, [,, "0(?:11|33)|11[1-3]|40404|[01]22",,,, "011"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        GF: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]],,,, "GF",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15"],, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GG: [, [,, "[19]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "112|999",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "GG",,,,,,,,,,,,,,,,,, [,, "112|999",,,, "112",,, [3]],, [,, "1(?:0[01]|1[12]|23|41|55|9[05])|999|1(?:1[68]\\d\\d|47|800)\\d",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GH: [, [,, "[14589]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "19[1-3]|999",,,, "191",,, [3]], [,,,,,,,,, [-1]],,,, "GH",,,,,,,,,,,,,,,,,, [,, "19[1-3]|999",,,, "191",,, [3]],, [,, "19[1-3]|40404|(?:54|83)00|999",,,, "191"], [,,,,,,,,, [-1]], [,, "404\\d\\d|(?:54|83)0\\d",,,, "5400",,, [4, 5]],, [,, "404\\d\\d|(?:54|83)0\\d",,,, "5400",,, [4, 5]]],
        GI: [, [,, "[158]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:00|1[25]|23|4(?:1|7\\d)|5[15]|9[02-49])|555|(?:116\\d|80)\\d\\d",,,, "100",,, [3, 4, 6]], [,, "8[1-69]\\d\\d",,,, "8100",,, [4]],,,, "GI",,,,,,,,,,,,,,,,,, [,, "1(?:12|9[09])",,,, "112",,, [3]],, [,, "1(?:00|1(?:[25]|6(?:00[06]|1(?:1[17]|23))|8\\d\\d)|23|4(?:1|7[014])|5[015]|9[02-49])|555|8[0-79]\\d\\d|8(?:00|4[0-2]|8[0-589])",,,, "100"], [,, "150|87\\d\\d",,,, "150",,, [3, 4]], [,, "1(?:00|1(?:5|8\\d\\d)|23|51|9[2-4])|555|8(?:00|4[0-2]|8[0-589])",,,, "100",,, [3, 5]],, [,,,,,,,,, [-1]]],
        GL: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "112",,,, "112"], [,,,,,,,,, [-1]],,,, "GL",,,,,,,,,,,,,,,,,, [,, "112",,,, "112"],, [,, "112",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GM: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:1[6-8]|[6-8])",,,, "16"], [,,,,,,,,, [-1]],,,, "GM",,,,,,,,,,,,,,,,,, [,, "1(?:1[6-8]|[6-8])",,,, "16"],, [,, "1(?:1[6-8]|[6-8])",,,, "16"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GN: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],,,, "GN",,,,,,,,,,,,,,,,,, [,,,,,,,,, [-1]],, [,, "12\\d|40404",,,, "120"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        GP: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]],,,, "GP",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15"],, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GR: [, [,, "1\\d\\d(?:\\d{2,3})?",,,,,,, [3, 5, 6]],,, [,, "1(?:0[089]|1(?:2|6\\d{3})|66|99)",,,, "100",,, [3, 6]], [,,,,,,,,, [-1]],,,, "GR",,,,,,,,,,,,,,,,,, [,, "1(?:00|12|66|99)",,,, "100",,, [3]],, [,, "1(?:0[089]|1(?:2|320|6(?:000|1(?:1[17]|23)))|(?:389|9)9|66)",,,, "100"], [,, "113\\d\\d",,,, "11300",,, [5]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GT: [, [,, "[14]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:10|2[03])",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "GT",,,,,,,,,,,,,,,,,, [,, "1(?:10|2[03])",,,, "110",,, [3]],, [,, "110|40404|1(?:2|[57]\\d)\\d",,,, "110"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        GU: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "GU",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GW: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[378]",,,, "113"], [,,,,,,,,, [-1]],,,, "GW",,,,,,,,,,,,,,,,,, [,, "11[378]",,,, "113"],, [,, "11[378]",,,, "113"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        GY: [, [,, "[019]\\d{2,3}",,,,,,, [3, 4]],,, [,, "91[1-3]",,,, "911",,, [3]], [,,,,,,,,, [-1]],,,, "GY",,,,,,,,,,,,,,,,,, [,, "91[1-3]",,,, "911",,, [3]],, [,, "0(?:02|(?:17|80)1|444|7(?:[67]7|9)|9(?:0[78]|[2-47]))|1(?:443|5[568])|91[1-3]",,,, "002"], [,,,,,,,,, [-1]], [,, "144\\d",,,, "1440",,, [4]],, [,, "144\\d",,,, "1440",,, [4]]],
        HK: [, [,, "[19]\\d{2,6}",,,,,,, [3, 4, 5, 6, 7]],,, [,, "112|99[29]",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "HK",,,,,,,,,,,,,,,,,, [,, "112|99[29]",,,, "112",,, [3]],, [,, "1(?:0(?:(?:[0136]\\d|2[14])\\d{0,3}|8[138])|12|2(?:[0-3]\\d{0,4}|(?:58|8[13])\\d{0,3})|7(?:[135-9]\\d{0,4}|219\\d{0,2})|8(?:0(?:(?:[13]|60\\d)\\d|8)|1(?:0\\d|[2-8])|2(?:0[5-9]|(?:18|2)2|3|8[128])|(?:(?:3[0-689]\\d|7(?:2[1-389]|8[0235-9]|93))\\d|8)\\d|50[138]|6(?:1(?:11|86)|8)))|99[29]|10[0139]",,,, "100"], [,,,,,,,,, [-1]], [,, "109|1(?:08|85\\d)\\d",,,, "109",,, [3, 4, 5]],, [,, "992",,,, "992",,, [3]]],
        HN: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "199",,,, "199",,, [3]], [,,,,,,,,, [-1]],,,, "HN",,,,,,,,,,,,,,,,,, [,, "199",,,, "199",,, [3]],, [,, "199|40404",,,, "199"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        HR: [, [,, "[19]\\d{1,5}",,,,,,, [2, 3, 4, 5, 6]],,, [,, "1(?:12|9[2-4])|9[34]|1(?:16\\d|39)\\d\\d",,,, "93",,, [2, 3, 5, 6]], [,, "118\\d\\d",,,, "11800",,, [5]],,,, "HR",,,,,,,,,,,,,,,,,, [,, "1(?:12|9[2-4])|9[34]",,,, "93",,, [2, 3]],, [,, "1(?:1(?:2|6(?:00[06]|1(?:1[17]|23))|8\\d\\d)|3977|9(?:[2-5]|87))|9[34]",,,, "93"], [,,,,,,,,, [-1]], [,, "139\\d\\d",,,, "13900",,, [5]],, [,, "139\\d\\d",,,, "13900",,, [5]]],
        HT: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "11[48]",,,, "114",,, [3]], [,,,,,,,,, [-1]],,,, "HT",,,,,,,,,,,,,,,,,, [,, "11[48]",,,, "114",,, [3]],, [,, "11[48]|40404",,,, "114"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        HU: [, [,, "1\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "1(?:0[457]|1(?:2|6\\d{3}))",,,, "104"], [,,,,,,,,, [-1]],,,, "HU",,,,,,,,,,,,,,,,,, [,, "1(?:0[457]|12)",,,, "104",,, [3]],, [,, "1(?:0[457]|1(?:2|6(?:000|1(?:11|23))))",,,, "104"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ID: [, [,, "[178]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "11[02389]",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "ID",,,,,,,,,,,,,,,,,, [,, "11[02389]",,,, "110",,, [3]],, [,, "1(?:1[02389]|40\\d\\d)|71400|89887",,,, "110"], [,,,,,,,,, [-1]], [,, "(?:714|898)\\d\\d",,,, "71400",,, [5]],, [,, "714\\d\\d",,,, "71400",,, [5]]],
        IE: [, [,, "[159]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "11(?:2|6\\d{3})|999",,,, "112",,, [3, 6]], [,, "5[37]\\d{3}",,,, "53000",,, [5]],,,, "IE",,,,,,,,,,,,,,,,,, [,, "112|999",,,, "112",,, [3]],, [,, "11(?:2|6(?:00[06]|1(?:1[17]|23)))|999|(?:1(?:18|9)|5[0137]\\d)\\d\\d",,,, "112"], [,, "51\\d{3}",,,, "51000",,, [5]], [,, "51210",,,, "51210",,, [5]],, [,, "51210|(?:118|5[037]\\d)\\d\\d",,,, "11800",,, [5]]],
        IL: [, [,, "[12]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:0[0-2]|12)",,,, "100",,, [3]], [,,,,,,,,, [-1]],,,, "IL",,,,,,,,,,,,,,,,,, [,, "1(?:0[0-2]|12)",,,, "100",,, [3]],, [,, "1(?:0[0-2]|1(?:[013-9]\\d|2)|[2-9]\\d\\d)|2407|(?:104|27)00",,,, "100"], [,,,,,,,,, [-1]], [,, "104\\d\\d",,,, "10400",,, [5]],, [,, "104\\d\\d",,,, "10400",,, [5]]],
        IM: [, [,, "[189]\\d\\d(?:\\d{2,3})?",,,,,,, [3, 5, 6]],,, [,, "999",,,, "999",,, [3]], [,,,,,,,,, [-1]],,,, "IM",,,,,,,,,,,,,,,,,, [,, "999",,,, "999",,, [3]],, [,, "1\\d\\d(?:\\d{3})?|8(?:6444|9887)|999",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "8(?:64|98)\\d\\d",,,, "86400",,, [5]]],
        IN: [, [,, "[12578]\\d{2,8}",,,,,,, [3, 4, 5, 6, 7, 8, 9]],,, [,, "1(?:0[0-248]|1[289]|21|[39][89]|4[01]|6(?:1|6\\d?)|8[12])|777|800|1[05]5\\d|1(?:07|51|94)\\d\\d?|(?:1(?:[05]5\\d|70)\\d|261)\\d|1(?:0[369]|10|29|3[126]|9[0-256])\\d",,,, "100",,, [3, 4, 5, 6]], [,, "11[67]\\d{4}|56161561",,,, "1160000",,, [7, 8]],,,, "IN",,,,,,,,,,,,,,,,,, [,, "1(?:0[0-28]|12|298)|2611",,,, "100",,, [3, 4]],, [,, "1(?:0(?:[0-248]|3[39]|5(?:010|6)|6[3468]|7(?:[01357]|[28]0?|4[01])|9[0135-9])|1(?:00|[289])|2(?:1|98)|3(?:11|2[0-2]|63|[89])|4[01]|5(?:1(?:0[0-36]|[127])|54)|6(?:1|6[01]?)|7000|8[12]|9(?:0[013-59]|12|25|4[4-9]\\d?|50|6[1347]|[89]))|2611|5(?:0(?:0(?:0\\d|1|20?)|325|5[2-79]\\d{3,5})|1(?:234|555|717|818|96[49])|2(?:0(?:0[01]|[14]0)|151|555|666|888|9(?:06|99\\d?))|3(?:0[01]0|131|553|(?:66|77)6)|(?:464|55[05])\\d{1,3}|6(?:070|3[68]|43)|717\\d)|777|800|5(?:05(?:0|1\\d)|221|3(?:03|3[23]))\\d{1,4}|5(?:(?:04|88)0|2(?:2[0267]|3[16])|4(?:1[04]|20|3[02])|5(?:3[16]|67)|6(?:06|[67]\\d)|787|9(?:64|90))\\d\\d?|(?:1(?:05[79]|(?:1[67][0-2]|802)\\d|55[23])\\d|5(?:(?:00(?:0\\d|1)|(?:304|616)\\d\\d)\\d|1(?:0[12]|4[2-4])|2(?:2[3589]|3(?:1\\d{3}|2)|4[04]|7[78])|4(?:[02]4|32\\d{4}|4[04]|99)|5(?:1[25]|[36]5|4[45]|93)|7(?:(?:17\\d|57)\\d\\d|[27]7|88)|8(?:3[4-69]|4[01]|5[58]|88(?:8\\d\\d|9)|99)|9(?:0(?:0|2\\d{3})|55|6[67]|77|88)))\\d",,,, "100"], [,, "5(?:14(?:2[5-9]|[34]\\d)|757555)",,,, "51425",,, [5, 7]], [,, "1(?:(?:1[67]\\d\\d|70)\\d\\d|55330|909)|5(?:300\\d|6161(?:17[89]|561))|1(?:[19][89]|21|4[01])",,,, "118",,, [3, 4, 5, 6, 7, 8]],, [,, "1(?:39|90[019])|5(?:14(?:2[5-9]|[34]\\d)|6161(?:17[89]|561)|757555)",,,, "139",,, [3, 4, 5, 7, 8]]],
        IQ: [, [,, "[1479]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:0[04]|15|22)",,,, "100",,, [3]], [,,,,,,,,, [-1]],,,, "IQ",,,,,,,,,,,,,,,,,, [,, "1(?:0[04]|15|22)",,,, "100",,, [3]],, [,, "1(?:0[04]|15|22)|4432|71117|9988",,,, "100"], [,,,,,,,,, [-1]], [,, "(?:443|711\\d|998)\\d",,,, "4430",,, [4, 5]],, [,, "(?:443|711\\d|998)\\d",,,, "4430",,, [4, 5]]],
        IR: [, [,, "[129]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:1[0-68]|2[0-59]|9[0-579])|911",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "IR",,,,,,,,,,,,,,,,,, [,, "1(?:1[025]|25)|911",,,, "110",,, [3]],, [,, "1(?:1[0-68]|2[0-59]|3[346-8]|4(?:[0147]|[289]0)|5(?:0[14]|1[02479]|2[0-3]|39|[49]0|65)|6(?:[16]6|[27]|90)|8(?:03|1[18]|22|3[37]|4[28]|88|99)|9[0-579])|20(?:[09]0|1(?:[038]|1[079]|26|9[69])|2[01])|9(?:11|9(?:0009|90))",,,, "110"], [,, "1(?:5[0-469]|8[0-489])\\d",,,, "1500",,, [4]], [,, "(?:1(?:5[0-469]|8[0-489])|99(?:0\\d\\d|9))\\d",,,, "1500",,, [4, 6]],, [,, "990\\d{3}",,,, "990000",,, [6]]],
        IS: [, [,, "1\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "1(?:12|71\\d)",,,, "112",,, [3, 4]], [,,,,,,,,, [-1]],,,, "IS",,,,,,,,,,,,,,,,,, [,, "112",,,, "112",,, [3]],, [,, "1(?:1(?:[28]|61(?:16|23))|4(?:00|1[145]|4[0146])|55|7(?:00|17|7[07-9])|8(?:[02]0|1[16-9]|88)|900)",,,, "112"], [,,,,,,,,, [-1]], [,, "14(?:0\\d|41)",,,, "1400",,, [4]],, [,, "1(?:415|90\\d)",,,, "1415",,, [4]]],
        IT: [, [,, "[14]\\d{2,6}",,,,,,, [3, 4, 5, 6, 7]],,, [,, "1(?:1(?:[2358]|6\\d{3})|87)",,,, "112",,, [3, 6]], [,, "(?:12|4(?:[478](?:[0-4]|[5-9]\\d\\d)|55))\\d\\d",,,, "1200",,, [4, 5, 7]],,,, "IT",,,,,,,,,,,,,,,,,, [,, "11[2358]",,,, "112",,, [3]],, [,, "1(?:0\\d{2,3}|1(?:[2-57-9]|6(?:000|111))|3[39]|4(?:82|9\\d{1,3})|5(?:00|1[58]|2[25]|3[03]|44|[59])|60|8[67]|9(?:[01]|2[2-9]|4\\d|696))|4(?:2323|5045)|(?:1(?:2|92[01])|4(?:3(?:[01]|[45]\\d\\d)|[478](?:[0-4]|[5-9]\\d\\d)|55))\\d\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "4(?:3(?:[01]|[45]\\d\\d)|[478](?:[0-4]|[5-9]\\d\\d)|5[05])\\d\\d",,,, "43000",,, [5, 7]]],
        JE: [, [,, "[129]\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "112|999",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "JE",,,,,,,,,,,,,,,,,, [,, "112|999",,,, "112",,, [3]],, [,, "1(?:00|1(?:2|8\\d{3})|23|4(?:[14]|28|7\\d)|5\\d|7(?:0[12]|[128]|35?)|808|9[0135])|23[2-4]|999",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        JM: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "11[029]|911",,,, "110"], [,,,,,,,,, [-1]],,,, "JM",,,,,,,,,,,,,,,,,, [,, "11[029]|911",,,, "110"],, [,, "1(?:1[029]|76)|911",,,, "110"], [,,,,,,,,, [-1]], [,, "176",,,, "176"],, [,, "176",,,, "176"]],
        JO: [, [,, "[19]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "1(?:12|9[127])|911",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "JO",,,,,,,,,,,,,,,,,, [,, "1(?:12|9[127])|911",,,, "112",,, [3]],, [,, "1(?:09|1[0-2]|9[0-24-79])|9(?:0903|11|8788)",,,, "109"], [,,,,,,,,, [-1]], [,, "9(?:09|87)\\d\\d",,,, "90900",,, [5]],, [,, "9(?:09|87)\\d\\d",,,, "90900",,, [5]]],
        JP: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[09]",,,, "110"], [,,,,,,,,, [-1]],,,, "JP",,,,,,,,,,,,,,,,,, [,, "11[09]",,,, "110"],, [,, "11[09]",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        KE: [, [,, "[1-9]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:1(?:[246]|9\\d)|5(?:01|2[127]|6[26]\\d))|999",,,, "112"], [,, "909\\d\\d",,,, "90900",,, [5]],,,, "KE",,,,,,,,,,,,,,,,,, [,, "11[24]|999",,,, "112",,, [3]],, [,, "1(?:0(?:[07-9]|1[0-25]|400)|1(?:[024-6]|9[0-579])|2[1-3]|3[01]|4[14]|5(?:[01][01]|2[0-24-79]|33|4[05]|5[59]|6(?:00|29|6[67]))|(?:6[035]\\d|[78])\\d|9(?:[02-9]\\d\\d|19))|(?:(?:2[0-79]|[37][0-29]|4[0-4]|6[2357]|8\\d)\\d|5(?:[0-7]\\d|99))\\d\\d|9(?:09\\d\\d|99)|8988",,,, "100"], [,,,,,,,,, [-1]], [,, "1(?:(?:04|6[35])\\d\\d|3[01]|4[14]|5(?:1\\d|2[25]))|(?:(?:2[0-79]|[37][0-29]|4[0-4]|6[2357]|8\\d)\\d|5(?:[0-7]\\d|99)|909)\\d\\d|898\\d",,,, "130"],, [,, "1(?:(?:04|6[035])\\d\\d|4[14]|5(?:01|55|6[26]\\d))|40404|8988|909\\d\\d",,,, "141"]],
        KG: [, [,, "[14]\\d{2,3}",,,,,,, [3, 4]],,, [,, "10[1-3]",,,, "101",,, [3]], [,,,,,,,,, [-1]],,,, "KG",,,,,,,,,,,,,,,,,, [,, "10[1-3]",,,, "101",,, [3]],, [,, "10[1-3]|4040",,,, "101"], [,,,,,,,,, [-1]], [,, "404\\d",,,, "4040",,, [4]],, [,, "404\\d",,,, "4040",,, [4]]],
        KH: [, [,, "[146]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "11[7-9]|666",,,, "117",,, [3]], [,,,,,,,,, [-1]],,,, "KH",,,,,,,,,,,,,,,,,, [,, "11[7-9]|666",,,, "117",,, [3]],, [,, "11[7-9]|40404|666",,,, "117"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        KI: [, [,, "[179]\\d{2,3}",,,,,,, [3, 4]],,, [,, "19[2-5]|99[2-4]",,,, "192",,, [3]], [,,,,,,,,, [-1]],,,, "KI",,,,,,,,,,,,,,,,,, [,, "19[2-5]|99[2-4]",,,, "192",,, [3]],, [,, "1(?:05[0-259]|88|9[2-5])|777|99[2-4]|10[0-8]",,,, "100"], [,, "103",,,, "103",,, [3]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        KM: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]],,,, "KM",,,,,,,,,,,,,,,,,, [,, "1[78]",,,, "17"],, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        KN: [, [,, "[39]\\d\\d",,,,,,, [3]],,, [,, "333|9(?:11|99)",,,, "333"], [,,,,,,,,, [-1]],,,, "KN",,,,,,,,,,,,,,,,,, [,, "333|9(?:11|99)",,,, "333"],, [,, "333|9(?:11|99)",,,, "333"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        KP: [, [,, "[18]\\d\\d",,,,,,, [3]],,, [,, "11[29]|819",,,, "112"], [,,,,,,,,, [-1]],,,, "KP",,,,,,,,,,,,,,,,,, [,, "11[29]|819",,,, "112"],, [,, "11[29]|819",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        KR: [, [,, "1\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:1[27-9]|28|330|82)",,,, "112",,, [3, 4]], [,,,,,,,,, [-1]],,,, "KR",,,,,,,,,,,,,,,,,, [,, "11[29]",,,, "112",,, [3]],, [,, "1(?:[016-9]114|3(?:0[01]|2|3[0-35-9]|45?|5[057]|6[569]|7[79]|8[2589]|9[0189]))|1(?:0[015]|1\\d|2[01357-9]|41|8[28])",,,, "100"], [,,,,,,,,, [-1]], [,, "1(?:0[01]|1[4-6]|41)|1(?:[06-9]1\\d|111)\\d",,,, "100",,, [3, 5]],, [,,,,,,,,, [-1]]],
        KW: [, [,, "[18]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "112",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "KW",,,,,,,,,,,,,,,,,, [,, "112",,,, "112",,, [3]],, [,, "1[0-7]\\d|89887",,,, "100"], [,,,,,,,,, [-1]], [,, "898\\d\\d",,,, "89800",,, [5]],, [,,,,,,,,, [-1]]],
        KY: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "KY",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        KZ: [, [,, "[134]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:0[1-3]|12)",,,, "101",,, [3]], [,,,,,,,,, [-1]],,,, "KZ",,,,,,,,,,,,,,,,,, [,, "1(?:0[1-3]|12)",,,, "101",,, [3]],, [,, "1(?:0[1-4]|12)|(?:3040|404)0",,,, "101"], [,,,,,,,,, [-1]], [,, "(?:304\\d|404)\\d",,,, "4040",,, [4, 5]],, [,, "(?:304\\d|404)\\d",,,, "4040",,, [4, 5]]],
        LA: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "19[015]",,,, "190"], [,,,,,,,,, [-1]],,,, "LA",,,,,,,,,,,,,,,,,, [,, "19[015]",,,, "190"],, [,, "19[015]",,,, "190"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LB: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "1(?:12|40|75)|999",,,, "112"], [,,,,,,,,, [-1]],,,, "LB",,,,,,,,,,,,,,,,,, [,, "1(?:12|40|75)|999",,,, "112"],, [,, "1(?:12|40|75)|999",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LC: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "LC",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911"],, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LI: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1[278]|44)",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "LI",,,,,,,,,,,,,,,,,, [,, "1(?:1[278]|44)",,,, "112",,, [3]],, [,, "1(?:1(?:[278]|45)|4[3-57]|50|75|81[18])",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LK: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "11[02689]",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "LK",,,,,,,,,,,,,,,,,, [,, "11[02689]",,,, "110",,, [3]],, [,, "1(?:1[024-9]|3(?:00|1[2-49]|2[23]|3[1-3]|44|5[07]|[67]9|88|9[039])|9(?:0[0-2589]|1[0-357-9]|2[0-25689]|3[0389]|4[0489]|5[014-69]|6[0-2689]|7[03579]|8[02457-9]|9[0-2569]))",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LR: [, [,, "[3489]\\d{2,3}",,,,,,, [3, 4]],,, [,, "355|911",,,, "355",,, [3]], [,,,,,,,,, [-1]],,,, "LR",,,,,,,,,,,,,,,,,, [,, "355|911",,,, "355",,, [3]],, [,, "355|4040|8(?:400|933)|911",,,, "355"], [,,,,,,,,, [-1]], [,, "(?:404|8(?:40|93))\\d",,,, "4040",,, [4]],, [,, "(?:404|8(?:40|93))\\d",,,, "4040",,, [4]]],
        LS: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[257]",,,, "112"], [,,,,,,,,, [-1]],,,, "LS",,,,,,,,,,,,,,,,,, [,, "11[257]",,,, "112"],, [,, "11[257]",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LT: [, [,, "[01]\\d(?:\\d(?:\\d{3})?)?",,,,,,, [2, 3, 6]],,, [,, "0(?:11?|22?|33?)|1(?:0[1-3]|1(?:2|6111))|116(?:0\\d|12)\\d",,,, "01"], [,,,,,,,,, [-1]],,,, "LT",,,,,,,,,,,,,,,,,, [,, "0(?:11?|22?|33?)|1(?:0[1-3]|12)",,,, "01",,, [2, 3]],, [,, "0(?:11?|22?|33?)|1(?:0[1-3]|1(?:[27-9]|6(?:000|1(?:1[17]|23))))",,,, "01"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LU: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "11(?:[23]|6\\d{3})",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "LU",,,,,,,,,,,,,,,,,, [,, "11[23]",,,, "112",,, [3]],, [,, "11(?:[23]|6(?:000|111))|1(?:18|[25]\\d|3)\\d\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        LV: [, [,, "[018]\\d{1,5}",,,,,,, [2, 3, 4, 5, 6]],,, [,, "0[1-3]|11(?:[023]|6\\d{3})",,,, "01",,, [2, 3, 6]], [,, "1180|821\\d\\d",,,, "1180",,, [4, 5]],,,, "LV",,,,,,,,,,,,,,,,,, [,, "0[1-3]|11[023]",,,, "01",,, [2, 3]],, [,, "0[1-4]|1(?:1(?:[02-4]|6(?:000|111)|8[0189])|(?:5|65)5|77)|821[57]4",,,, "01"], [,, "1181",,,, "1181",,, [4]], [,, "165\\d",,,, "1650",,, [4]],, [,,,,,,,,, [-1]]],
        LY: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "19[013]",,,, "190"], [,,,,,,,,, [-1]],,,, "LY",,,,,,,,,,,,,,,,,, [,, "19[013]",,,, "190"],, [,, "19[013]",,,, "190"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MA: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:[59]|77)",,,, "15"], [,,,,,,,,, [-1]],,,, "MA",,,,,,,,,,,,,,,,,, [,, "1(?:[59]|77)",,,, "15"],, [,, "1(?:[59]|77)",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MC: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:12|[578])",,,, "15"], [,,,,,,,,, [-1]],,,, "MC",,,,,,,,,,,,,,,,,, [,, "1(?:12|[578])",,,, "15"],, [,, "1(?:12|41|[578])",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MD: [, [,, "[19]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "11(?:2|6(?:000|1(?:11|2\\d)))|90[1-3]",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "MD",,,,,,,,,,,,,,,,,, [,, "112|90[1-3]",,,, "112",,, [3]],, [,, "1(?:1(?:2|6(?:00[06]|1(?:1[17]|23))|8\\d\\d?|99)|90[04-9])|90[1-3]|1(?:4\\d\\d|6[0-389]|9[1-4])\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ME: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:12|2[2-4])",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "ME",,,,,,,,,,,,,,,,,, [,, "1(?:12|2[2-4])",,,, "112",,, [3]],, [,, "1(?:1(?:(?:[013-57-9]|6\\d\\d)\\d|2)|[249]\\d{3}|5999|8(?:0[089]|1[0-8]|888))|1(?:[02-5]\\d\\d|60[06]|700)|12\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MF: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]],,,, "MF",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15"],, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MG: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:1[78]|[78])",,,, "17"], [,,,,,,,,, [-1]],,,, "MG",,,,,,,,,,,,,,,,,, [,, "1(?:1[78]|[78])",,,, "17"],, [,, "1(?:1[78]|[78])",,,, "17"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MH: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "MH",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MK: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:12|9[2-4])",,,, "112"], [,,,,,,,,, [-1]],,,, "MK",,,,,,,,,,,,,,,,,, [,, "1(?:12|9[2-4])",,,, "112"],, [,, "1(?:12|9[2-4])",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ML: [, [,, "[136-8]\\d{1,4}",,,,,,, [2, 3, 4, 5]],,, [,, "1[578]|(?:352|67)00|7402|(?:677|744|8000)\\d",,,, "15",,, [2, 4, 5]], [,, "(?:12|800)2\\d|3(?:52(?:11|2[02]|3[04-6]|99)|7574)",,,, "1220",,, [4, 5]],,,, "ML",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15",,, [2]],, [,, "1(?:1(?:[013-9]\\d|2)|2(?:1[02-469]|2[13])|[578])|350(?:35|57)|67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)|800[0-2][12]|3(?:52|[67]\\d)\\d\\d",,,, "15"], [,, "37(?:433|575)|7400|8001\\d",,,, "7400",,, [4, 5]], [,, "3503\\d|(?:3[67]\\d|800)\\d\\d",,,, "35030",,, [5]],, [,, "374(?:0[24-9]|[1-9]\\d)|7400|3(?:6\\d|75)\\d\\d",,,, "7400",,, [4, 5]]],
        MM: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "199",,,, "199"], [,,,,,,,,, [-1]],,,, "MM",,,,,,,,,,,,,,,,,, [,, "199",,,, "199"],, [,, "199",,,, "199"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MN: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "10[0-3]",,,, "100"], [,,,,,,,,, [-1]],,,, "MN",,,,,,,,,,,,,,,,,, [,, "10[0-3]",,,, "100"],, [,, "10[0-3]",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MO: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "MO",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "999",,,, "999"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MP: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "MP",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MQ: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:12|[578])",,,, "15"], [,,,,,,,,, [-1]],,,, "MQ",,,,,,,,,,,,,,,,,, [,, "1(?:12|[578])",,,, "15"],, [,, "1(?:12|[578])",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MR: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]],,,, "MR",,,,,,,,,,,,,,,,,, [,, "1[78]",,,, "17"],, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MS: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "MS",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911"],, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MT: [, [,, "1\\d\\d(?:\\d{3})?",,,,,,, [3, 6]],,, [,, "11(?:2|6\\d{3})",,,, "112"], [,,,,,,,,, [-1]],,,, "MT",,,,,,,,,,,,,,,,,, [,, "112",,,, "112",,, [3]],, [,, "11(?:2|6(?:000|1(?:11|23)))",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MU: [, [,, "[189]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "11[45]|99[59]",,,, "114",,, [3]], [,,,,,,,,, [-1]],,,, "MU",,,,,,,,,,,,,,,,,, [,, "11[45]|99[59]",,,, "114",,, [3]],, [,, "1\\d{2,4}|(?:8\\d\\d|99)\\d",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        MV: [, [,, "[14]\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:02|1[89])",,,, "102",,, [3]], [,,,,,,,,, [-1]],,,, "MV",,,,,,,,,,,,,,,,,, [,, "1(?:02|1[89])",,,, "102",,, [3]],, [,, "1(?:[0-37-9]|[4-6]\\d)\\d|4040|1[45]1",,,, "100"], [,,,,,,,,, [-1]], [,, "1[45]1",,,, "141",,, [3]],, [,,,,,,,,, [-1]]],
        MW: [, [,, "[189]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "199|99[7-9]",,,, "199",,, [3]], [,,,,,,,,, [-1]],,,, "MW",,,,,,,,,,,,,,,,,, [,, "199|99[7-9]",,,, "199",,, [3]],, [,, "199|80400|99[7-9]",,,, "199"], [,,,,,,,,, [-1]], [,, "804\\d\\d",,,, "80400",,, [5]],, [,, "804\\d\\d",,,, "80400",,, [5]]],
        MX: [, [,, "[0579]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "0(?:6[0568]|80)|911",,,, "060",,, [3]], [,, "(?:530\\d|776)\\d",,,, "7760",,, [4, 5]],,,, "MX",,,,,,,,,,,,,,,,,, [,, "0(?:6[0568]|80)|911",,,, "060",,, [3]],, [,, "0[1-9]\\d|53053|7766|911",,,, "010"], [,,,,,,,,, [-1]], [,, "0(?:[249]0|[35][01])",,,, "020",,, [3]],, [,,,,,,,,, [-1]]],
        MY: [, [,, "[1369]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "112|999",,,, "112",,, [3]], [,,,,,,,,, [-1]],,,, "MY",,,,,,,,,,,,,,,,,, [,, "112|999",,,, "112",,, [3]],, [,, "1(?:0[01348]|1(?:[02]|1[128]|311)|2(?:0[125]|[13-6]|2\\d{0,2})|(?:3[1-35-79]|7[45])\\d\\d?|5(?:454|5\\d\\d?|77|888|999?)|8(?:18?|2|8[18])|9(?:[124]\\d?|68|71|9[0679]))|66628|99[1-469]|13[5-7]|(?:1(?:0[569]|309|5[12]|7[136-9]|9[03])|3[23679]\\d\\d)\\d",,,, "100"], [,, "666\\d\\d",,,, "66600",,, [5]], [,,,,,,,,, [-1]],, [,, "(?:3[23679]\\d|666)\\d\\d",,,, "32000",,, [5]]],
        MZ: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1[79]|9[78])",,,, "117",,, [3]], [,,,,,,,,, [-1]],,,, "MZ",,,,,,,,,,,,,,,,,, [,, "1(?:1[79]|9[78])",,,, "117",,, [3]],, [,, "1(?:[02-5]\\d\\d|1[79]|9[78])",,,, "117"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NA: [, [,, "[19]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "10111",,,, "10111",,, [5]], [,,,,,,,,, [-1]],,,, "NA",,,,,,,,,,,,,,,,,, [,, "10111",,,, "10111",,, [5]],, [,, "(?:10|93)111|(?:1\\d|9)\\d\\d",,,, "900"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NC: [, [,, "[135]\\d{1,3}",,,,,,, [2, 3, 4]],,, [,, "1(?:0(?:00|1[23]|3[0-2]|8\\d)|[5-8])|363\\d|577",,,, "15"], [,,,,,,,,, [-1]],,,, "NC",,,,,,,,,,,,,,,,,, [,, "1[5-8]",,,, "15",,, [2]],, [,, "1(?:0(?:0[06]|1[02-46]|20|3[0-25]|42|5[058]|77|88)|[5-8])|3631|5[6-8]\\d",,,, "15"], [,, "5(?:67|88)",,,, "567",,, [3]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NE: [, [,, "[1-3578]\\d(?:\\d(?:\\d{3})?)?",,,,,,, [2, 3, 6]],,, [,, "1[578]|723\\d{3}",,,, "15",,, [2, 6]], [,,,,,,,,, [-1]],,,, "NE",,,,,,,,,,,,,,,,,, [,, "1[578]|723141",,,, "15",,, [2, 6]],, [,, "1(?:0[01]|1[12]|2[034]|3[013]|[46]0|55?|[78])|222|333|555|723141|888",,,, "15"], [,,,,,,,,, [-1]], [,, "1(?:0[01]|1[12]|2[034]|3[013]|[46]0|55)|222|333|555|888",,,, "100",,, [3]],, [,,,,,,,,, [-1]]],
        NF: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|55|77)",,,, "911"], [,,,,,,,,, [-1]],,,, "NF",,,,,,,,,,,,,,,,,, [,, "9(?:11|55|77)",,,, "911"],, [,, "9(?:11|55|77)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NG: [, [,, "[14]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "199",,,, "199",,, [3]], [,,,,,,,,, [-1]],,,, "NG",,,,,,,,,,,,,,,,,, [,, "199",,,, "199",,, [3]],, [,, "199|40700",,,, "199"], [,,,,,,,,, [-1]], [,, "407\\d\\d",,,, "40700",,, [5]],, [,, "407\\d\\d",,,, "40700",,, [5]]],
        NI: [, [,, "[12467]\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1[58]|2[08])|737\\d",,,, "115"], [,,,,,,,,, [-1]],,,, "NI",,,,,,,,,,,,,,,,,, [,, "1(?:1[58]|2[08])",,,, "115",,, [3]],, [,, "1(?:1[58]|200)|4878|7(?:010|373)|12[0158]|(?:19|[267]1)00",,,, "115"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NL: [, [,, "[1349]\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "11(?:2|6\\d{3})|911",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "NL",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112",,, [3]],, [,, "1(?:1(?:2|6(?:00[06]|1(?:11|23)))|2(?:0[0-4]|3[34]|44)|3[03-9]\\d|400|8(?:[02-9]\\d|1[0-79]))|[34]000|911",,,, "112"], [,,,,,,,,, [-1]], [,, "120\\d",,,, "1200",,, [4]],, [,, "[34]00\\d",,,, "3000",,, [4]]],
        NO: [, [,, "1\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "11(?:[023]|6\\d{3})",,,, "110",,, [3, 6]], [,,,,,,,,, [-1]],,,, "NO",,,,,,,,,,,,,,,,,, [,, "11[023]",,,, "110",,, [3]],, [,, "1(?:1(?:[0239]|61(?:1[17]|23))|2[048]|4(?:12|[59])|7[57]|8[5-9]\\d|90)",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NP: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:0[0-3]|12)",,,, "100"], [,,,,,,,,, [-1]],,,, "NP",,,,,,,,,,,,,,,,,, [,, "1(?:0[0-3]|12)",,,, "100"],, [,, "1(?:0[0-3]|12)",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NR: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[0-2]",,,, "110"], [,,,,,,,,, [-1]],,,, "NR",,,,,,,,,,,,,,,,,, [,, "11[0-2]",,,, "110"],, [,, "1(?:1[0-2]|23|92)",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        NU: [, [,, "[019]\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "NU",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "01[05]|101|999",,,, "010"], [,,,,,,,,, [-1]], [,, "010",,,, "010"],, [,,,,,,,,, [-1]]],
        NZ: [, [,, "\\d{3,4}",,,,,,, [3, 4]],,, [,, "111",,,, "111",,, [3]], [,, "018",,,, "018",,, [3]],,,, "NZ",,,,,,,,,,,,,,,,,, [,, "111",,,, "111",,, [3]],, [,, "018|1(?:(?:1|37)1|(?:23|94)4|7[03]7)|[2-57-9]\\d{2,3}|6(?:161|26[0-3]|742)",,,, "018"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "018|(?:1(?:23|37|7[03]|94)|6(?:[12]6|74))\\d|[2-57-9]\\d{2,3}",,,, "018"]],
        OM: [, [,, "[19]\\d{3}",,,,,,, [4]],,, [,, "1444|999\\d",,,, "1444"], [,,,,,,,,, [-1]],,,, "OM",,,,,,,,,,,,,,,,,, [,, "1444|9999",,,, "1444"],, [,, "1(?:111|222|4(?:4[0-5]|50|66|7[7-9])|51[0-8])|9999|1(?:2[3-5]|3[0-2]|50)\\d",,,, "1111"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PA: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "PA",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "10[2-4]|911",,,, "102"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PE: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:05|1[67])",,,, "105"], [,,,,,,,,, [-1]],,,, "PE",,,,,,,,,,,,,,,,,, [,, "1(?:05|1[67])",,,, "105"],, [,, "1(?:05|1[67])",,,, "105"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PF: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]],,,, "PF",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15"],, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PG: [, [,, "[01]\\d{2,6}",,,,,,, [3, 4, 5, 6, 7]],,, [,, "000|11[01]",,,, "000",,, [3]], [,,,,,,,,, [-1]],,,, "PG",,,,,,,,,,,,,,,,,, [,, "000|11[01]",,,, "000",,, [3]],, [,, "000|1(?:1[01]|5\\d\\d|6\\d{2,5})",,,, "000"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "16\\d{2,5}",,,, "1600",,, [4, 5, 6, 7]]],
        PH: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "11[27]|911",,,, "112"], [,,,,,,,,, [-1]],,,, "PH",,,,,,,,,,,,,,,,,, [,, "11[27]|911",,,, "112"],, [,, "11[27]|911",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PK: [, [,, "1\\d{1,3}",,,,,,, [2, 3, 4]],,, [,, "1(?:1(?:2\\d?|5)|[56])",,,, "15"], [,,,,,,,,, [-1]],,,, "PK",,,,,,,,,,,,,,,,,, [,, "1(?:1(?:22?|5)|[56])",,,, "15"],, [,, "1(?:122|3[014]|[56])|11[2457-9]",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PL: [, [,, "[19]\\d\\d(?:\\d{2,3})?",,,,,,, [3, 5, 6]],,, [,, "11(?:2|6\\d{3})|99[7-9]",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "PL",,,,,,,,,,,,,,,,,, [,, "112|99[7-9]",,,, "112",,, [3]],, [,, "1(?:1(?:2|61(?:11|23)|891[23])|9\\d{3})|9(?:8[4-7]|9[1-9])|11[68]000",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PM: [, [,, "[13]\\d(?:\\d{2})?",,,,,,, [2, 4]],,, [,, "1[578]",,,, "15",,, [2]], [,,,,,,,,, [-1]],,,, "PM",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15",,, [2]],, [,, "1[578]|3103",,,, "15"], [,,,,,,,,, [-1]], [,, "310\\d",,,, "3100",,, [4]],, [,,,,,,,,, [-1]]],
        PR: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "PR",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PS: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:0[0-2]|66)",,,, "100"], [,,,,,,,,, [-1]],,,, "PS",,,,,,,,,,,,,,,,,, [,, "10[0-2]",,,, "100"],, [,, "1(?:0[0-2]|44|66|99)",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PT: [, [,, "1\\d\\d(?:\\d(?:\\d{2})?)?",,,,,,, [3, 4, 6]],,, [,, "11[25]|1(?:16\\d\\d|5[1589]|8[279])\\d",,,, "112"], [,,,,,,,,, [-1]],,,, "PT",,,,,,,,,,,,,,,,,, [,, "11[25]",,,, "112",,, [3]],, [,, "1(?:0(?:45|5[01])|1(?:[2578]|600[06])|4(?:1[45]|4)|583|6(?:1[0236]|3[02]|9[169]))|1(?:1611|59)1|1[068]78|1[08]9[16]|1(?:0[1-38]|40|5[15]|6[258]|82)0",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PW: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "PW",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        PY: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "128|911",,,, "128"], [,,,,,,,,, [-1]],,,, "PY",,,,,,,,,,,,,,,,,, [,, "128|911",,,, "128"],, [,, "1[1-4]\\d|911",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        QA: [, [,, "[129]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "999",,,, "999",,, [3]], [,,,,,,,,, [-1]],,,, "QA",,,,,,,,,,,,,,,,,, [,, "999",,,, "999",,, [3]],, [,, "999|(?:1|20|9[27]\\d)\\d\\d",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        RE: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:12|[578])",,,, "15"], [,,,,,,,,, [-1]],,,, "RE",,,,,,,,,,,,,,,,,, [,, "1(?:12|[578])",,,, "15"],, [,, "1(?:12|[578])",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        RO: [, [,, "[18]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "11(?:2|6\\d{3})",,,, "112",,, [3, 6]], [,, "(?:1(?:18[39]|[24])|8[48])\\d\\d",,,, "1200",,, [4, 6]],,,, "RO",,,,,,,,,,,,,,,,,, [,, "112",,,, "112",,, [3]],, [,, "1(?:1(?:2|6(?:000|1(?:11|23))|8(?:(?:01|8[18])1|119|[23]00|932))|[24]\\d\\d|9(?:0(?:00|19)|1[19]|21|3[02]|5[178]))|8[48]\\d\\d",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "(?:1[24]|8[48])\\d\\d",,,, "1200",,, [4]]],
        RS: [, [,, "[19]\\d{1,5}",,,,,,, [2, 3, 4, 5, 6]],,, [,, "112|9[2-4]",,,, "92",,, [2, 3]], [,,,,,,,,, [-1]],,,, "RS",,,,,,,,,,,,,,,,,, [,, "112|9[2-4]",,,, "92",,, [2, 3]],, [,, "1[189]\\d{1,4}|9[2-4]",,,, "92"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        RU: [, [,, "[01]\\d\\d?",,,,,,, [2, 3]],,, [,, "112|(?:0|10)[1-3]",,,, "01"], [,,,,,,,,, [-1]],,,, "RU",,,,,,,,,,,,,,,,,, [,, "112|(?:0|10)[1-3]",,,, "01"],, [,, "112|(?:0|10)[1-4]",,,, "01"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        RW: [, [,, "[14]\\d\\d",,,,,,, [3]],,, [,, "11[1245]",,,, "111"], [,,,,,,,,, [-1]],,,, "RW",,,,,,,,,,,,,,,,,, [,, "11[12]",,,, "111"],, [,, "1(?:0[0-2]|1[0-24-6]|2[13]|70|99)|456",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SA: [, [,, "[19]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "11(?:2|6\\d{3})|9(?:11|37|9[7-9])",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "SA",,,,,,,,,,,,,,,,,, [,, "112|9(?:11|9[79])",,,, "112",,, [3]],, [,, "1(?:1(?:00|2|6111)|410|9(?:00|1[89]|9(?:099|22|91)))|9(?:0[24-79]|11|3[379]|40|66|8[5-9]|9[02-9])",,,, "112"], [,, "141\\d",,,, "1410",,, [4]], [,, "1(?:10|41)\\d|90[24679]",,,, "902",,, [3, 4]],, [,,,,,,,,, [-1]]],
        SB: [, [,, "[127-9]\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "SB",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "1(?:[02]\\d|1[12]|[35][01]|[49][1-9]|6[2-9]|7[7-9]|8[0-8])|269|777|835|9(?:[01]1|22|33|55|77|88|99)",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SC: [, [,, "[19]\\d{2,3}",,,,,,, [3, 4]],,, [,, "999",,,, "999",,, [3]], [,,,,,,,,, [-1]],,,, "SC",,,,,,,,,,,,,,,,,, [,, "999",,,, "999",,, [3]],, [,, "1(?:0\\d|1[027]|2[0-8]|3[13]|4[0-2]|[59][15]|6[1-9]|7[124-6]|8[158])|9(?:6\\d\\d|99)",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SD: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "SD",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "999",,,, "999"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SE: [, [,, "[1-37-9]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "112|(?:116\\d|900)\\d\\d",,,, "112",,, [3, 5, 6]], [,, "11811[89]|72\\d{3}",,,, "72000",,, [5, 6]],,,, "SE",,,,,,,,,,,,,,,,,, [,, "112|90000",,,, "112",,, [3, 5]],, [,, "11(?:[25]|313|6(?:00[06]|1(?:1[17]|23))|7[0-8])|2(?:2[02358]|33|4[01]|50|6[1-4])|32[13]|8(?:22|88)|9(?:0(?:00|51)0|12)|(?:11(?:4|8[02-46-9])|7\\d\\d|90[2-4])\\d\\d|(?:118|90)1(?:[02-9]\\d|1[013-9])",,,, "112"], [,,,,,,,,, [-1]], [,, "2(?:2[02358]|33|4[01]|50|6[1-4])|32[13]|8(?:22|88)|912",,,, "220",,, [3]],, [,, "7\\d{4}",,,, "70000",,, [5]]],
        SG: [, [,, "[179]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "99[359]",,,, "993",,, [3]], [,,,,,,,,, [-1]],,,, "SG",,,,,,,,,,,,,,,,,, [,, "99[359]",,,, "993",,, [3]],, [,, "1(?:(?:[01368]\\d|44)\\d|[57]\\d{2,3}|9(?:0[1-9]|[1-9]\\d))|77222|99[02-9]|100",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,, "772\\d\\d",,,, "77200",,, [5]]],
        SH: [, [,, "[129]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "9(?:11|99)",,,, "911",,, [3]], [,,,,,,,,, [-1]],,,, "SH",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911",,, [3]],, [,, "1\\d{2,3}|26[01]\\d\\d|9(?:11|99)",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SI: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "11(?:(?:0|6\\d)\\d\\d|[23]|8\\d\\d?)",,,, "112"], [,,,,,,,,, [-1]],,,, "SI",,,,,,,,,,,,,,,,,, [,, "11[23]",,,, "112",,, [3]],, [,, "1(?:1(?:00[146]|[23]|6(?:000|1(?:11|23))|8(?:[08]|99))|9(?:059|1(?:0[12]|16)|5|70|87|9(?:00|[149])))|19(?:08|81)[09]",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SJ: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[023]",,,, "110"], [,,,,,,,,, [-1]],,,, "SJ",,,,,,,,,,,,,,,,,, [,, "11[023]",,,, "110"],, [,, "11[023]",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SK: [, [,, "1\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:1(?:2|6\\d{3})|5[058])",,,, "112",,, [3, 6]], [,,,,,,,,, [-1]],,,, "SK",,,,,,,,,,,,,,,,,, [,, "1(?:12|5[058])",,,, "112",,, [3]],, [,, "1(?:1(?:2|6(?:000|111)|8[0-8])|[248]\\d{3}|5[0589])",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SL: [, [,, "[069]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "(?:01|99)9",,,, "019",,, [3]], [,,,,,,,,, [-1]],,,, "SL",,,,,,,,,,,,,,,,,, [,, "(?:01|99)9",,,, "019",,, [3]],, [,, "(?:01|99)9|60400",,,, "019"], [,,,,,,,,, [-1]], [,, "604\\d\\d",,,, "60400",,, [5]],, [,, "604\\d\\d",,,, "60400",,, [5]]],
        SM: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[358]",,,, "113"], [,,,,,,,,, [-1]],,,, "SM",,,,,,,,,,,,,,,,,, [,, "11[358]",,,, "113"],, [,, "11[358]",,,, "113"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SN: [, [,, "[12]\\d{1,5}",,,,,,, [2, 3, 4, 5, 6]],,, [,, "1(?:515|[78])|2(?:00|1)\\d{3}",,,, "17",,, [2, 4, 5, 6]], [,, "2(?:0[246]|[468])\\d{3}",,,, "24000",,, [5, 6]],,,, "SN",,,,,,,,,,,,,,,,,, [,, "1[78]",,,, "17",,, [2]],, [,, "1(?:1[69]|(?:[246]\\d|51)\\d)|2(?:0[0-246]|[12468])\\d{3}|1[278]",,,, "12"], [,, "2(?:01|2)\\d{3}",,,, "22000",,, [5, 6]], [,, "1[46]\\d\\d",,,, "1400",,, [4]],, [,, "2[468]\\d{3}",,,, "24000",,, [5]]],
        SO: [, [,, "[57-9]\\d\\d",,,,,,, [3]],,, [,, "555|888|999",,,, "555"], [,,,,,,,,, [-1]],,,, "SO",,,,,,,,,,,,,,,,,, [,, "555|888|999",,,, "555"],, [,, "555|777|888|999",,,, "555"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SR: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "115",,,, "115",,, [3]], [,,,,,,,,, [-1]],,,, "SR",,,,,,,,,,,,,,,,,, [,, "115",,,, "115",,, [3]],, [,, "1\\d{2,3}",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ST: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "112",,,, "112"], [,,,,,,,,, [-1]],,,, "ST",,,,,,,,,,,,,,,,,, [,, "112",,,, "112"],, [,, "112",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SV: [, [,, "[49]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "911",,,, "911",,, [3]], [,,,,,,,,, [-1]],,,, "SV",,,,,,,,,,,,,,,,,, [,, "911",,,, "911",,, [3]],, [,, "40404|911",,,, "911"], [,,,,,,,,, [-1]], [,, "404\\d\\d",,,, "40400",,, [5]],, [,, "404\\d\\d",,,, "40400",,, [5]]],
        SX: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "919",,,, "919"], [,,,,,,,,, [-1]],,,, "SX",,,,,,,,,,,,,,,,,, [,, "919",,,, "919"],, [,, "919",,,, "919"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SY: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[023]",,,, "110"], [,,,,,,,,, [-1]],,,, "SY",,,,,,,,,,,,,,,,,, [,, "11[023]",,,, "110"],, [,, "11[023]",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        SZ: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "SZ",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "999",,,, "999"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TC: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "TC",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911"],, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TD: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]],,,, "TD",,,,,,,,,,,,,,,,,, [,, "1[78]",,,, "17"],, [,, "1[78]",,,, "17"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TG: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1[78]|7[127])",,,, "117",,, [3]], [,,,,,,,,, [-1]],,,, "TG",,,,,,,,,,,,,,,,,, [,, "1(?:1[78]|7[127])",,,, "117",,, [3]],, [,, "1(?:011|1[078]|7[127])",,,, "110"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TH: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "1(?:1(?:00|2[03]|3[3479]|7[67]|9[0246])|578|6(?:44|6[79]|88|9[16])|88\\d|9[19])|1[15]55",,,, "191"], [,, "1(?:113|2[23]\\d|5(?:09|56))",,,, "1113",,, [4]],,,, "TH",,,,,,,,,,,,,,,,,, [,, "1(?:669|9[19])",,,, "191"],, [,, "1(?:0[0-2]|1(?:0[03]|1[1-35]|2[0358]|3[03-79]|4[02-489]|5[04-9]|6[04-79]|7[03-9]|8[027-9]|9[02-79])|2(?:22|3[89]|66)|3(?:18|2[23]|3[013]|5[56]|6[45]|73)|477|5(?:0\\d|4[0-37-9]|5[1-8]|6[01679]|7[12568]|8[0-24589]|9[013589])|6(?:0[0-29]|2[03]|4[3-6]|6[1-9]|7[0257-9]|8[0158]|9[014-9])|7(?:[14]9|7[27]|90)|888|9[19])",,,, "100"], [,, "1(?:1(?:03|1[15]|2[58]|3[056]|4[02-49]|5[046-9]|7[03-589]|9[579])|5(?:0[0-8]|4[0-378]|5[1-478]|7[156])|6(?:20|4[356]|6[1-68]|7[057-9]|8[015]|9[0457-9]))|1(?:1[68]|26|3[1-35]|5[689]|60|7[17])\\d",,,, "1103",,, [4]], [,, "114[89]",,,, "1148",,, [4]],, [,,,,,,,,, [-1]]],
        TJ: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:0[1-3]|12)",,,, "101"], [,,,,,,,,, [-1]],,,, "TJ",,,,,,,,,,,,,,,,,, [,, "1(?:0[1-3]|12)",,,, "101"],, [,, "1(?:0[1-3]|12)",,,, "101"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TL: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[25]",,,, "112"], [,,,,,,,,, [-1]],,,, "TL",,,,,,,,,,,,,,,,,, [,, "11[25]",,,, "112"],, [,, "1(?:0[02]|1[25]|2[0138]|72|9[07])",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TM: [, [,, "0\\d",,,,,,, [2]],,, [,, "0[1-49]",,,, "01"], [,,,,,,,,, [-1]],,,, "TM",,,,,,,,,,,,,,,,,, [,, "0[1-3]",,,, "01"],, [,, "0[1-49]",,,, "01"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TN: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "19[078]",,,, "190"], [,,,,,,,,, [-1]],,,, "TN",,,,,,,,,,,,,,,,,, [,, "19[078]",,,, "190"],, [,, "19[078]",,,, "190"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TO: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|22|33|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "TO",,,,,,,,,,,,,,,,,, [,, "9(?:11|22|33|99)",,,, "911"],, [,, "9(?:11|22|33|99)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TR: [, [,, "[1-9]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:1[02]|22|3[126]|4[04]|5[15-9]|6[18]|77|83)",,,, "110",,, [3]], [,,,,,,,,, [-1]],,,, "TR",,,,,,,,,,,,,,,,,, [,, "1(?:1[02]|55)",,,, "110",,, [3]],, [,, "1(?:1(?:[02-79]|8(?:1[018]|2[0245]|3[2-4]|42|5[058]|6[06]|7[07]|8[01389]|9[089]))|3(?:37|[58]6|65)|471|5(?:07|78)|6(?:[02]6|99)|8(?:63|95))|2(?:077|268|4(?:17|23)|5(?:7[26]|82)|6[14]4|8\\d\\d|9(?:30|89))|3(?:0(?:05|72)|353|4(?:06|30|64)|502|674|747|851|9(?:1[29]|60))|4(?:0(?:25|3[12]|[47]2)|3(?:3[13]|[89]1)|439|5(?:43|55)|717|832)|5(?:145|290|[4-6]\\d\\d|772|833|9(?:[06]1|92))|6(?:236|6(?:12|39|8[59])|769)|7890|8(?:688|7(?:28|65)|85[06])|9(?:159|290)|1[2-9]\\d",,,, "110"], [,, "(?:285|542)0",,,, "2850",,, [4]], [,,,,,,,,, [-1]],, [,, "1(?:3(?:37|[58]6|65)|4(?:4|71)|5(?:07|78)|6(?:[02]6|99)|8(?:3|63|95))|(?:2(?:07|26|4[12]|5[78]|6[14]|8\\d|9[38])|3(?:0[07]|[38]5|4[036]|50|67|74|9[16])|4(?:0[2-47]|3[389]|[48]3|5[45]|71)|5(?:14|29|[4-6]\\d|77|83|9[069])|6(?:23|6[138]|76)|789|8(?:68|7[26]|85)|9(?:15|29))\\d",,,, "144",,, [3, 4]]],
        TT: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "99[09]",,,, "990"], [,,,,,,,,, [-1]],,,, "TT",,,,,,,,,,,,,,,,,, [,, "99[09]",,,, "990"],, [,, "99[09]",,,, "990"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TV: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "TV",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "1\\d\\d|911",,,, "100"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TW: [, [,, "1\\d{2,3}",,,,,,, [3, 4]],,, [,, "11[0289]|1(?:81|92)\\d",,,, "110"], [,, "10[56]",,,, "105",,, [3]],,,, "TW",,,,,,,,,,,,,,,,,, [,, "11[029]",,,, "110",,, [3]],, [,, "1(?:0[04-6]|1[0237-9]|3[389]|6[05-8]|7[07]|8(?:0|11)|9(?:19|22|5[057]|68|8[05]|9[15689]))",,,, "100"], [,, "1(?:65|9(?:1\\d|50|85|98))",,,, "165"], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        TZ: [, [,, "[149]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "11[12]|999",,,, "111",,, [3]], [,,,,,,,,, [-1]],,,, "TZ",,,,,,,,,,,,,,,,,, [,, "11[12]|999",,,, "111",,, [3]],, [,, "11[12]|46400|999",,,, "111"], [,,,,,,,,, [-1]], [,, "464\\d\\d",,,, "46400",,, [5]],, [,, "464\\d\\d",,,, "46400",,, [5]]],
        UA: [, [,, "[189]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "1(?:0[1-3]|1(?:2|6\\d{3}))",,,, "101",,, [3, 6]], [,,,,,,,,, [-1]],,,, "UA",,,,,,,,,,,,,,,,,, [,, "1(?:0[1-3]|12)",,,, "101",,, [3]],, [,, "1(?:0[1-49]|1(?:2|6(?:000|1(?:11|23))|8\\d\\d?)|(?:[278]|5\\d)\\d)|[89]00\\d\\d?|151|1(?:06|4\\d|6)\\d\\d",,,, "101"], [,,,,,,,,, [-1]], [,, "(?:118|[89]00)\\d\\d?",,,, "1180",,, [4, 5]],, [,,,,,,,,, [-1]]],
        UG: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "999",,,, "999"], [,,,,,,,,, [-1]],,,, "UG",,,,,,,,,,,,,,,,,, [,, "999",,,, "999"],, [,, "999",,,, "999"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        US: [, [,, "[1-9]\\d{2,5}",,,,,,, [3, 4, 5, 6]],,, [,, "112|[69]11",,,, "112",,, [3]], [,, "24280|(?:381|968)35|4(?:3355|7553|8221)|5(?:(?:489|934)2|5928)|72078|(?:323|960)40|(?:276|414)63|(?:2(?:520|744)|7390|9968)9|(?:693|732|976)88|(?:3(?:556|825)|5294|8623|9729)4|(?:3378|4136|7642|8961|9979)6|(?:4(?:6(?:15|32)|827)|(?:591|720)8|9529)7",,,, "24280",,, [5]],,,, "US",,,,,,,,,,,,,,,,,, [,, "112|911",,,, "112",,, [3]],, [,, "11(?:2|5[1-47]|[68]\\d|7[0-57]|98)|[2-9]\\d{3,5}|[2-9]11",,,, "112"], [,, "2(?:3333|(?:4224|7562|900)2|56447|6688)|3(?:1010|2665|7404)|40404|560560|6(?:0060|22639|5246|7622)|7(?:0701|3822|4666)|8(?:(?:3825|7226)5|4816)|99099",,,, "23333",,, [5, 6]], [,, "336\\d\\d|[2-9]\\d{3}|[2356]11",,,, "211",,, [3, 4, 5]],, [,, "[2-9]\\d{4,5}",,,, "20000",,, [5, 6]]],
        UY: [, [,, "[19]\\d{2,3}",,,,,,, [3, 4]],,, [,, "128|911",,,, "128",,, [3]], [,,,,,,,,, [-1]],,,, "UY",,,,,,,,,,,,,,,,,, [,, "128|911",,,, "128",,, [3]],, [,, "1(?:0[4-9]|1[2368]|2[0-3568]|787)|911",,,, "104"], [,, "178\\d",,,, "1780",,, [4]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        UZ: [, [,, "[04]\\d(?:\\d(?:\\d{2})?)?",,,,,,, [2, 3, 5]],,, [,, "0(?:0[1-3]|[1-3]|50)",,,, "01",,, [2, 3]], [,,,,,,,,, [-1]],,,, "UZ",,,,,,,,,,,,,,,,,, [,, "0(?:0[1-3]|[1-3]|50)",,,, "01",,, [2, 3]],, [,, "0(?:0[1-3]|[1-3]|50)|45400",,,, "01"], [,,,,,,,,, [-1]], [,, "454\\d\\d",,,, "45400",,, [5]],, [,, "454\\d\\d",,,, "45400",,, [5]]],
        VA: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[2358]",,,, "112"], [,,,,,,,,, [-1]],,,, "VA",,,,,,,,,,,,,,,,,, [,, "11[2358]",,,, "112"],, [,, "11[2358]",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        VC: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "VC",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911"],, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        VE: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "1(?:12|71)|911",,,, "112"], [,,,,,,,,, [-1]],,,, "VE",,,,,,,,,,,,,,,,,, [,, "1(?:12|71)|911",,,, "112"],, [,, "1(?:12|71)|911",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        VG: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]],,,, "VG",,,,,,,,,,,,,,,,,, [,, "9(?:11|99)",,,, "911"],, [,, "9(?:11|99)",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        VI: [, [,, "9\\d\\d",,,,,,, [3]],,, [,, "911",,,, "911"], [,,,,,,,,, [-1]],,,, "VI",,,,,,,,,,,,,,,,,, [,, "911",,,, "911"],, [,, "911",,,, "911"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        VN: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "11[3-5]",,,, "113"], [,,,,,,,,, [-1]],,,, "VN",,,,,,,,,,,,,,,,,, [,, "11[3-5]",,,, "113"],, [,, "11[3-5]",,,, "113"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        VU: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "112",,,, "112"], [,,,,,,,,, [-1]],,,, "VU",,,,,,,,,,,,,,,,,, [,, "112",,,, "112"],, [,, "112",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        WF: [, [,, "1\\d",,,,,,, [2]],,, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]],,,, "WF",,,,,,,,,,,,,,,,,, [,, "1[578]",,,, "15"],, [,, "1[578]",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        WS: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "9(?:11|9[4-69])",,,, "911"], [,,,,,,,,, [-1]],,,, "WS",,,,,,,,,,,,,,,,,, [,, "9(?:11|9[4-69])",,,, "911"],, [,, "1(?:1[12]|2[0-6]|[39]0)|9(?:11|9[4-79])",,,, "111"], [,,,,,,,,, [-1]], [,, "12[0-6]",,,, "120"],, [,,,,,,,,, [-1]]],
        XK: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "1(?:12|9[2-4])",,,, "112"], [,,,,,,,,, [-1]],,,, "XK",,,,,,,,,,,,,,,,,, [,, "1(?:12|9[2-4])",,,, "112"],, [,, "1(?:12|9[2-4])",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        YE: [, [,, "1\\d\\d",,,,,,, [3]],,, [,, "19[1459]",,,, "191"], [,,,,,,,,, [-1]],,,, "YE",,,,,,,,,,,,,,,,,, [,, "19[1459]",,,, "191"],, [,, "19[1459]",,,, "191"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        YT: [, [,, "1\\d\\d?",,,,,,, [2, 3]],,, [,, "1(?:12|5)",,,, "15"], [,,,,,,,,, [-1]],,,, "YT",,,,,,,,,,,,,,,,,, [,, "1(?:12|5)",,,, "15"],, [,, "1(?:12|5)",,,, "15"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ZA: [, [,, "[134]\\d{2,4}",,,,,,, [3, 4, 5]],,, [,, "1(?:01\\d\\d|12)",,,, "112",,, [3, 5]], [,, "41(?:348|851)",,,, "41348",,, [5]],,,, "ZA",,,,,,,,,,,,,,,,,, [,, "1(?:01(?:11|77)|12)",,,, "112",,, [3, 5]],, [,, "1(?:0(?:1(?:11|77)|20|7)|1[12]|77(?:3[237]|[45]7|6[279]|9[26]))|[34]\\d{4}",,,, "107"], [,, "3(?:078[23]|7(?:064|567)|8126)|4(?:394[16]|7751|8837)|4[23]699",,,, "30782",,, [5]], [,, "111",,,, "111",,, [3]],, [,, "[34]\\d{4}",,,, "30000",,, [5]]],
        ZM: [, [,, "[19]\\d\\d",,,,,,, [3]],,, [,, "112|99[139]",,,, "112"], [,,,,,,,,, [-1]],,,, "ZM",,,,,,,,,,,,,,,,,, [,, "112|99[139]",,,, "112"],, [,, "112|99[139]",,,, "112"], [,,,,,,,,, [-1]], [,,,,,,,,, [-1]],, [,,,,,,,,, [-1]]],
        ZW: [, [,, "[139]\\d\\d(?:\\d{2})?",,,,,,, [3, 5]],,, [,, "112|9(?:5[023]|61|9[3-59])",,,, "112",,, [3]], [,, "3[013-57-9]\\d{3}",,,, "30000",,, [5]],,,, "ZW",,,,,,,,,,,,,,,,,, [,, "112|99[3-59]",,,, "112",,, [3]],, [,, "11[2469]|3[013-57-9]\\d{3}|9(?:5[023]|6[0-25]|9[3-59])",,,, "112"], [,,,,,,,,, [-1]], [,, "114|9(?:5[023]|6[0-25])",,,, "114",,, [3]],, [,,,,,,,,, [-1]]]
      };
      /*
      
       Copyright (C) 2018 The Libphonenumber Authors.
      
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
      
       http://www.apache.org/licenses/LICENSE-2.0
      
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
      */

      i18n.phonenumbers.ShortNumberInfo = function () {
        this.regionToMetadataMap = {};
      };

      goog.addSingletonGetter(i18n.phonenumbers.ShortNumberInfo);
      i18n.phonenumbers.ShortNumberInfo.REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT_ = ["BR", "CL", "NI"];
      i18n.phonenumbers.ShortNumberInfo.ShortNumberCost = {
        TOLL_FREE: 0,
        STANDARD_RATE: 1,
        PREMIUM_RATE: 2,
        UNKNOWN_COST: 3
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getRegionCodesForCountryCode_ = function (a) {
        return (a = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[a]) ? a : [];
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.regionDialingFromMatchesNumber_ = function (a, b) {
        var c = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());
        return goog.array.contains(c, b);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isPossibleShortNumberForRegion = function (a, b) {
        if (!this.regionDialingFromMatchesNumber_(a, b)) {
          return !1;
        }

        var c = this.getMetadataForRegion_(b);

        if (!c) {
          return !1;
        }

        var d = this.getNationalSignificantNumber_(a).length;
        return goog.array.contains(c.getGeneralDesc().possibleLengthArray(), d);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isPossibleShortNumber = function (a) {
        var b = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());
        a = this.getNationalSignificantNumber_(a).length;

        for (var c = 0; c < b.length; c++) {
          var d = this.getMetadataForRegion_(b[c]);

          if (d && (d = d.getGeneralDesc().possibleLengthArray(), goog.array.contains(d, a))) {
            return !0;
          }
        }

        return !1;
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isValidShortNumberForRegion = function (a, b) {
        if (!this.regionDialingFromMatchesNumber_(a, b)) {
          return !1;
        }

        var c = this.getMetadataForRegion_(b);

        if (!c) {
          return !1;
        }

        var d = this.getNationalSignificantNumber_(a),
            e = c.getGeneralDesc();

        if (!this.matchesPossibleNumberAndNationalNumber_(d, e)) {
          return !1;
        }

        c = c.getShortCode();
        return this.matchesPossibleNumberAndNationalNumber_(d, c);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isValidShortNumber = function (a) {
        var b = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault()),
            c = this.getRegionCodeForShortNumberFromRegionList_(a, b);
        return 1 < b.length && null != c ? !0 : this.isValidShortNumberForRegion(a, c);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getExpectedCostForRegion = function (a, b) {
        var c = i18n.phonenumbers.ShortNumberInfo.ShortNumberCost;

        if (!this.regionDialingFromMatchesNumber_(a, b)) {
          return c.UNKNOWN_COST;
        }

        var d = this.getMetadataForRegion_(b);

        if (!d) {
          return c.UNKNOWN_COST;
        }

        var e = this.getNationalSignificantNumber_(a);
        return goog.array.contains(d.getGeneralDesc().possibleLengthArray(), e.length) ? this.matchesPossibleNumberAndNationalNumber_(e, d.getPremiumRate()) ? c.PREMIUM_RATE : this.matchesPossibleNumberAndNationalNumber_(e, d.getStandardRate()) ? c.STANDARD_RATE : this.matchesPossibleNumberAndNationalNumber_(e, d.getTollFree()) || this.isEmergencyNumber(e, b) ? c.TOLL_FREE : c.UNKNOWN_COST : c.UNKNOWN_COST;
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getExpectedCost = function (a) {
        var b = i18n.phonenumbers.ShortNumberInfo.ShortNumberCost,
            c = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());

        if (0 === c.length) {
          return b.UNKNOWN_COST;
        }

        if (1 === c.length) {
          return this.getExpectedCostForRegion(a, c[0]);
        }

        for (var d = b.TOLL_FREE, e = 0; e < c.length; e++) {
          var f = this.getExpectedCostForRegion(a, c[e]);

          switch (f) {
            case b.PREMIUM_RATE:
              return b.PREMIUM_RATE;

            case b.UNKNOWN_COST:
              d = b.UNKNOWN_COST;
              break;

            case b.STANDARD_RATE:
              d !== b.UNKNOWN_COST && (d = b.STANDARD_RATE);
              break;

            case b.TOLL_FREE:
              break;

            default:
              throw Error("Unrecognized cost for region: " + f);
          }
        }

        return d;
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getRegionCodeForShortNumberFromRegionList_ = function (a, b) {
        if (0 === b.length) {
          return null;
        }

        if (1 === b.length) {
          return b[0];
        }

        for (var c = this.getNationalSignificantNumber_(a), d = 0; d < b.length; d++) {
          var e = b[d],
              f = this.getMetadataForRegion_(e);

          if (f && this.matchesPossibleNumberAndNationalNumber_(c, f.getShortCode())) {
            return e;
          }
        }

        return null;
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getSupportedRegions = function () {
        return goog.array.filter(Object.keys(i18n.phonenumbers.shortnumbermetadata.countryToMetadata), function (a) {
          return isNaN(a);
        });
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getExampleShortNumber = function (a) {
        a = this.getMetadataForRegion_(a);

        if (!a) {
          return "";
        }

        a = a.getShortCode();
        return a.hasExampleNumber() ? a.getExampleNumber() || "" : "";
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getExampleShortNumberForCost = function (a, b) {
        var c = this.getMetadataForRegion_(a);

        if (!c) {
          return "";
        }

        var d = i18n.phonenumbers.ShortNumberInfo.ShortNumberCost,
            e = null;

        switch (b) {
          case d.TOLL_FREE:
            e = c.getTollFree();
            break;

          case d.STANDARD_RATE:
            e = c.getStandardRate();
            break;

          case d.PREMIUM_RATE:
            e = c.getPremiumRate();
        }

        return e && e.hasExampleNumber() ? e.getExampleNumber() || "" : "";
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.connectsToEmergencyNumber = function (a, b) {
        return this.matchesEmergencyNumberHelper_(a, b, !0);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isEmergencyNumber = function (a, b) {
        return this.matchesEmergencyNumberHelper_(a, b, !1);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getMetadataForRegion_ = function (a) {
        if (!a) {
          return null;
        }

        a = a.toUpperCase();
        var b = this.regionToMetadataMap[a];

        if (null == b) {
          b = new goog.proto2.PbLiteSerializer();
          var c = i18n.phonenumbers.shortnumbermetadata.countryToMetadata[a];

          if (null == c) {
            return null;
          }

          b = b.deserialize(i18n.phonenumbers.PhoneMetadata.getDescriptor(), c);
          this.regionToMetadataMap[a] = b;
        }

        return b;
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.matchesEmergencyNumberHelper_ = function (a, b, c) {
        var d = i18n.phonenumbers.PhoneNumberUtil.extractPossibleNumber(a);

        if (i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(d)) {
          return !1;
        }

        a = this.getMetadataForRegion_(b);

        if (null == a || !a.hasEmergency()) {
          return !1;
        }

        d = i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(d);
        b = c && !goog.array.contains(i18n.phonenumbers.ShortNumberInfo.REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT_, b);
        c = a.getEmergency().getNationalNumberPatternOrDefault();
        return i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(c, d) || b && i18n.phonenumbers.PhoneNumberUtil.matchesPrefix(c, d);
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isCarrierSpecific = function (a) {
        var b = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());
        b = this.getRegionCodeForShortNumberFromRegionList_(a, b);
        a = this.getNationalSignificantNumber_(a);
        b = this.getMetadataForRegion_(b);
        return !!b && this.matchesPossibleNumberAndNationalNumber_(a, b.getCarrierSpecific());
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isCarrierSpecificForRegion = function (a, b) {
        if (!this.regionDialingFromMatchesNumber_(a, b)) {
          return !1;
        }

        var c = this.getNationalSignificantNumber_(a),
            d = this.getMetadataForRegion_(b);
        return !!d && this.matchesPossibleNumberAndNationalNumber_(c, d.getCarrierSpecific());
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.isSmsServiceForRegion = function (a, b) {
        if (!this.regionDialingFromMatchesNumber_(a, b)) {
          return !1;
        }

        var c = this.getMetadataForRegion_(b),
            d = this.getNationalSignificantNumber_(a);
        return !!c && this.matchesPossibleNumberAndNationalNumber_(d, c.getSmsServices());
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.getNationalSignificantNumber_ = function (a) {
        if (!a.hasNationalNumber()) {
          return "";
        }

        var b = "" + a.getNationalNumber();
        return a.hasItalianLeadingZero() && a.getItalianLeadingZero() && 0 < a.getNumberOfLeadingZerosOrDefault() ? Array(a.getNumberOfLeadingZerosOrDefault() + 1).join("0") + b : b;
      };

      i18n.phonenumbers.ShortNumberInfo.prototype.matchesPossibleNumberAndNationalNumber_ = function (a, b) {
        return 0 < b.possibleLengthArray().length && !goog.array.contains(b.possibleLengthArray(), a.length) ? !1 : i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(b.getNationalNumberPatternOrDefault(), a.toString());
      };

      Object.defineProperty(exports, "__esModule", {
        value: !0
      });
      exports["default"] = i18n.phonenumbers;
      module.exports = exports["default"];
    }, {}]
  }, {}, [1])(1);
});
},{}],"node_modules/class-validator/esm5/decorator/string/IsPhoneNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPhoneNumber = isPhoneNumber;
exports.IsPhoneNumber = IsPhoneNumber;
exports.IS_PHONE_NUMBER = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _googleLibphonenumber = require("google-libphonenumber");

var IS_PHONE_NUMBER = "isPhoneNumber";
/**
 * Checks if the string is a valid phone number.
 * @param value the potential phone number string to test
 * @param {string} region 2 characters uppercase country code (e.g. DE, US, CH).
 * If users must enter the intl. prefix (e.g. +41), then you may pass "ZZ" or null as region.
 * See [google-libphonenumber, metadata.js:countryCodeToRegionCodeMap on github]{@link https://github.com/ruimarinho/google-libphonenumber/blob/1e46138878cff479aafe2ce62175c6c49cb58720/src/metadata.js#L33}
 */

exports.IS_PHONE_NUMBER = IS_PHONE_NUMBER;

function isPhoneNumber(value, region) {
  var phoneUtil = _googleLibphonenumber.PhoneNumberUtil.getInstance();

  try {
    var phoneNum = phoneUtil.parseAndKeepRawInput(value, region);
    var result = phoneUtil.isValidNumber(phoneNum);
    return result;
  } catch (error) {
    // logging?
    return false;
  }
}
/**
 * Checks if the string is a valid phone number.
 * @param region 2 characters uppercase country code (e.g. DE, US, CH).
 * If users must enter the intl. prefix (e.g. +41), then you may pass "ZZ" or null as region.
 * See [google-libphonenumber, metadata.js:countryCodeToRegionCodeMap on github]{@link https://github.com/ruimarinho/google-libphonenumber/blob/1e46138878cff479aafe2ce62175c6c49cb58720/src/metadata.js#L33}
 */


function IsPhoneNumber(region, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_PHONE_NUMBER,
    constraints: [region],
    validator: {
      validate: function (value, args) {
        return isPhoneNumber(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid phone number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","google-libphonenumber":"node_modules/google-libphonenumber/dist/libphonenumber.js"}],"node_modules/class-validator/esm5/decorator/string/IsMilitaryTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMilitaryTime = isMilitaryTime;
exports.IsMilitaryTime = IsMilitaryTime;
exports.IS_MILITARY_TIME = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MILITARY_TIME = "isMilitaryTime";
/**
 * Checks if the string represents a time without a given timezone in the format HH:MM (military)
 * If the given value does not match the pattern HH:MM, then it returns false.
 */

exports.IS_MILITARY_TIME = IS_MILITARY_TIME;

function isMilitaryTime(value) {
  var militaryTimeRegex = /^([01]\d|2[0-3]):?([0-5]\d)$/;
  return typeof value === "string" && _validator.default.matches(value, militaryTimeRegex);
}
/**
 * Checks if the string represents a time without a given timezone in the format HH:MM (military)
 * If the given value does not match the pattern HH:MM, then it returns false.
 */


function IsMilitaryTime(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MILITARY_TIME,
    validator: {
      validate: function (value, args) {
        return isMilitaryTime(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid representation of military time in the format HH:MM";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsHash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHash = isHash;
exports.IsHash = IsHash;
exports.IS_HASH = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_HASH = "isHash";
/**
 * Check if the string is a hash of type algorithm.
 * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',
 * 'tiger160', 'tiger192', 'crc32', 'crc32b']
 */

exports.IS_HASH = IS_HASH;

function isHash(value, algorithm) {
  return typeof value === "string" && _validator.default.isHash(value, algorithm);
}
/**
 * Check if the string is a hash of type algorithm.
 * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',
 * 'tiger160', 'tiger192', 'crc32', 'crc32b']
 */


function IsHash(algorithm, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_HASH,
    constraints: [algorithm],
    validator: {
      validate: function (value, args) {
        return isHash(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a hash of type $constraint1";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISSN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISSN = isISSN;
exports.IsISSN = IsISSN;
exports.IS_ISSN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISSN = "isISSN";
/**
 * Checks if the string is a ISSN.
 * If given value is not a string, then it returns false.
 */

exports.IS_ISSN = IS_ISSN;

function isISSN(value, options) {
  return typeof value === "string" && _validator.default.isISSN(value, options);
}
/**
 * Checks if the string is a ISSN.
 * If given value is not a string, then it returns false.
 */


function IsISSN(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISSN,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isISSN(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a ISSN";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsDateString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDateString = isDateString;
exports.IsDateString = IsDateString;
exports.IS_DATE_STRING = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_DATE_STRING = "isDateString";
/**
 * Checks if a given value is a ISOString date.
 */

exports.IS_DATE_STRING = IS_DATE_STRING;

function isDateString(value) {
  var regex = /^\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:Z|[\+\-][0-2]\d(?:\:[0-5]\d)?)?$/g;
  return typeof value === "string" && regex.test(value);
}
/**
 * Checks if a given value is a ISOString date.
 */


function IsDateString(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_DATE_STRING,
    validator: {
      validate: function (value, args) {
        return isDateString(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a ISOString";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/string/IsBooleanString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBooleanString = isBooleanString;
exports.IsBooleanString = IsBooleanString;
exports.IS_BOOLEAN_STRING = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_BOOLEAN_STRING = "isBooleanString";
/**
 * Checks if a string is a boolean.
 * If given value is not a string, then it returns false.
 */

exports.IS_BOOLEAN_STRING = IS_BOOLEAN_STRING;

function isBooleanString(value) {
  return typeof value === "string" && _validator.default.isBoolean(value);
}
/**
 * Checks if a string is a boolean.
 * If given value is not a string, then it returns false.
 */


function IsBooleanString(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BOOLEAN_STRING,
    validator: {
      validate: function (value, args) {
        return isBooleanString(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a boolean string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsNumberString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumberString = isNumberString;
exports.IsNumberString = IsNumberString;
exports.IS_NUMBER_STRING = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_NUMBER_STRING = "isNumberString";
/**
 * Checks if the string is numeric.
 * If given value is not a string, then it returns false.
 */

exports.IS_NUMBER_STRING = IS_NUMBER_STRING;

function isNumberString(value, options) {
  return typeof value === "string" && _validator.default.isNumeric(value, options);
}
/**
 * Checks if the string is numeric.
 * If given value is not a string, then it returns false.
 */


function IsNumberString(options, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_NUMBER_STRING,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isNumberString(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a number string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsBase32.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBase32 = isBase32;
exports.IsBase32 = IsBase32;
exports.IS_BASE32 = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_BASE32 = "isBase32";
/**
 * Checks if a string is base32 encoded.
 * If given value is not a string, then it returns false.
 */

exports.IS_BASE32 = IS_BASE32;

function isBase32(value) {
  return typeof value === "string" && _validator.default.isBase32(value);
}
/**
 * Check if a string is base32 encoded.
 * If given value is not a string, then it returns false.
 */


function IsBase32(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BASE32,
    validator: {
      validate: function (value, args) {
        return isBase32(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be base32 encoded";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsBIC.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBIC = isBIC;
exports.IsBIC = IsBIC;
exports.IS_BIC = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_BIC = "isBIC";
/**
 * Check if a string is a BIC (Bank Identification Code) or SWIFT code.
 * If given value is not a string, then it returns false.
 */

exports.IS_BIC = IS_BIC;

function isBIC(value) {
  return typeof value === "string" && _validator.default.isBIC(value);
}
/**
 * Check if a string is a BIC (Bank Identification Code) or SWIFT code.
 * If given value is not a string, then it returns false.
 */


function IsBIC(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BIC,
    validator: {
      validate: function (value, args) {
        return isBIC(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a BIC or SWIFT code";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsBtcAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBtcAddress = isBtcAddress;
exports.IsBtcAddress = IsBtcAddress;
exports.IS_BTC_ADDRESS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_BTC_ADDRESS = "isBtcAddress";
/**
 * Check if the string is a valid BTC address.
 * If given value is not a string, then it returns false.
 */

exports.IS_BTC_ADDRESS = IS_BTC_ADDRESS;

function isBtcAddress(value) {
  return typeof value === "string" && _validator.default.isBtcAddress(value);
}
/**
 * Check if the string is a valid BTC address.
 * If given value is not a string, then it returns false.
 */


function IsBtcAddress(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BTC_ADDRESS,
    validator: {
      validate: function (value, args) {
        return isBtcAddress(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a BTC address";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsDataURI.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDataURI = isDataURI;
exports.IsDataURI = IsDataURI;
exports.IS_DATA_URI = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_DATA_URI = "isDataURI";
/**
 * Check if the string is a data uri format.
 * If given value is not a string, then it returns false.
 */

exports.IS_DATA_URI = IS_DATA_URI;

function isDataURI(value) {
  return typeof value === "string" && _validator.default.isDataURI(value);
}
/**
 * Check if the string is a data uri format.
 * If given value is not a string, then it returns false.
 */


function IsDataURI(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_DATA_URI,
    validator: {
      validate: function (value, args) {
        return isDataURI(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a data uri format";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsEAN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEAN = isEAN;
exports.IsEAN = IsEAN;
exports.IS_EAN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_EAN = "isEAN";
/**
 * Check if the string is an EAN (European Article Number).
 * If given value is not a string, then it returns false.
 */

exports.IS_EAN = IS_EAN;

function isEAN(value) {
  return typeof value === "string" && _validator.default.isEAN(value);
}
/**
 * Check if the string is an EAN (European Article Number).
 * If given value is not a string, then it returns false.
 */


function IsEAN(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_EAN,
    validator: {
      validate: function (value, args) {
        return isEAN(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an EAN (European Article Number)";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsEthereumAddress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEthereumAddress = isEthereumAddress;
exports.IsEthereumAddress = IsEthereumAddress;
exports.IS_ETHEREUM_ADDRESS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ETHEREUM_ADDRESS = "isEthereumAddress";
/**
 * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.
 * If given value is not a string, then it returns false.
 */

exports.IS_ETHEREUM_ADDRESS = IS_ETHEREUM_ADDRESS;

function isEthereumAddress(value) {
  return typeof value === "string" && _validator.default.isEthereumAddress(value);
}
/**
 * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.
 * If given value is not a string, then it returns false.
 */


function IsEthereumAddress(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ETHEREUM_ADDRESS,
    validator: {
      validate: function (value, args) {
        return isEthereumAddress(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an Ethereum address";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsHSL.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHSL = isHSL;
exports.IsHSL = IsHSL;
exports.IS_HSL = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_HSL = "isHSL";
/**
* Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.
 * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).
 * If given value is not a string, then it returns false.
 */

exports.IS_HSL = IS_HSL;

function isHSL(value) {
  return typeof value === "string" && _validator.default.isHSL(value);
}
/**
 * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.
 * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).
 * If given value is not a string, then it returns false.
 */


function IsHSL(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_HSL,
    validator: {
      validate: function (value, args) {
        return isHSL(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a HSL color";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsIBAN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIBAN = isIBAN;
exports.IsIBAN = IsIBAN;
exports.IS_IBAN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_IBAN = "isIBAN";
/**
 * Check if a string is a IBAN (International Bank Account Number).
 * If given value is not a string, then it returns false.
 */

exports.IS_IBAN = IS_IBAN;

function isIBAN(value) {
  return typeof value === "string" && _validator.default.isIBAN(value);
}
/**
 * Check if a string is a IBAN (International Bank Account Number).
 * If given value is not a string, then it returns false.
 */


function IsIBAN(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_IBAN,
    validator: {
      validate: function (value, args) {
        return isIBAN(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an IBAN";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsIdentityCard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIdentityCard = isIdentityCard;
exports.IsIdentityCard = IsIdentityCard;
exports.IS_IDENTITY_CARD = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_IDENTITY_CARD = "isIdentityCard";
/**
 * Check if the string is a valid identity card code.
 * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.
 * Defaults to 'any'.
 * If given value is not a string, then it returns false.
 */

exports.IS_IDENTITY_CARD = IS_IDENTITY_CARD;

function isIdentityCard(value, locale) {
  return typeof value === "string" && _validator.default.isIdentityCard(value, locale);
}
/**
 * Check if the string is a valid identity card code.
 * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.
 * Defaults to 'any'.
 * If given value is not a string, then it returns false.
 */


function IsIdentityCard(locale, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_IDENTITY_CARD,
    constraints: [locale],
    validator: {
      validate: function (value, args) {
        return isIdentityCard(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a identity card number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsISRC.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isISRC = isISRC;
exports.IsISRC = IsISRC;
exports.IS_ISRC = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_ISRC = "isISRC";
/**
 * Check if the string is a ISRC.
 * If given value is not a string, then it returns false.
 */

exports.IS_ISRC = IS_ISRC;

function isISRC(value) {
  return typeof value === "string" && _validator.default.isISRC(value);
}
/**
 * Check if the string is a ISRC.
 * If given value is not a string, then it returns false.
 */


function IsISRC(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ISRC,
    validator: {
      validate: function (value, args) {
        return isISRC(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an ISRC";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsLocale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLocale = isLocale;
exports.IsLocale = IsLocale;
exports.IS_LOCALE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_LOCALE = "isLocale";
/**
 * Check if the string is a locale.
 * If given value is not a string, then it returns false.
 */

exports.IS_LOCALE = IS_LOCALE;

function isLocale(value) {
  return typeof value === "string" && _validator.default.isLocale(value);
}
/**
 * Check if the string is a locale.
 * If given value is not a string, then it returns false.
 */


function IsLocale(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_LOCALE,
    validator: {
      validate: function (value, args) {
        return isLocale(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be locale";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsMagnetURI.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMagnetURI = isMagnetURI;
exports.IsMagnetURI = IsMagnetURI;
exports.IS_MAGNET_URI = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MAGNET_URI = "isMagnetURI";
/**
 * Check if the string is a magnet uri format.
 * If given value is not a string, then it returns false.
 */

exports.IS_MAGNET_URI = IS_MAGNET_URI;

function isMagnetURI(value) {
  return typeof value === "string" && _validator.default.isMagnetURI(value);
}
/**
 * Check if the string is a magnet uri format.
 * If given value is not a string, then it returns false.
 */


function IsMagnetURI(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MAGNET_URI,
    validator: {
      validate: function (value, args) {
        return isMagnetURI(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be magnet uri format";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsMimeType.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMimeType = isMimeType;
exports.IsMimeType = IsMimeType;
exports.IS_MIME_TYPE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_MIME_TYPE = "isMimeType";
/**
 * Check if the string matches to a valid MIME type format
 * If given value is not a string, then it returns false.
 */

exports.IS_MIME_TYPE = IS_MIME_TYPE;

function isMimeType(value) {
  return typeof value === "string" && _validator.default.isMimeType(value);
}
/**
 * Check if the string matches to a valid MIME type format
 * If given value is not a string, then it returns false.
 */


function IsMimeType(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_MIME_TYPE,
    validator: {
      validate: function (value, args) {
        return isMimeType(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be MIME type format";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsOctal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isOctal = isOctal;
exports.IsOctal = IsOctal;
exports.IS_OCTAL = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_OCTAL = "isOctal";
/**
 * Check if the string is a valid octal number.
 * If given value is not a string, then it returns false.
 */

exports.IS_OCTAL = IS_OCTAL;

function isOctal(value) {
  return typeof value === "string" && _validator.default.isOctal(value);
}
/**
 * Check if the string is a valid octal number.
 * If given value is not a string, then it returns false.
 */


function IsOctal(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_OCTAL,
    validator: {
      validate: function (value, args) {
        return isOctal(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be valid octal number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsPassportNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPassportNumber = isPassportNumber;
exports.IsPassportNumber = IsPassportNumber;
exports.IS_PASSPORT_NUMBER = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_PASSPORT_NUMBER = "isPassportNumber";
/**
 * Check if the string is a valid passport number relative to a specific country code.
 * If given value is not a string, then it returns false.
 */

exports.IS_PASSPORT_NUMBER = IS_PASSPORT_NUMBER;

function isPassportNumber(value, countryCode) {
  return typeof value === "string" && _validator.default.isPassportNumber(value, countryCode);
}
/**
 * Check if the string is a valid passport number relative to a specific country code.
 * If given value is not a string, then it returns false.
 */


function IsPassportNumber(countryCode, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_PASSPORT_NUMBER,
    constraints: [countryCode],
    validator: {
      validate: function (value, args) {
        return isPassportNumber(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be valid passport number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsPostalCode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPostalCode = isPostalCode;
exports.IsPostalCode = IsPostalCode;
exports.IS_POSTAL_CODE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_POSTAL_CODE = "isPostalCode";
/**
 * Check if the string is a postal code,
 * (locale is one of [ 'AD', 'AT', 'AU', 'BE', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'ID', 'IE' 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'LI', 'LT', 'LU', 'LV', 'MT', 'MX', 'NL', 'NO', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SI', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM' ] OR 'any'. If 'any' is used, function will check if any of the locals match. Locale list is validator.isPostalCodeLocales.).
 * If given value is not a string, then it returns false.
 */

exports.IS_POSTAL_CODE = IS_POSTAL_CODE;

function isPostalCode(value, locale) {
  return typeof value === "string" && _validator.default.isPostalCode(value, locale);
}
/**
 * Check if the string is a postal code,
 * (locale is one of [ 'AD', 'AT', 'AU', 'BE', 'BG', 'BR', 'CA', 'CH', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'ID', 'IE' 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'LI', 'LT', 'LU', 'LV', 'MT', 'MX', 'NL', 'NO', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SI', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM' ] OR 'any'. If 'any' is used, function will check if any of the locals match. Locale list is validator.isPostalCodeLocales.).
 * If given value is not a string, then it returns false.
 */


function IsPostalCode(locale, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_POSTAL_CODE,
    constraints: [locale],
    validator: {
      validate: function (value, args) {
        return isPostalCode(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a postal code";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsRFC3339.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isRFC3339 = isRFC3339;
exports.IsRFC3339 = IsRFC3339;
exports.IS_RFC_3339 = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_RFC_3339 = "isRFC3339";
/**
 * Check if the string is a valid RFC 3339 date.
 * If given value is not a string, then it returns false.
 */

exports.IS_RFC_3339 = IS_RFC_3339;

function isRFC3339(value) {
  return typeof value === "string" && _validator.default.isRFC3339(value);
}
/**
 * Check if the string is a valid RFC 3339 date.
 * If given value is not a string, then it returns false.
 */


function IsRFC3339(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_RFC_3339,
    validator: {
      validate: function (value, args) {
        return isRFC3339(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be RFC 3339 date";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsRgbColor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isRgbColor = isRgbColor;
exports.IsRgbColor = IsRgbColor;
exports.IS_RGB_COLOR = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_RGB_COLOR = "isRgbColor";
/**
* Check if the string is a rgb or rgba color.
 * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.
 * If given value is not a string, then it returns false.
 */

exports.IS_RGB_COLOR = IS_RGB_COLOR;

function isRgbColor(value, includePercentValues) {
  return typeof value === "string" && _validator.default.isRgbColor(value, includePercentValues);
}
/**
 * Check if the string is a rgb or rgba color.
 * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.
 * If given value is not a string, then it returns false.
 */


function IsRgbColor(includePercentValues, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_RGB_COLOR,
    constraints: [includePercentValues],
    validator: {
      validate: function (value, args) {
        return isRgbColor(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be RGB color";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/string/IsSemVer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isSemVer = isSemVer;
exports.IsSemVer = IsSemVer;
exports.IS_SEM_VER = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _validator = _interopRequireDefault(require("validator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IS_SEM_VER = "isSemVer";
/**
 * Check if the string is a Semantic Versioning Specification (SemVer).
 * If given value is not a string, then it returns false.
 */

exports.IS_SEM_VER = IS_SEM_VER;

function isSemVer(value) {
  return typeof value === "string" && _validator.default.isSemVer(value);
}
/**
 * Check if the string is a Semantic Versioning Specification (SemVer).
 * If given value is not a string, then it returns false.
 */


function IsSemVer(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_SEM_VER,
    validator: {
      validate: function (value, args) {
        return isSemVer(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a Semantic Versioning Specification";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","validator":"node_modules/validator/index.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsBoolean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBoolean = isBoolean;
exports.IsBoolean = IsBoolean;
exports.IS_BOOLEAN = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_BOOLEAN = "isBoolean";
/**
 * Checks if a given value is a number.
 */

exports.IS_BOOLEAN = IS_BOOLEAN;

function isBoolean(value) {
  return value instanceof Boolean || typeof value === "boolean";
}
/**
 * Checks if a value is a number.
 */


function IsBoolean(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_BOOLEAN,
    validator: {
      validate: function (value, args) {
        return isBoolean(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a boolean value";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDate = isDate;
exports.IsDate = IsDate;
exports.IS_DATE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_DATE = "isDate";
/**
 * Checks if a given value is a number.
 */

exports.IS_DATE = IS_DATE;

function isDate(value) {
  return value instanceof Date && !isNaN(value.getTime());
}
/**
 * Checks if a value is a number.
 */


function IsDate(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_DATE,
    validator: {
      validate: function (value, args) {
        return isDate(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a Date instance";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNumber = isNumber;
exports.IsNumber = IsNumber;
exports.IS_NUMBER = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_NUMBER = "isNumber";
/**
 * Checks if a given value is a number.
 */

exports.IS_NUMBER = IS_NUMBER;

function isNumber(value, options) {
  if (options === void 0) {
    options = {};
  }

  if (typeof value !== "number") {
    return false;
  }

  if (value === Infinity || value === -Infinity) {
    return options.allowInfinity;
  }

  if (Number.isNaN(value)) {
    return options.allowNaN;
  }

  if (options.maxDecimalPlaces !== undefined) {
    var decimalPlaces = 0;

    if (value % 1 !== 0) {
      decimalPlaces = value.toString().split(".")[1].length;
    }

    if (decimalPlaces > options.maxDecimalPlaces) {
      return false;
    }
  }

  return Number.isFinite(value);
}
/**
 * Checks if a value is a number.
 */


function IsNumber(options, validationOptions) {
  if (options === void 0) {
    options = {};
  }

  return (0, _ValidateBy.ValidateBy)({
    name: IS_NUMBER,
    constraints: [options],
    validator: {
      validate: function (value, args) {
        return isNumber(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a number conforming to the specified constraints";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsEnum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isEnum = isEnum;
exports.IsEnum = IsEnum;
exports.IS_ENUM = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_ENUM = "isEnum";
/**
 * Checks if a given value is an enum
 */

exports.IS_ENUM = IS_ENUM;

function isEnum(value, entity) {
  var enumValues = Object.keys(entity).map(function (k) {
    return entity[k];
  });
  return enumValues.indexOf(value) >= 0;
}
/**
 * Checks if a given value is an enum
 */


function IsEnum(entity, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ENUM,
    constraints: [entity],
    validator: {
      validate: function (value, args) {
        return isEnum(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a valid enum value";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInt = isInt;
exports.IsInt = IsInt;
exports.IS_INT = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_INT = "isInt";
/**
 * Checks if value is an integer.
 */

exports.IS_INT = IS_INT;

function isInt(val) {
  return typeof val === "number" && Number.isInteger(val);
}
/**
 * Checks if value is an integer.
 */


function IsInt(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_INT,
    validator: {
      validate: function (value, args) {
        return isInt(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an integer number";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isString = isString;
exports.IsString = IsString;
exports.IS_STRING = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_STRING = "isString";
/**
* Checks if a given value is a real string.
*/

exports.IS_STRING = IS_STRING;

function isString(value) {
  return value instanceof String || typeof value === "string";
}
/**
* Checks if a given value is a real string.
*/


function IsString(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_STRING,
    validator: {
      validate: function (value, args) {
        return isString(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a string";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isArray = isArray;
exports.IsArray = IsArray;
exports.IS_ARRAY = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_ARRAY = "isArray";
/**
 * Checks if a given value is an array
 */

exports.IS_ARRAY = IS_ARRAY;

function isArray(value) {
  return value instanceof Array;
}
/**
 * Checks if a given value is an array
 */


function IsArray(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_ARRAY,
    validator: {
      validate: function (value, args) {
        return isArray(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an array";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/typechecker/IsObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isObject = isObject;
exports.IsObject = IsObject;
exports.IS_OBJECT = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_OBJECT = "isObject";
/**
 * Checks if the value is valid Object.
 * Returns false if the value is not an object.
 */

exports.IS_OBJECT = IS_OBJECT;

function isObject(value) {
  return value != null && (typeof value === "object" || typeof value === "function") && !Array.isArray(value);
}
/**
 * Checks if the value is valid Object.
 * Returns false if the value is not an object.
 */


function IsObject(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_OBJECT,
    validator: {
      validate: function (value, args) {
        return isObject(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be an object";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/array/ArrayContains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayContains = arrayContains;
exports.ArrayContains = ArrayContains;
exports.ARRAY_CONTAINS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var ARRAY_CONTAINS = "arrayContains";
/**
 * Checks if array contains all values from the given array of values.
 * If null or undefined is given then this function returns false.
 */

exports.ARRAY_CONTAINS = ARRAY_CONTAINS;

function arrayContains(array, values) {
  if (!(array instanceof Array)) return false;
  return values.every(function (value) {
    return array.indexOf(value) !== -1;
  });
}
/**
 * Checks if array contains all values from the given array of values.
 * If null or undefined is given then this function returns false.
 */


function ArrayContains(values, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: ARRAY_CONTAINS,
    constraints: [values],
    validator: {
      validate: function (value, args) {
        return arrayContains(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain $constraint1 values";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/array/ArrayNotContains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayNotContains = arrayNotContains;
exports.ArrayNotContains = ArrayNotContains;
exports.ARRAY_NOT_CONTAINS = void 0;

var _ValidateBy = require("../common/ValidateBy");

var ARRAY_NOT_CONTAINS = "arrayNotContains";
/**
 * Checks if array does not contain any of the given values.
 * If null or undefined is given then this function returns false.
 */

exports.ARRAY_NOT_CONTAINS = ARRAY_NOT_CONTAINS;

function arrayNotContains(array, values) {
  if (!(array instanceof Array)) return false;
  return values.every(function (value) {
    return array.indexOf(value) === -1;
  });
}
/**
 * Checks if array does not contain any of the given values.
 * If null or undefined is given then this function returns false.
 */


function ArrayNotContains(values, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: ARRAY_NOT_CONTAINS,
    constraints: [values],
    validator: {
      validate: function (value, args) {
        return arrayNotContains(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not contain $constraint1 values";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/array/ArrayNotEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayNotEmpty = arrayNotEmpty;
exports.ArrayNotEmpty = ArrayNotEmpty;
exports.ARRAY_NOT_EMPTY = void 0;

var _ValidateBy = require("../common/ValidateBy");

var ARRAY_NOT_EMPTY = "arrayNotEmpty";
/**
 * Checks if given array is not empty.
 * If null or undefined is given then this function returns false.
 */

exports.ARRAY_NOT_EMPTY = ARRAY_NOT_EMPTY;

function arrayNotEmpty(array) {
  return array instanceof Array && array.length > 0;
}
/**
 * Checks if given array is not empty.
 * If null or undefined is given then this function returns false.
 */


function ArrayNotEmpty(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: ARRAY_NOT_EMPTY,
    validator: {
      validate: function (value, args) {
        return arrayNotEmpty(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property should not be empty";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/array/ArrayMinSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayMinSize = arrayMinSize;
exports.ArrayMinSize = ArrayMinSize;
exports.ARRAY_MIN_SIZE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var ARRAY_MIN_SIZE = "arrayMinSize";
/**
 * Checks if array's length is as minimal this number.
 * If null or undefined is given then this function returns false.
 */

exports.ARRAY_MIN_SIZE = ARRAY_MIN_SIZE;

function arrayMinSize(array, min) {
  return array instanceof Array && array.length >= min;
}
/**
 * Checks if array's length is as minimal this number.
 * If null or undefined is given then this function returns false.
 */


function ArrayMinSize(min, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: ARRAY_MIN_SIZE,
    constraints: [min],
    validator: {
      validate: function (value, args) {
        return arrayMinSize(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain at least $constraint1 elements";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/array/ArrayMaxSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayMaxSize = arrayMaxSize;
exports.ArrayMaxSize = ArrayMaxSize;
exports.ARRAY_MAX_SIZE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var ARRAY_MAX_SIZE = "arrayMaxSize";
/**
 * Checks if array's length is as maximal this number.
 * If null or undefined is given then this function returns false.
 */

exports.ARRAY_MAX_SIZE = ARRAY_MAX_SIZE;

function arrayMaxSize(array, max) {
  return array instanceof Array && array.length <= max;
}
/**
 * Checks if array's length is as maximal this number.
 * If null or undefined is given then this function returns false.
 */


function ArrayMaxSize(max, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: ARRAY_MAX_SIZE,
    constraints: [max],
    validator: {
      validate: function (value, args) {
        return arrayMaxSize(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must contain not more than $constraint1 elements";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/array/ArrayUnique.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.arrayUnique = arrayUnique;
exports.ArrayUnique = ArrayUnique;
exports.ARRAY_UNIQUE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var ARRAY_UNIQUE = "arrayUnique";
/**
 * Checks if all array's values are unique. Comparison for objects is reference-based.
 * If null or undefined is given then this function returns false.
 */

exports.ARRAY_UNIQUE = ARRAY_UNIQUE;

function arrayUnique(array) {
  if (!(array instanceof Array)) return false;
  var uniqueItems = array.filter(function (a, b, c) {
    return c.indexOf(a) === b;
  });
  return array.length === uniqueItems.length;
}
/**
 * Checks if all array's values are unique. Comparison for objects is reference-based.
 * If null or undefined is given then this function returns false.
 */


function ArrayUnique(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: ARRAY_UNIQUE,
    validator: {
      validate: function (value, args) {
        return arrayUnique(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "All $property's elements must be unique";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/object/IsNotEmptyObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNotEmptyObject = isNotEmptyObject;
exports.IsNotEmptyObject = IsNotEmptyObject;
exports.IS_NOT_EMPTY_OBJECT = void 0;

var _ValidateBy = require("../common/ValidateBy");

var _IsObject = require("../typechecker/IsObject");

var IS_NOT_EMPTY_OBJECT = "isNotEmptyObject";
/**
 * Checks if the value is valid Object & not empty.
 * Returns false if the value is not an object or an empty valid object.
 */

exports.IS_NOT_EMPTY_OBJECT = IS_NOT_EMPTY_OBJECT;

function isNotEmptyObject(value) {
  if (!(0, _IsObject.isObject)(value)) {
    return false;
  }

  for (var key in value) {
    if (value.hasOwnProperty(key)) {
      return true;
    }
  }

  return false;
}
/**
 * Checks if the value is valid Object & not empty.
 * Returns false if the value is not an object or an empty valid object.
 */


function IsNotEmptyObject(validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_NOT_EMPTY_OBJECT,
    validator: {
      validate: function (value, args) {
        return isNotEmptyObject(value);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix) {
        return eachPrefix + "$property must be a non-empty object";
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","../typechecker/IsObject":"node_modules/class-validator/esm5/decorator/typechecker/IsObject.js"}],"node_modules/class-validator/esm5/decorator/object/IsInstance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isInstance = isInstance;
exports.IsInstance = IsInstance;
exports.IS_INSTANCE = void 0;

var _ValidateBy = require("../common/ValidateBy");

var IS_INSTANCE = "isInstance";
/**
 * Checks if the value is an instance of the specified object.
 */

exports.IS_INSTANCE = IS_INSTANCE;

function isInstance(object, targetTypeConstructor) {
  return targetTypeConstructor && typeof targetTypeConstructor === "function" && object instanceof targetTypeConstructor;
}
/**
 * Checks if the value is an instance of the specified object.
 */


function IsInstance(targetType, validationOptions) {
  return (0, _ValidateBy.ValidateBy)({
    name: IS_INSTANCE,
    constraints: [targetType],
    validator: {
      validate: function (value, args) {
        return isInstance(value, args.constraints[0]);
      },
      defaultMessage: (0, _ValidateBy.buildMessage)(function (eachPrefix, args) {
        if (args.constraints[0]) {
          return eachPrefix + ("$property must be an instance of " + args.constraints[0].name);
        } else {
          return eachPrefix + (IS_INSTANCE + " decorator expects and object as value, but got falsy value.");
        }
      }, validationOptions)
    }
  }, validationOptions);
}
},{"../common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js"}],"node_modules/class-validator/esm5/decorator/decorators.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Allow = require("./common/Allow");

Object.keys(_Allow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Allow[key];
    }
  });
});

var _IsDefined = require("./common/IsDefined");

Object.keys(_IsDefined).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsDefined[key];
    }
  });
});

var _IsOptional = require("./common/IsOptional");

Object.keys(_IsOptional).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsOptional[key];
    }
  });
});

var _Validate = require("./common/Validate");

Object.keys(_Validate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Validate[key];
    }
  });
});

var _ValidateBy = require("./common/ValidateBy");

Object.keys(_ValidateBy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidateBy[key];
    }
  });
});

var _ValidateIf = require("./common/ValidateIf");

Object.keys(_ValidateIf).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidateIf[key];
    }
  });
});

var _ValidateNested = require("./common/ValidateNested");

Object.keys(_ValidateNested).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidateNested[key];
    }
  });
});

var _ValidatePromise = require("./common/ValidatePromise");

Object.keys(_ValidatePromise).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidatePromise[key];
    }
  });
});

var _IsLatLong = require("./common/IsLatLong");

Object.keys(_IsLatLong).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsLatLong[key];
    }
  });
});

var _IsLatitude = require("./common/IsLatitude");

Object.keys(_IsLatitude).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsLatitude[key];
    }
  });
});

var _IsLongitude = require("./common/IsLongitude");

Object.keys(_IsLongitude).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsLongitude[key];
    }
  });
});

var _Equals = require("./common/Equals");

Object.keys(_Equals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Equals[key];
    }
  });
});

var _NotEquals = require("./common/NotEquals");

Object.keys(_NotEquals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _NotEquals[key];
    }
  });
});

var _IsEmpty = require("./common/IsEmpty");

Object.keys(_IsEmpty).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsEmpty[key];
    }
  });
});

var _IsNotEmpty = require("./common/IsNotEmpty");

Object.keys(_IsNotEmpty).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsNotEmpty[key];
    }
  });
});

var _IsIn = require("./common/IsIn");

Object.keys(_IsIn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsIn[key];
    }
  });
});

var _IsNotIn = require("./common/IsNotIn");

Object.keys(_IsNotIn).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsNotIn[key];
    }
  });
});

var _IsDivisibleBy = require("./number/IsDivisibleBy");

Object.keys(_IsDivisibleBy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsDivisibleBy[key];
    }
  });
});

var _IsPositive = require("./number/IsPositive");

Object.keys(_IsPositive).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsPositive[key];
    }
  });
});

var _IsNegative = require("./number/IsNegative");

Object.keys(_IsNegative).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsNegative[key];
    }
  });
});

var _Max = require("./number/Max");

Object.keys(_Max).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Max[key];
    }
  });
});

var _Min = require("./number/Min");

Object.keys(_Min).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Min[key];
    }
  });
});

var _MinDate = require("./date/MinDate");

Object.keys(_MinDate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _MinDate[key];
    }
  });
});

var _MaxDate = require("./date/MaxDate");

Object.keys(_MaxDate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _MaxDate[key];
    }
  });
});

var _Contains = require("./string/Contains");

Object.keys(_Contains).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Contains[key];
    }
  });
});

var _NotContains = require("./string/NotContains");

Object.keys(_NotContains).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _NotContains[key];
    }
  });
});

var _IsAlpha = require("./string/IsAlpha");

Object.keys(_IsAlpha).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsAlpha[key];
    }
  });
});

var _IsAlphanumeric = require("./string/IsAlphanumeric");

Object.keys(_IsAlphanumeric).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsAlphanumeric[key];
    }
  });
});

var _IsDecimal = require("./string/IsDecimal");

Object.keys(_IsDecimal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsDecimal[key];
    }
  });
});

var _IsAscii = require("./string/IsAscii");

Object.keys(_IsAscii).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsAscii[key];
    }
  });
});

var _IsBase = require("./string/IsBase64");

Object.keys(_IsBase).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsBase[key];
    }
  });
});

var _IsByteLength = require("./string/IsByteLength");

Object.keys(_IsByteLength).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsByteLength[key];
    }
  });
});

var _IsCreditCard = require("./string/IsCreditCard");

Object.keys(_IsCreditCard).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsCreditCard[key];
    }
  });
});

var _IsCurrency = require("./string/IsCurrency");

Object.keys(_IsCurrency).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsCurrency[key];
    }
  });
});

var _IsEmail = require("./string/IsEmail");

Object.keys(_IsEmail).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsEmail[key];
    }
  });
});

var _IsFQDN = require("./string/IsFQDN");

Object.keys(_IsFQDN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsFQDN[key];
    }
  });
});

var _IsFullWidth = require("./string/IsFullWidth");

Object.keys(_IsFullWidth).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsFullWidth[key];
    }
  });
});

var _IsHalfWidth = require("./string/IsHalfWidth");

Object.keys(_IsHalfWidth).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsHalfWidth[key];
    }
  });
});

var _IsVariableWidth = require("./string/IsVariableWidth");

Object.keys(_IsVariableWidth).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsVariableWidth[key];
    }
  });
});

var _IsHexColor = require("./string/IsHexColor");

Object.keys(_IsHexColor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsHexColor[key];
    }
  });
});

var _IsHexadecimal = require("./string/IsHexadecimal");

Object.keys(_IsHexadecimal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsHexadecimal[key];
    }
  });
});

var _IsMacAddress = require("./string/IsMacAddress");

Object.keys(_IsMacAddress).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMacAddress[key];
    }
  });
});

var _IsIP = require("./string/IsIP");

Object.keys(_IsIP).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsIP[key];
    }
  });
});

var _IsPort = require("./string/IsPort");

Object.keys(_IsPort).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsPort[key];
    }
  });
});

var _IsISBN = require("./string/IsISBN");

Object.keys(_IsISBN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISBN[key];
    }
  });
});

var _IsISIN = require("./string/IsISIN");

Object.keys(_IsISIN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISIN[key];
    }
  });
});

var _IsISO = require("./string/IsISO8601");

Object.keys(_IsISO).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISO[key];
    }
  });
});

var _IsJSON = require("./string/IsJSON");

Object.keys(_IsJSON).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsJSON[key];
    }
  });
});

var _IsJWT = require("./string/IsJWT");

Object.keys(_IsJWT).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsJWT[key];
    }
  });
});

var _IsLowercase = require("./string/IsLowercase");

Object.keys(_IsLowercase).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsLowercase[key];
    }
  });
});

var _IsMobilePhone = require("./string/IsMobilePhone");

Object.keys(_IsMobilePhone).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMobilePhone[key];
    }
  });
});

var _IsISO31661Alpha = require("./string/IsISO31661Alpha2");

Object.keys(_IsISO31661Alpha).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISO31661Alpha[key];
    }
  });
});

var _IsISO31661Alpha2 = require("./string/IsISO31661Alpha3");

Object.keys(_IsISO31661Alpha2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISO31661Alpha2[key];
    }
  });
});

var _IsMongoId = require("./string/IsMongoId");

Object.keys(_IsMongoId).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMongoId[key];
    }
  });
});

var _IsMultibyte = require("./string/IsMultibyte");

Object.keys(_IsMultibyte).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMultibyte[key];
    }
  });
});

var _IsSurrogatePair = require("./string/IsSurrogatePair");

Object.keys(_IsSurrogatePair).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsSurrogatePair[key];
    }
  });
});

var _IsUrl = require("./string/IsUrl");

Object.keys(_IsUrl).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsUrl[key];
    }
  });
});

var _IsUUID = require("./string/IsUUID");

Object.keys(_IsUUID).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsUUID[key];
    }
  });
});

var _IsFirebasePushId = require("./string/IsFirebasePushId");

Object.keys(_IsFirebasePushId).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsFirebasePushId[key];
    }
  });
});

var _IsUppercase = require("./string/IsUppercase");

Object.keys(_IsUppercase).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsUppercase[key];
    }
  });
});

var _Length = require("./string/Length");

Object.keys(_Length).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Length[key];
    }
  });
});

var _MaxLength = require("./string/MaxLength");

Object.keys(_MaxLength).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _MaxLength[key];
    }
  });
});

var _MinLength = require("./string/MinLength");

Object.keys(_MinLength).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _MinLength[key];
    }
  });
});

var _Matches = require("./string/Matches");

Object.keys(_Matches).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Matches[key];
    }
  });
});

var _IsPhoneNumber = require("./string/IsPhoneNumber");

Object.keys(_IsPhoneNumber).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsPhoneNumber[key];
    }
  });
});

var _IsMilitaryTime = require("./string/IsMilitaryTime");

Object.keys(_IsMilitaryTime).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMilitaryTime[key];
    }
  });
});

var _IsHash = require("./string/IsHash");

Object.keys(_IsHash).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsHash[key];
    }
  });
});

var _IsISSN = require("./string/IsISSN");

Object.keys(_IsISSN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISSN[key];
    }
  });
});

var _IsDateString = require("./string/IsDateString");

Object.keys(_IsDateString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsDateString[key];
    }
  });
});

var _IsBooleanString = require("./string/IsBooleanString");

Object.keys(_IsBooleanString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsBooleanString[key];
    }
  });
});

var _IsNumberString = require("./string/IsNumberString");

Object.keys(_IsNumberString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsNumberString[key];
    }
  });
});

var _IsBase2 = require("./string/IsBase32");

Object.keys(_IsBase2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsBase2[key];
    }
  });
});

var _IsBIC = require("./string/IsBIC");

Object.keys(_IsBIC).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsBIC[key];
    }
  });
});

var _IsBtcAddress = require("./string/IsBtcAddress");

Object.keys(_IsBtcAddress).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsBtcAddress[key];
    }
  });
});

var _IsDataURI = require("./string/IsDataURI");

Object.keys(_IsDataURI).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsDataURI[key];
    }
  });
});

var _IsEAN = require("./string/IsEAN");

Object.keys(_IsEAN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsEAN[key];
    }
  });
});

var _IsEthereumAddress = require("./string/IsEthereumAddress");

Object.keys(_IsEthereumAddress).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsEthereumAddress[key];
    }
  });
});

var _IsHSL = require("./string/IsHSL");

Object.keys(_IsHSL).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsHSL[key];
    }
  });
});

var _IsIBAN = require("./string/IsIBAN");

Object.keys(_IsIBAN).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsIBAN[key];
    }
  });
});

var _IsIdentityCard = require("./string/IsIdentityCard");

Object.keys(_IsIdentityCard).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsIdentityCard[key];
    }
  });
});

var _IsISRC = require("./string/IsISRC");

Object.keys(_IsISRC).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsISRC[key];
    }
  });
});

var _IsLocale = require("./string/IsLocale");

Object.keys(_IsLocale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsLocale[key];
    }
  });
});

var _IsMagnetURI = require("./string/IsMagnetURI");

Object.keys(_IsMagnetURI).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMagnetURI[key];
    }
  });
});

var _IsMimeType = require("./string/IsMimeType");

Object.keys(_IsMimeType).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsMimeType[key];
    }
  });
});

var _IsOctal = require("./string/IsOctal");

Object.keys(_IsOctal).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsOctal[key];
    }
  });
});

var _IsPassportNumber = require("./string/IsPassportNumber");

Object.keys(_IsPassportNumber).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsPassportNumber[key];
    }
  });
});

var _IsPostalCode = require("./string/IsPostalCode");

Object.keys(_IsPostalCode).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsPostalCode[key];
    }
  });
});

var _IsRFC = require("./string/IsRFC3339");

Object.keys(_IsRFC).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsRFC[key];
    }
  });
});

var _IsRgbColor = require("./string/IsRgbColor");

Object.keys(_IsRgbColor).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsRgbColor[key];
    }
  });
});

var _IsSemVer = require("./string/IsSemVer");

Object.keys(_IsSemVer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsSemVer[key];
    }
  });
});

var _IsBoolean = require("./typechecker/IsBoolean");

Object.keys(_IsBoolean).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsBoolean[key];
    }
  });
});

var _IsDate = require("./typechecker/IsDate");

Object.keys(_IsDate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsDate[key];
    }
  });
});

var _IsNumber = require("./typechecker/IsNumber");

Object.keys(_IsNumber).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsNumber[key];
    }
  });
});

var _IsEnum = require("./typechecker/IsEnum");

Object.keys(_IsEnum).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsEnum[key];
    }
  });
});

var _IsInt = require("./typechecker/IsInt");

Object.keys(_IsInt).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsInt[key];
    }
  });
});

var _IsString = require("./typechecker/IsString");

Object.keys(_IsString).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsString[key];
    }
  });
});

var _IsArray = require("./typechecker/IsArray");

Object.keys(_IsArray).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsArray[key];
    }
  });
});

var _IsObject = require("./typechecker/IsObject");

Object.keys(_IsObject).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsObject[key];
    }
  });
});

var _ArrayContains = require("./array/ArrayContains");

Object.keys(_ArrayContains).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ArrayContains[key];
    }
  });
});

var _ArrayNotContains = require("./array/ArrayNotContains");

Object.keys(_ArrayNotContains).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ArrayNotContains[key];
    }
  });
});

var _ArrayNotEmpty = require("./array/ArrayNotEmpty");

Object.keys(_ArrayNotEmpty).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ArrayNotEmpty[key];
    }
  });
});

var _ArrayMinSize = require("./array/ArrayMinSize");

Object.keys(_ArrayMinSize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ArrayMinSize[key];
    }
  });
});

var _ArrayMaxSize = require("./array/ArrayMaxSize");

Object.keys(_ArrayMaxSize).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ArrayMaxSize[key];
    }
  });
});

var _ArrayUnique = require("./array/ArrayUnique");

Object.keys(_ArrayUnique).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ArrayUnique[key];
    }
  });
});

var _IsNotEmptyObject = require("./object/IsNotEmptyObject");

Object.keys(_IsNotEmptyObject).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsNotEmptyObject[key];
    }
  });
});

var _IsInstance = require("./object/IsInstance");

Object.keys(_IsInstance).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _IsInstance[key];
    }
  });
});
},{"./common/Allow":"node_modules/class-validator/esm5/decorator/common/Allow.js","./common/IsDefined":"node_modules/class-validator/esm5/decorator/common/IsDefined.js","./common/IsOptional":"node_modules/class-validator/esm5/decorator/common/IsOptional.js","./common/Validate":"node_modules/class-validator/esm5/decorator/common/Validate.js","./common/ValidateBy":"node_modules/class-validator/esm5/decorator/common/ValidateBy.js","./common/ValidateIf":"node_modules/class-validator/esm5/decorator/common/ValidateIf.js","./common/ValidateNested":"node_modules/class-validator/esm5/decorator/common/ValidateNested.js","./common/ValidatePromise":"node_modules/class-validator/esm5/decorator/common/ValidatePromise.js","./common/IsLatLong":"node_modules/class-validator/esm5/decorator/common/IsLatLong.js","./common/IsLatitude":"node_modules/class-validator/esm5/decorator/common/IsLatitude.js","./common/IsLongitude":"node_modules/class-validator/esm5/decorator/common/IsLongitude.js","./common/Equals":"node_modules/class-validator/esm5/decorator/common/Equals.js","./common/NotEquals":"node_modules/class-validator/esm5/decorator/common/NotEquals.js","./common/IsEmpty":"node_modules/class-validator/esm5/decorator/common/IsEmpty.js","./common/IsNotEmpty":"node_modules/class-validator/esm5/decorator/common/IsNotEmpty.js","./common/IsIn":"node_modules/class-validator/esm5/decorator/common/IsIn.js","./common/IsNotIn":"node_modules/class-validator/esm5/decorator/common/IsNotIn.js","./number/IsDivisibleBy":"node_modules/class-validator/esm5/decorator/number/IsDivisibleBy.js","./number/IsPositive":"node_modules/class-validator/esm5/decorator/number/IsPositive.js","./number/IsNegative":"node_modules/class-validator/esm5/decorator/number/IsNegative.js","./number/Max":"node_modules/class-validator/esm5/decorator/number/Max.js","./number/Min":"node_modules/class-validator/esm5/decorator/number/Min.js","./date/MinDate":"node_modules/class-validator/esm5/decorator/date/MinDate.js","./date/MaxDate":"node_modules/class-validator/esm5/decorator/date/MaxDate.js","./string/Contains":"node_modules/class-validator/esm5/decorator/string/Contains.js","./string/NotContains":"node_modules/class-validator/esm5/decorator/string/NotContains.js","./string/IsAlpha":"node_modules/class-validator/esm5/decorator/string/IsAlpha.js","./string/IsAlphanumeric":"node_modules/class-validator/esm5/decorator/string/IsAlphanumeric.js","./string/IsDecimal":"node_modules/class-validator/esm5/decorator/string/IsDecimal.js","./string/IsAscii":"node_modules/class-validator/esm5/decorator/string/IsAscii.js","./string/IsBase64":"node_modules/class-validator/esm5/decorator/string/IsBase64.js","./string/IsByteLength":"node_modules/class-validator/esm5/decorator/string/IsByteLength.js","./string/IsCreditCard":"node_modules/class-validator/esm5/decorator/string/IsCreditCard.js","./string/IsCurrency":"node_modules/class-validator/esm5/decorator/string/IsCurrency.js","./string/IsEmail":"node_modules/class-validator/esm5/decorator/string/IsEmail.js","./string/IsFQDN":"node_modules/class-validator/esm5/decorator/string/IsFQDN.js","./string/IsFullWidth":"node_modules/class-validator/esm5/decorator/string/IsFullWidth.js","./string/IsHalfWidth":"node_modules/class-validator/esm5/decorator/string/IsHalfWidth.js","./string/IsVariableWidth":"node_modules/class-validator/esm5/decorator/string/IsVariableWidth.js","./string/IsHexColor":"node_modules/class-validator/esm5/decorator/string/IsHexColor.js","./string/IsHexadecimal":"node_modules/class-validator/esm5/decorator/string/IsHexadecimal.js","./string/IsMacAddress":"node_modules/class-validator/esm5/decorator/string/IsMacAddress.js","./string/IsIP":"node_modules/class-validator/esm5/decorator/string/IsIP.js","./string/IsPort":"node_modules/class-validator/esm5/decorator/string/IsPort.js","./string/IsISBN":"node_modules/class-validator/esm5/decorator/string/IsISBN.js","./string/IsISIN":"node_modules/class-validator/esm5/decorator/string/IsISIN.js","./string/IsISO8601":"node_modules/class-validator/esm5/decorator/string/IsISO8601.js","./string/IsJSON":"node_modules/class-validator/esm5/decorator/string/IsJSON.js","./string/IsJWT":"node_modules/class-validator/esm5/decorator/string/IsJWT.js","./string/IsLowercase":"node_modules/class-validator/esm5/decorator/string/IsLowercase.js","./string/IsMobilePhone":"node_modules/class-validator/esm5/decorator/string/IsMobilePhone.js","./string/IsISO31661Alpha2":"node_modules/class-validator/esm5/decorator/string/IsISO31661Alpha2.js","./string/IsISO31661Alpha3":"node_modules/class-validator/esm5/decorator/string/IsISO31661Alpha3.js","./string/IsMongoId":"node_modules/class-validator/esm5/decorator/string/IsMongoId.js","./string/IsMultibyte":"node_modules/class-validator/esm5/decorator/string/IsMultibyte.js","./string/IsSurrogatePair":"node_modules/class-validator/esm5/decorator/string/IsSurrogatePair.js","./string/IsUrl":"node_modules/class-validator/esm5/decorator/string/IsUrl.js","./string/IsUUID":"node_modules/class-validator/esm5/decorator/string/IsUUID.js","./string/IsFirebasePushId":"node_modules/class-validator/esm5/decorator/string/IsFirebasePushId.js","./string/IsUppercase":"node_modules/class-validator/esm5/decorator/string/IsUppercase.js","./string/Length":"node_modules/class-validator/esm5/decorator/string/Length.js","./string/MaxLength":"node_modules/class-validator/esm5/decorator/string/MaxLength.js","./string/MinLength":"node_modules/class-validator/esm5/decorator/string/MinLength.js","./string/Matches":"node_modules/class-validator/esm5/decorator/string/Matches.js","./string/IsPhoneNumber":"node_modules/class-validator/esm5/decorator/string/IsPhoneNumber.js","./string/IsMilitaryTime":"node_modules/class-validator/esm5/decorator/string/IsMilitaryTime.js","./string/IsHash":"node_modules/class-validator/esm5/decorator/string/IsHash.js","./string/IsISSN":"node_modules/class-validator/esm5/decorator/string/IsISSN.js","./string/IsDateString":"node_modules/class-validator/esm5/decorator/string/IsDateString.js","./string/IsBooleanString":"node_modules/class-validator/esm5/decorator/string/IsBooleanString.js","./string/IsNumberString":"node_modules/class-validator/esm5/decorator/string/IsNumberString.js","./string/IsBase32":"node_modules/class-validator/esm5/decorator/string/IsBase32.js","./string/IsBIC":"node_modules/class-validator/esm5/decorator/string/IsBIC.js","./string/IsBtcAddress":"node_modules/class-validator/esm5/decorator/string/IsBtcAddress.js","./string/IsDataURI":"node_modules/class-validator/esm5/decorator/string/IsDataURI.js","./string/IsEAN":"node_modules/class-validator/esm5/decorator/string/IsEAN.js","./string/IsEthereumAddress":"node_modules/class-validator/esm5/decorator/string/IsEthereumAddress.js","./string/IsHSL":"node_modules/class-validator/esm5/decorator/string/IsHSL.js","./string/IsIBAN":"node_modules/class-validator/esm5/decorator/string/IsIBAN.js","./string/IsIdentityCard":"node_modules/class-validator/esm5/decorator/string/IsIdentityCard.js","./string/IsISRC":"node_modules/class-validator/esm5/decorator/string/IsISRC.js","./string/IsLocale":"node_modules/class-validator/esm5/decorator/string/IsLocale.js","./string/IsMagnetURI":"node_modules/class-validator/esm5/decorator/string/IsMagnetURI.js","./string/IsMimeType":"node_modules/class-validator/esm5/decorator/string/IsMimeType.js","./string/IsOctal":"node_modules/class-validator/esm5/decorator/string/IsOctal.js","./string/IsPassportNumber":"node_modules/class-validator/esm5/decorator/string/IsPassportNumber.js","./string/IsPostalCode":"node_modules/class-validator/esm5/decorator/string/IsPostalCode.js","./string/IsRFC3339":"node_modules/class-validator/esm5/decorator/string/IsRFC3339.js","./string/IsRgbColor":"node_modules/class-validator/esm5/decorator/string/IsRgbColor.js","./string/IsSemVer":"node_modules/class-validator/esm5/decorator/string/IsSemVer.js","./typechecker/IsBoolean":"node_modules/class-validator/esm5/decorator/typechecker/IsBoolean.js","./typechecker/IsDate":"node_modules/class-validator/esm5/decorator/typechecker/IsDate.js","./typechecker/IsNumber":"node_modules/class-validator/esm5/decorator/typechecker/IsNumber.js","./typechecker/IsEnum":"node_modules/class-validator/esm5/decorator/typechecker/IsEnum.js","./typechecker/IsInt":"node_modules/class-validator/esm5/decorator/typechecker/IsInt.js","./typechecker/IsString":"node_modules/class-validator/esm5/decorator/typechecker/IsString.js","./typechecker/IsArray":"node_modules/class-validator/esm5/decorator/typechecker/IsArray.js","./typechecker/IsObject":"node_modules/class-validator/esm5/decorator/typechecker/IsObject.js","./array/ArrayContains":"node_modules/class-validator/esm5/decorator/array/ArrayContains.js","./array/ArrayNotContains":"node_modules/class-validator/esm5/decorator/array/ArrayNotContains.js","./array/ArrayNotEmpty":"node_modules/class-validator/esm5/decorator/array/ArrayNotEmpty.js","./array/ArrayMinSize":"node_modules/class-validator/esm5/decorator/array/ArrayMinSize.js","./array/ArrayMaxSize":"node_modules/class-validator/esm5/decorator/array/ArrayMaxSize.js","./array/ArrayUnique":"node_modules/class-validator/esm5/decorator/array/ArrayUnique.js","./object/IsNotEmptyObject":"node_modules/class-validator/esm5/decorator/object/IsNotEmptyObject.js","./object/IsInstance":"node_modules/class-validator/esm5/decorator/object/IsInstance.js"}],"node_modules/class-validator/esm5/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  validate: true,
  validateOrReject: true,
  validateSync: true,
  registerSchema: true
};
exports.validate = validate;
exports.validateOrReject = validateOrReject;
exports.validateSync = validateSync;
exports.registerSchema = registerSchema;

var _MetadataStorage = require("./metadata/MetadataStorage");

Object.keys(_MetadataStorage).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _MetadataStorage[key];
    }
  });
});

var _Validator = require("./validation/Validator");

Object.keys(_Validator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _Validator[key];
    }
  });
});

var _container = require("./container");

Object.keys(_container).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _container[key];
    }
  });
});

var _decorators = require("./decorator/decorators");

Object.keys(_decorators).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _decorators[key];
    }
  });
});

var _ValidationOptions = require("./decorator/ValidationOptions");

Object.keys(_ValidationOptions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidationOptions[key];
    }
  });
});

var _ValidationError = require("./validation/ValidationError");

Object.keys(_ValidationError).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidationError[key];
    }
  });
});

var _ValidationTypes = require("./validation/ValidationTypes");

Object.keys(_ValidationTypes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _ValidationTypes[key];
    }
  });
});

var _registerDecorator = require("./register-decorator");

Object.keys(_registerDecorator).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _registerDecorator[key];
    }
  });
});

// -------------------------------------------------------------------------
// Export everything api users needs
// -------------------------------------------------------------------------

/**
 * Validates given object by object's decorators or given validation schema.
 */
function validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
  if (typeof schemaNameOrObject === "string") {
    return (0, _container.getFromContainer)(_Validator.Validator).validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);
  } else {
    return (0, _container.getFromContainer)(_Validator.Validator).validate(schemaNameOrObject, objectOrValidationOptions);
  }
}
/**
 * Validates given object by object's decorators or given validation schema and reject on error.
 */


function validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
  if (typeof schemaNameOrObject === "string") {
    return (0, _container.getFromContainer)(_Validator.Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);
  } else {
    return (0, _container.getFromContainer)(_Validator.Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions);
  }
}
/**
 * Validates given object by object's decorators or given validation schema.
 * Note that this method completely ignores async validations.
 * If you want to properly perform validation you need to call validate method instead.
 */


function validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {
  if (typeof schemaNameOrObject === "string") {
    return (0, _container.getFromContainer)(_Validator.Validator).validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);
  } else {
    return (0, _container.getFromContainer)(_Validator.Validator).validateSync(schemaNameOrObject, objectOrValidationOptions);
  }
}
/**
 * Registers a new validation schema.
 */


function registerSchema(schema) {
  (0, _MetadataStorage.getMetadataStorage)().addValidationSchema(schema);
}
},{"./metadata/MetadataStorage":"node_modules/class-validator/esm5/metadata/MetadataStorage.js","./validation/Validator":"node_modules/class-validator/esm5/validation/Validator.js","./container":"node_modules/class-validator/esm5/container.js","./decorator/decorators":"node_modules/class-validator/esm5/decorator/decorators.js","./decorator/ValidationOptions":"node_modules/class-validator/esm5/decorator/ValidationOptions.js","./validation/ValidationError":"node_modules/class-validator/esm5/validation/ValidationError.js","./validation/ValidationTypes":"node_modules/class-validator/esm5/validation/ValidationTypes.js","./register-decorator":"node_modules/class-validator/esm5/register-decorator.js"}],"node_modules/core-decorators/es/lazy-initialize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lazyInitialize;

var _utils = require("./private/utils");

var defineProperty = Object.defineProperty;

function handleDescriptor(target, key, descriptor) {
  var configurable = descriptor.configurable,
      enumerable = descriptor.enumerable,
      initializer = descriptor.initializer,
      value = descriptor.value;
  return {
    configurable: configurable,
    enumerable: enumerable,
    get: function get() {
      // This happens if someone accesses the
      // property directly on the prototype
      if (this === target) {
        return;
      }

      var ret = initializer ? initializer.call(this) : value;
      defineProperty(this, key, {
        configurable: configurable,
        enumerable: enumerable,
        writable: true,
        value: ret
      });
      return ret;
    },
    set: (0, _utils.createDefaultSetter)(key)
  };
}

function lazyInitialize() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/private/utils.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isDescriptor = isDescriptor;
exports.decorate = decorate;
exports.metaFor = metaFor;
exports.getOwnPropertyDescriptors = getOwnPropertyDescriptors;
exports.createDefaultSetter = createDefaultSetter;
exports.bind = bind;
exports.internalDeprecation = internalDeprecation;
exports.warn = exports.getOwnKeys = void 0;

var _lazyInitialize = _interopRequireDefault(require("../lazy-initialize"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var _desc, _value, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

function _initDefineProp(target, property, descriptor, context) {
  if (!descriptor) return;
  Object.defineProperty(target, property, {
    enumerable: descriptor.enumerable,
    configurable: descriptor.configurable,
    writable: descriptor.writable,
    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
  });
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

function _initializerWarningHelper(descriptor, context) {
  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
}

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return Array.from(arr);
  }
}

var defineProperty = Object.defineProperty,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor,
    getOwnPropertyNames = Object.getOwnPropertyNames,
    getOwnPropertySymbols = Object.getOwnPropertySymbols;

function isDescriptor(desc) {
  if (!desc || !desc.hasOwnProperty) {
    return false;
  }

  var keys = ['value', 'initializer', 'get', 'set'];

  for (var i = 0, l = keys.length; i < l; i++) {
    if (desc.hasOwnProperty(keys[i])) {
      return true;
    }
  }

  return false;
}

function decorate(handleDescriptor, entryArgs) {
  if (isDescriptor(entryArgs[entryArgs.length - 1])) {
    return handleDescriptor.apply(undefined, _toConsumableArray(entryArgs).concat([[]]));
  } else {
    return function () {
      return handleDescriptor.apply(undefined, _toConsumableArray(Array.prototype.slice.call(arguments)).concat([entryArgs]));
    };
  }
}

var Meta = (_class = function Meta() {
  _classCallCheck(this, Meta);

  _initDefineProp(this, 'debounceTimeoutIds', _descriptor, this);

  _initDefineProp(this, 'throttleTimeoutIds', _descriptor2, this);

  _initDefineProp(this, 'throttlePreviousTimestamps', _descriptor3, this);

  _initDefineProp(this, 'throttleTrailingArgs', _descriptor4, this);

  _initDefineProp(this, 'profileLastRan', _descriptor5, this);
}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'debounceTimeoutIds', [_lazyInitialize.default], {
  enumerable: true,
  initializer: function initializer() {
    return {};
  }
}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'throttleTimeoutIds', [_lazyInitialize.default], {
  enumerable: true,
  initializer: function initializer() {
    return {};
  }
}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, 'throttlePreviousTimestamps', [_lazyInitialize.default], {
  enumerable: true,
  initializer: function initializer() {
    return {};
  }
}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, 'throttleTrailingArgs', [_lazyInitialize.default], {
  enumerable: true,
  initializer: function initializer() {
    return null;
  }
}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, 'profileLastRan', [_lazyInitialize.default], {
  enumerable: true,
  initializer: function initializer() {
    return null;
  }
})), _class);
var META_KEY = typeof Symbol === 'function' ? Symbol('__core_decorators__') : '__core_decorators__';

function metaFor(obj) {
  if (obj.hasOwnProperty(META_KEY) === false) {
    defineProperty(obj, META_KEY, {
      // Defaults: NOT enumerable, configurable, or writable
      value: new Meta()
    });
  }

  return obj[META_KEY];
}

var getOwnKeys = getOwnPropertySymbols ? function (object) {
  return getOwnPropertyNames(object).concat(getOwnPropertySymbols(object));
} : getOwnPropertyNames;
exports.getOwnKeys = getOwnKeys;

function getOwnPropertyDescriptors(obj) {
  var descs = {};
  getOwnKeys(obj).forEach(function (key) {
    return descs[key] = getOwnPropertyDescriptor(obj, key);
  });
  return descs;
}

function createDefaultSetter(key) {
  return function set(newValue) {
    Object.defineProperty(this, key, {
      configurable: true,
      writable: true,
      // IS enumerable when reassigned by the outside word
      enumerable: true,
      value: newValue
    });
    return newValue;
  };
}

function bind(fn, context) {
  if (fn.bind) {
    return fn.bind(context);
  } else {
    return function __autobind__() {
      return fn.apply(context, arguments);
    };
  }
}

var warn = function () {
  if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) !== 'object' || !console || typeof console.warn !== 'function') {
    return function () {};
  } else {
    return bind(console.warn, console);
  }
}();

exports.warn = warn;
var seenDeprecations = {};

function internalDeprecation(msg) {
  if (seenDeprecations[msg] !== true) {
    seenDeprecations[msg] = true;
    warn('DEPRECATION: ' + msg);
  }
}
},{"../lazy-initialize":"node_modules/core-decorators/es/lazy-initialize.js"}],"node_modules/core-decorators/es/override.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = override;

var _utils = require("./private/utils");

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var GENERIC_FUNCTION_ERROR = '{child} does not properly override {parent}';
var FUNCTION_REGEXP = /^function ([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?(\([^\)]*\))[\s\S]+$/;

var SyntaxErrorReporter = function () {
  _createClass(SyntaxErrorReporter, [{
    key: '_getTopic',
    value: function _getTopic(descriptor) {
      if (descriptor === undefined) {
        return null;
      }

      if ('value' in descriptor) {
        return descriptor.value;
      }

      if ('get' in descriptor) {
        return descriptor.get;
      }

      if ('set' in descriptor) {
        return descriptor.set;
      }
    }
  }, {
    key: '_extractTopicSignature',
    value: function _extractTopicSignature(topic) {
      switch (typeof topic === 'undefined' ? 'undefined' : _typeof(topic)) {
        case 'function':
          return this._extractFunctionSignature(topic);

        default:
          return this.key;
      }
    }
  }, {
    key: '_extractFunctionSignature',
    value: function _extractFunctionSignature(fn) {
      var _this = this;

      return fn.toString().replace(FUNCTION_REGEXP, function (match) {
        var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.key;
        var params = arguments[2];
        return name + params;
      });
    }
  }, {
    key: 'key',
    get: function get() {
      return this.childDescriptor.key;
    }
  }, {
    key: 'parentNotation',
    get: function get() {
      return this.parentKlass.constructor.name + '#' + this.parentPropertySignature;
    }
  }, {
    key: 'childNotation',
    get: function get() {
      return this.childKlass.constructor.name + '#' + this.childPropertySignature;
    }
  }, {
    key: 'parentTopic',
    get: function get() {
      return this._getTopic(this.parentDescriptor);
    }
  }, {
    key: 'childTopic',
    get: function get() {
      return this._getTopic(this.childDescriptor);
    }
  }, {
    key: 'parentPropertySignature',
    get: function get() {
      return this._extractTopicSignature(this.parentTopic);
    }
  }, {
    key: 'childPropertySignature',
    get: function get() {
      return this._extractTopicSignature(this.childTopic);
    }
  }]);

  function SyntaxErrorReporter(parentKlass, childKlass, parentDescriptor, childDescriptor) {
    _classCallCheck(this, SyntaxErrorReporter);

    this.parentKlass = parentKlass;
    this.childKlass = childKlass;
    this.parentDescriptor = parentDescriptor;
    this.childDescriptor = childDescriptor;
  }

  _createClass(SyntaxErrorReporter, [{
    key: 'assert',
    value: function assert(condition) {
      var msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      if (condition !== true) {
        this.error(GENERIC_FUNCTION_ERROR + msg);
      }
    }
  }, {
    key: 'error',
    value: function error(msg) {
      var _this2 = this;

      msg = msg // Replace lazily, because they actually might not
      // be available in all cases
      .replace('{parent}', function (m) {
        return _this2.parentNotation;
      }).replace('{child}', function (m) {
        return _this2.childNotation;
      });
      throw new SyntaxError(msg);
    }
  }]);

  return SyntaxErrorReporter;
}();

function getDescriptorType(descriptor) {
  if (descriptor.hasOwnProperty('value')) {
    return 'data';
  }

  if (descriptor.hasOwnProperty('get') || descriptor.hasOwnProperty('set')) {
    return 'accessor';
  } // If none of them exist, browsers treat it as
  // a data descriptor with a value of `undefined`


  return 'data';
}

function checkFunctionSignatures(parent, child, reporter) {
  reporter.assert(parent.length === child.length);
}

function checkDataDescriptors(parent, child, reporter) {
  var parentValueType = _typeof(parent.value);

  var childValueType = _typeof(child.value);

  if (parentValueType === 'undefined' && childValueType === 'undefined') {
    // class properties can be any expression, which isn't ran until the
    // the instance is created, so we can't reliably get type information
    // for them yet (per spec). Perhaps when Babel includes flow-type info
    // in runtime? Tried regex solutions, but super hacky and only feasible
    // on primitives, which is confusing for usage...
    reporter.error('descriptor values are both undefined. (class properties are are not currently supported)\'');
  }

  if (parentValueType !== childValueType) {
    var isFunctionOverUndefined = childValueType === 'function' && parentValueType === undefined; // Even though we don't support class properties, this
    // will still handle more than just functions, just in case.
    // Shadowing an undefined value is an error if the inherited
    // value was undefined (usually a class property, not a method)

    if (isFunctionOverUndefined || parentValueType !== undefined) {
      reporter.error('value types do not match. {parent} is "' + parentValueType + '", {child} is "' + childValueType + '"');
    }
  } // Switch, in preparation for supporting more types


  switch (childValueType) {
    case 'function':
      checkFunctionSignatures(parent.value, child.value, reporter);
      break;

    default:
      reporter.error('Unexpected error. Please file a bug with: {parent} is "' + parentValueType + '", {child} is "' + childValueType + '"');
      break;
  }
}

function checkAccessorDescriptors(parent, child, reporter) {
  var parentHasGetter = typeof parent.get === 'function';
  var childHasGetter = typeof child.get === 'function';
  var parentHasSetter = typeof parent.set === 'function';
  var childHasSetter = typeof child.set === 'function';

  if (parentHasGetter || childHasGetter) {
    if (!parentHasGetter && parentHasSetter) {
      reporter.error('{parent} is setter but {child} is getter');
    }

    if (!childHasGetter && childHasSetter) {
      reporter.error('{parent} is getter but {child} is setter');
    }

    checkFunctionSignatures(parent.get, child.get, reporter);
  }

  if (parentHasSetter || childHasSetter) {
    if (!parentHasSetter && parentHasGetter) {
      reporter.error('{parent} is getter but {child} is setter');
    }

    if (!childHasSetter && childHasGetter) {
      reporter.error('{parent} is setter but {child} is getter');
    }

    checkFunctionSignatures(parent.set, child.set, reporter);
  }
}

function checkDescriptors(parent, child, reporter) {
  var parentType = getDescriptorType(parent);
  var childType = getDescriptorType(child);

  if (parentType !== childType) {
    reporter.error('descriptor types do not match. {parent} is "' + parentType + '", {child} is "' + childType + '"');
  }

  switch (childType) {
    case 'data':
      checkDataDescriptors(parent, child, reporter);
      break;

    case 'accessor':
      checkAccessorDescriptors(parent, child, reporter);
      break;
  }
}

var suggestionTransforms = [function (key) {
  return key.toLowerCase();
}, function (key) {
  return key.toUpperCase();
}, function (key) {
  return key + 's';
}, function (key) {
  return key.slice(0, -1);
}, function (key) {
  return key.slice(1, key.length);
}];

function findPossibleAlternatives(superKlass, key) {
  for (var i = 0, l = suggestionTransforms.length; i < l; i++) {
    var fn = suggestionTransforms[i];
    var suggestion = fn(key);

    if (suggestion in superKlass) {
      return suggestion;
    }
  }

  return null;
}

function handleDescriptor(target, key, descriptor) {
  descriptor.key = key;
  var superKlass = Object.getPrototypeOf(target);
  var superDescriptor = Object.getOwnPropertyDescriptor(superKlass, key);
  var reporter = new SyntaxErrorReporter(superKlass, target, superDescriptor, descriptor);

  if (superDescriptor === undefined) {
    var suggestedKey = findPossibleAlternatives(superKlass, key);
    var suggestion = suggestedKey ? '\n\n  Did you mean "' + suggestedKey + '"?' : '';
    reporter.error('No descriptor matching {child} was found on the prototype chain.' + suggestion);
  }

  checkDescriptors(superDescriptor, descriptor, reporter);
  return descriptor;
}

function override() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/deprecate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deprecate;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var DEFAULT_MSG = 'This function will be removed in future versions.';

function handleDescriptor(target, key, descriptor, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      _ref2$ = _ref2[0],
      msg = _ref2$ === undefined ? DEFAULT_MSG : _ref2$,
      _ref2$2 = _ref2[1],
      options = _ref2$2 === undefined ? {} : _ref2$2;

  if (typeof descriptor.value !== 'function') {
    throw new SyntaxError('Only functions can be marked as deprecated');
  }

  var methodSignature = target.constructor.name + '#' + key;

  if (options.url) {
    msg += '\n\n    See ' + options.url + ' for more details.\n\n';
  }

  return _extends({}, descriptor, {
    value: function deprecationWrapper() {
      (0, _utils.warn)('DEPRECATION ' + methodSignature + ': ' + msg);
      return descriptor.value.apply(this, arguments);
    }
  });
}

function deprecate() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/suppress-warnings.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = suppressWarnings;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

function suppressedWarningNoop() {// Warnings are currently suppressed via @suppressWarnings
}

function applyWithoutWarnings(context, fn, args) {
  if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object') {
    var nativeWarn = console.warn;
    console.warn = suppressedWarningNoop;
    var ret = fn.apply(context, args);
    console.warn = nativeWarn;
    return ret;
  } else {
    return fn.apply(context, args);
  }
}

function handleDescriptor(target, key, descriptor) {
  return _extends({}, descriptor, {
    value: function suppressWarningsWrapper() {
      return applyWithoutWarnings(this, descriptor.value, arguments);
    }
  });
}

function suppressWarnings() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/memoize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = memoize;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function toObject(cache, value) {
  if (value === Object(value)) {
    return value;
  }

  return cache[value] || (cache[value] = {});
}

function applyAndCache(context, fn, args, cache, signature) {
  var ret = fn.apply(context, args);
  cache[signature] = ret;
  return ret;
}

function metaForDescriptor(descriptor) {
  var fn = void 0,
      wrapKey = void 0; // This is ugly code, but way faster than other
  // ways I tried that *looked* pretty

  if (descriptor.value) {
    fn = descriptor.value;
    wrapKey = 'value';
  } else if (descriptor.get) {
    fn = descriptor.get;
    wrapKey = 'get';
  } else if (descriptor.set) {
    fn = descriptor.set;
    wrapKey = 'set';
  }

  return {
    fn: fn,
    wrapKey: wrapKey
  };
}

function handleDescriptor(target, key, descriptor) {
  var _metaForDescriptor = metaForDescriptor(descriptor),
      fn = _metaForDescriptor.fn,
      wrapKey = _metaForDescriptor.wrapKey;

  var argumentCache = new WeakMap();
  var signatureCache = Object.create(null);
  var primativeRefCache = Object.create(null);
  var argumentIdCounter = 0;
  return _extends({}, descriptor, _defineProperty({}, wrapKey, function memoizeWrapper() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var signature = '0';

    for (var i = 0, l = args.length; i < l; i++) {
      var arg = args[i];
      var argRef = toObject(primativeRefCache, arg);
      var argKey = argumentCache.get(argRef);

      if (argKey === undefined) {
        argKey = ++argumentIdCounter;
        argumentCache.set(argRef, argKey);
      }

      signature += argKey;
    }

    return signatureCache[signature] || applyAndCache(this, fn, arguments, signatureCache, signature);
  }));
}

function memoize() {
  (0, _utils.internalDeprecation)('@memoize is deprecated and will be removed shortly. Use @memoize from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators');

  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/autobind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autobind;

var _utils = require("./private/utils");

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return Array.from(arr);
  }
}

var defineProperty = Object.defineProperty,
    getPrototypeOf = Object.getPrototypeOf;
var mapStore = void 0;

function getBoundSuper(obj, fn) {
  if (typeof WeakMap === 'undefined') {
    throw new Error('Using @autobind on ' + fn.name + '() requires WeakMap support due to its use of super.' + fn.name + '()\n      See https://github.com/jayphelps/core-decorators.js/issues/20');
  }

  if (!mapStore) {
    mapStore = new WeakMap();
  }

  if (mapStore.has(obj) === false) {
    mapStore.set(obj, new WeakMap());
  }

  var superStore = mapStore.get(obj);

  if (superStore.has(fn) === false) {
    superStore.set(fn, (0, _utils.bind)(fn, obj));
  }

  return superStore.get(fn);
}

function autobindClass(klass) {
  var descs = (0, _utils.getOwnPropertyDescriptors)(klass.prototype);
  var keys = (0, _utils.getOwnKeys)(descs);

  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    var desc = descs[key];

    if (typeof desc.value !== 'function' || key === 'constructor') {
      continue;
    }

    defineProperty(klass.prototype, key, autobindMethod(klass.prototype, key, desc));
  }
}

function autobindMethod(target, key, _ref) {
  var fn = _ref.value,
      configurable = _ref.configurable,
      enumerable = _ref.enumerable;

  if (typeof fn !== 'function') {
    throw new SyntaxError('@autobind can only be used on functions, not: ' + fn);
  }

  var constructor = target.constructor;
  return {
    configurable: configurable,
    enumerable: enumerable,
    get: function get() {
      // Class.prototype.key lookup
      // Someone accesses the property directly on the prototype on which it is
      // actually defined on, i.e. Class.prototype.hasOwnProperty(key)
      if (this === target) {
        return fn;
      } // Class.prototype.key lookup
      // Someone accesses the property directly on a prototype but it was found
      // up the chain, not defined directly on it
      // i.e. Class.prototype.hasOwnProperty(key) == false && key in Class.prototype


      if (this.constructor !== constructor && getPrototypeOf(this).constructor === constructor) {
        return fn;
      } // Autobound method calling super.sameMethod() which is also autobound and so on.


      if (this.constructor !== constructor && key in this.constructor.prototype) {
        return getBoundSuper(this, fn);
      }

      var boundFn = (0, _utils.bind)(fn, this);
      defineProperty(this, key, {
        configurable: true,
        writable: true,
        // NOT enumerable when it's a bound method
        enumerable: false,
        value: boundFn
      });
      return boundFn;
    },
    set: (0, _utils.createDefaultSetter)(key)
  };
}

function handle(args) {
  if (args.length === 1) {
    return autobindClass.apply(undefined, _toConsumableArray(args));
  } else {
    return autobindMethod.apply(undefined, _toConsumableArray(args));
  }
}

function autobind() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (args.length === 0) {
    return function () {
      return handle(arguments);
    };
  } else {
    return handle(args);
  }
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/readonly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = readonly;

var _utils = require("./private/utils");

function handleDescriptor(target, key, descriptor) {
  descriptor.writable = false;
  return descriptor;
}

function readonly() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/enumerable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = enumerable;

var _utils = require("./private/utils");

function handleDescriptor(target, key, descriptor) {
  descriptor.enumerable = true;
  return descriptor;
}

function enumerable() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/nonenumerable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = nonenumerable;

var _utils = require("./private/utils");

function handleDescriptor(target, key, descriptor) {
  descriptor.enumerable = false;
  return descriptor;
}

function nonenumerable() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/nonconfigurable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = nonconfigurable;

var _utils = require("./private/utils");

function handleDescriptor(target, key, descriptor) {
  descriptor.configurable = false;
  return descriptor;
}

function nonconfigurable() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/debounce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = debounce;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var DEFAULT_TIMEOUT = 300;

function handleDescriptor(target, key, descriptor, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      _ref2$ = _ref2[0],
      wait = _ref2$ === undefined ? DEFAULT_TIMEOUT : _ref2$,
      _ref2$2 = _ref2[1],
      immediate = _ref2$2 === undefined ? false : _ref2$2;

  var callback = descriptor.value;

  if (typeof callback !== 'function') {
    throw new SyntaxError('Only functions can be debounced');
  }

  return _extends({}, descriptor, {
    value: function value() {
      var _this = this;

      var _metaFor = (0, _utils.metaFor)(this),
          debounceTimeoutIds = _metaFor.debounceTimeoutIds;

      var timeout = debounceTimeoutIds[key];
      var callNow = immediate && !timeout;
      var args = arguments;
      clearTimeout(timeout);
      debounceTimeoutIds[key] = setTimeout(function () {
        delete debounceTimeoutIds[key];

        if (!immediate) {
          callback.apply(_this, args);
        }
      }, wait);

      if (callNow) {
        callback.apply(this, args);
      }
    }
  });
}

function debounce() {
  (0, _utils.internalDeprecation)('@debounce is deprecated and will be removed shortly. Use @debounce from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators');

  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/throttle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = throttle;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var DEFAULT_TIMEOUT = 300;

function handleDescriptor(target, key, descriptor, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      _ref2$ = _ref2[0],
      wait = _ref2$ === undefined ? DEFAULT_TIMEOUT : _ref2$,
      _ref2$2 = _ref2[1],
      options = _ref2$2 === undefined ? {} : _ref2$2;

  var callback = descriptor.value;

  if (typeof callback !== 'function') {
    throw new SyntaxError('Only functions can be throttled');
  }

  if (options.leading !== false) {
    options.leading = true;
  }

  if (options.trailing !== false) {
    options.trailing = true;
  }

  return _extends({}, descriptor, {
    value: function value() {
      var _this = this;

      var meta = (0, _utils.metaFor)(this);
      var throttleTimeoutIds = meta.throttleTimeoutIds,
          throttlePreviousTimestamps = meta.throttlePreviousTimestamps;
      var timeout = throttleTimeoutIds[key]; // last execute timestamp

      var previous = throttlePreviousTimestamps[key] || 0;
      var now = Date.now();

      if (options.trailing) {
        meta.throttleTrailingArgs = arguments;
      } // if first be called and disable the execution on the leading edge
      // set last execute timestamp to now


      if (!previous && options.leading === false) {
        previous = now;
      }

      var remaining = wait - (now - previous);

      if (remaining <= 0) {
        clearTimeout(timeout);
        delete throttleTimeoutIds[key];
        throttlePreviousTimestamps[key] = now;
        callback.apply(this, arguments);
      } else if (!timeout && options.trailing) {
        throttleTimeoutIds[key] = setTimeout(function () {
          throttlePreviousTimestamps[key] = options.leading === false ? 0 : Date.now();
          delete throttleTimeoutIds[key];
          callback.apply(_this, meta.throttleTrailingArgs); // don't leak memory!

          meta.throttleTrailingArgs = null;
        }, remaining);
      }
    }
  });
}

function throttle() {
  (0, _utils.internalDeprecation)('@throttle is deprecated and will be removed shortly. Use @throttle from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators');

  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/decorate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = decorate;

var _utils = require("./private/utils");

function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return Array.from(arr);
  }
}

function _toArray(arr) {
  return Array.isArray(arr) ? arr : Array.from(arr);
}

var defineProperty = Object.defineProperty;

function handleDescriptor(target, key, descriptor, _ref) {
  var _ref2 = _toArray(_ref),
      decorator = _ref2[0],
      args = _ref2.slice(1);

  var configurable = descriptor.configurable,
      enumerable = descriptor.enumerable,
      writable = descriptor.writable;
  var originalGet = descriptor.get;
  var originalSet = descriptor.set;
  var originalValue = descriptor.value;
  var isGetter = !!originalGet;
  return {
    configurable: configurable,
    enumerable: enumerable,
    get: function get() {
      var fn = isGetter ? originalGet.call(this) : originalValue;
      var value = decorator.call.apply(decorator, [this, fn].concat(_toConsumableArray(args)));

      if (isGetter) {
        return value;
      } else {
        var desc = {
          configurable: configurable,
          enumerable: enumerable
        };
        desc.value = value;
        desc.writable = writable;
        defineProperty(this, key, desc);
        return value;
      }
    },
    set: isGetter ? originalSet : (0, _utils.createDefaultSetter)()
  };
}

function decorate() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/mixin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mixin;

var _utils = require("./private/utils");

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var defineProperty = Object.defineProperty,
    getPrototypeOf = Object.getPrototypeOf;

function buggySymbol(symbol) {
  return Object.prototype.toString.call(symbol) === '[object Symbol]' && (typeof symbol === 'undefined' ? 'undefined' : _typeof(symbol)) === 'object';
}

function hasProperty(prop, obj) {
  // We have to traverse manually prototypes' chain for polyfilled ES6 Symbols
  // like "in" operator does.
  // I.e.: Babel 5 Symbol polyfill stores every created symbol in Object.prototype.
  // That's why we cannot use construction like "prop in obj" to check, if needed
  // prop actually exists in given object/prototypes' chain.
  if (buggySymbol(prop)) {
    do {
      if (obj === Object.prototype) {
        // Polyfill assigns undefined as value for stored symbol key.
        // We can assume in this special case if there is nothing assigned it doesn't exist.
        return typeof obj[prop] !== 'undefined';
      }

      if (obj.hasOwnProperty(prop)) {
        return true;
      }
    } while (obj = getPrototypeOf(obj));

    return false;
  } else {
    return prop in obj;
  }
}

function handleClass(target, mixins) {
  if (!mixins.length) {
    throw new SyntaxError('@mixin() class ' + target.name + ' requires at least one mixin as an argument');
  }

  for (var i = 0, l = mixins.length; i < l; i++) {
    var descs = (0, _utils.getOwnPropertyDescriptors)(mixins[i]);
    var keys = (0, _utils.getOwnKeys)(descs);

    for (var j = 0, k = keys.length; j < k; j++) {
      var key = keys[j];

      if (!hasProperty(key, target.prototype)) {
        defineProperty(target.prototype, key, descs[key]);
      }
    }
  }
}

function mixin() {
  for (var _len = arguments.length, mixins = Array(_len), _key = 0; _key < _len; _key++) {
    mixins[_key] = arguments[_key];
  }

  (0, _utils.internalDeprecation)('@mixin is deprecated and will be removed shortly. Use @mixin from lodash-decorators.\n\n  https://www.npmjs.com/package/lodash-decorators');

  if (typeof mixins[0] === 'function') {
    return handleClass(mixins[0], []);
  } else {
    return function (target) {
      return handleClass(target, mixins);
    };
  }
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/time.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = time;
exports.defaultConsole = void 0;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var labels = {}; // Exported for mocking in tests

var defaultConsole = {
  time: console.time ? console.time.bind(console) : function (label) {
    labels[label] = new Date();
  },
  timeEnd: console.timeEnd ? console.timeEnd.bind(console) : function (label) {
    var timeNow = new Date();
    var timeTaken = timeNow - labels[label];
    delete labels[label];
    console.log(label + ': ' + timeTaken + 'ms');
  }
};
exports.defaultConsole = defaultConsole;
var count = 0;

function handleDescriptor(target, key, descriptor, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      _ref2$ = _ref2[0],
      prefix = _ref2$ === undefined ? null : _ref2$,
      _ref2$2 = _ref2[1],
      console = _ref2$2 === undefined ? defaultConsole : _ref2$2;

  var fn = descriptor.value;

  if (prefix === null) {
    prefix = target.constructor.name + '.' + key;
  }

  if (typeof fn !== 'function') {
    throw new SyntaxError('@time can only be used on functions, not: ' + fn);
  }

  return _extends({}, descriptor, {
    value: function value() {
      var label = prefix + '-' + count;
      count++;
      console.time(label);

      try {
        return fn.apply(this, arguments);
      } finally {
        console.timeEnd(label);
      }
    }
  });
}

function time() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/extendDescriptor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = extendDescriptor;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var getPrototypeOf = Object.getPrototypeOf,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

function handleDescriptor(target, key, descriptor) {
  var superKlass = getPrototypeOf(target);
  var superDesc = getOwnPropertyDescriptor(superKlass, key);
  return _extends({}, superDesc, {
    value: descriptor.value,
    initializer: descriptor.initializer,
    get: descriptor.get || superDesc.get,
    set: descriptor.set || superDesc.set
  });
}

function extendDescriptor() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
}
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/profile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = profile;
exports.defaultConsole = void 0;

var _utils = require("./private/utils");

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

var oc = console; // Exported for mocking in tests

var defaultConsole = {
  profile: console.profile ? (0, _utils.bind)(console.profile, console) : function () {},
  profileEnd: console.profileEnd ? (0, _utils.bind)(console.profileEnd, console) : function () {},
  warn: _utils.warn
};
exports.defaultConsole = defaultConsole;

function handleDescriptor(target, key, descriptor, _ref) {
  var _ref2 = _slicedToArray(_ref, 3),
      _ref2$ = _ref2[0],
      prefix = _ref2$ === undefined ? null : _ref2$,
      _ref2$2 = _ref2[1],
      onceThrottleOrFunction = _ref2$2 === undefined ? false : _ref2$2,
      _ref2$3 = _ref2[2],
      console = _ref2$3 === undefined ? defaultConsole : _ref2$3;

  if (!profile.__enabled) {
    if (!profile.__warned) {
      console.warn('console.profile is not supported. All @profile decorators are disabled.');
      profile.__warned = true;
    }

    return descriptor;
  }

  var fn = descriptor.value;

  if (prefix === null) {
    prefix = target.constructor.name + '.' + key;
  }

  if (typeof fn !== 'function') {
    throw new SyntaxError('@profile can only be used on functions, not: ' + fn);
  }

  return _extends({}, descriptor, {
    value: function value() {
      var now = Date.now();
      var meta = (0, _utils.metaFor)(this);

      if (onceThrottleOrFunction === true && !meta.profileLastRan || onceThrottleOrFunction === false || typeof onceThrottleOrFunction === 'number' && now - meta.profileLastRan > onceThrottleOrFunction || typeof onceThrottleOrFunction === 'function' && onceThrottleOrFunction.apply(this, arguments)) {
        console.profile(prefix);
        meta.profileLastRan = now;
      }

      try {
        return fn.apply(this, arguments);
      } finally {
        console.profileEnd(prefix);
      }
    }
  });
}

function profile() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return (0, _utils.decorate)(handleDescriptor, args);
} // Only Chrome, Firefox, and Edge support profile.
// Exposing properties for testing.


profile.__enabled = !!console.profile;
profile.__warned = false;
},{"./private/utils":"node_modules/core-decorators/es/private/utils.js"}],"node_modules/core-decorators/es/applyDecorators.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = applyDecorators;
var defineProperty = Object.defineProperty,
    getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

function applyDecorators(Class, props) {
  var prototype = Class.prototype;

  for (var key in props) {
    var decorators = props[key];

    for (var i = 0, l = decorators.length; i < l; i++) {
      var decorator = decorators[i];
      defineProperty(prototype, key, decorator(prototype, key, getOwnPropertyDescriptor(prototype, key)));
    }
  }

  return Class;
}
},{}],"node_modules/core-decorators/es/core-decorators.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "override", {
  enumerable: true,
  get: function () {
    return _override.default;
  }
});
Object.defineProperty(exports, "deprecate", {
  enumerable: true,
  get: function () {
    return _deprecate.default;
  }
});
Object.defineProperty(exports, "deprecated", {
  enumerable: true,
  get: function () {
    return _deprecate.default;
  }
});
Object.defineProperty(exports, "suppressWarnings", {
  enumerable: true,
  get: function () {
    return _suppressWarnings.default;
  }
});
Object.defineProperty(exports, "memoize", {
  enumerable: true,
  get: function () {
    return _memoize.default;
  }
});
Object.defineProperty(exports, "autobind", {
  enumerable: true,
  get: function () {
    return _autobind.default;
  }
});
Object.defineProperty(exports, "readonly", {
  enumerable: true,
  get: function () {
    return _readonly.default;
  }
});
Object.defineProperty(exports, "enumerable", {
  enumerable: true,
  get: function () {
    return _enumerable.default;
  }
});
Object.defineProperty(exports, "nonenumerable", {
  enumerable: true,
  get: function () {
    return _nonenumerable.default;
  }
});
Object.defineProperty(exports, "nonconfigurable", {
  enumerable: true,
  get: function () {
    return _nonconfigurable.default;
  }
});
Object.defineProperty(exports, "debounce", {
  enumerable: true,
  get: function () {
    return _debounce.default;
  }
});
Object.defineProperty(exports, "throttle", {
  enumerable: true,
  get: function () {
    return _throttle.default;
  }
});
Object.defineProperty(exports, "decorate", {
  enumerable: true,
  get: function () {
    return _decorate.default;
  }
});
Object.defineProperty(exports, "mixin", {
  enumerable: true,
  get: function () {
    return _mixin.default;
  }
});
Object.defineProperty(exports, "mixins", {
  enumerable: true,
  get: function () {
    return _mixin.default;
  }
});
Object.defineProperty(exports, "lazyInitialize", {
  enumerable: true,
  get: function () {
    return _lazyInitialize.default;
  }
});
Object.defineProperty(exports, "time", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "extendDescriptor", {
  enumerable: true,
  get: function () {
    return _extendDescriptor.default;
  }
});
Object.defineProperty(exports, "profile", {
  enumerable: true,
  get: function () {
    return _profile.default;
  }
});
Object.defineProperty(exports, "applyDecorators", {
  enumerable: true,
  get: function () {
    return _applyDecorators.default;
  }
});

var _override = _interopRequireDefault(require("./override"));

var _deprecate = _interopRequireDefault(require("./deprecate"));

var _suppressWarnings = _interopRequireDefault(require("./suppress-warnings"));

var _memoize = _interopRequireDefault(require("./memoize"));

var _autobind = _interopRequireDefault(require("./autobind"));

var _readonly = _interopRequireDefault(require("./readonly"));

var _enumerable = _interopRequireDefault(require("./enumerable"));

var _nonenumerable = _interopRequireDefault(require("./nonenumerable"));

var _nonconfigurable = _interopRequireDefault(require("./nonconfigurable"));

var _debounce = _interopRequireDefault(require("./debounce"));

var _throttle = _interopRequireDefault(require("./throttle"));

var _decorate = _interopRequireDefault(require("./decorate"));

var _mixin = _interopRequireDefault(require("./mixin"));

var _lazyInitialize = _interopRequireDefault(require("./lazy-initialize"));

var _time = _interopRequireDefault(require("./time"));

var _extendDescriptor = _interopRequireDefault(require("./extendDescriptor"));

var _profile = _interopRequireDefault(require("./profile"));

var _applyDecorators = _interopRequireDefault(require("./applyDecorators"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./override":"node_modules/core-decorators/es/override.js","./deprecate":"node_modules/core-decorators/es/deprecate.js","./suppress-warnings":"node_modules/core-decorators/es/suppress-warnings.js","./memoize":"node_modules/core-decorators/es/memoize.js","./autobind":"node_modules/core-decorators/es/autobind.js","./readonly":"node_modules/core-decorators/es/readonly.js","./enumerable":"node_modules/core-decorators/es/enumerable.js","./nonenumerable":"node_modules/core-decorators/es/nonenumerable.js","./nonconfigurable":"node_modules/core-decorators/es/nonconfigurable.js","./debounce":"node_modules/core-decorators/es/debounce.js","./throttle":"node_modules/core-decorators/es/throttle.js","./decorate":"node_modules/core-decorators/es/decorate.js","./mixin":"node_modules/core-decorators/es/mixin.js","./lazy-initialize":"node_modules/core-decorators/es/lazy-initialize.js","./time":"node_modules/core-decorators/es/time.js","./extendDescriptor":"node_modules/core-decorators/es/extendDescriptor.js","./profile":"node_modules/core-decorators/es/profile.js","./applyDecorators":"node_modules/core-decorators/es/applyDecorators.js"}],"index_lib.ts":[function(require,module,exports) {
"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var lodash_decorators_1 = require("lodash-decorators");

var class_validator_1 = require("class-validator");

var core_decorators_1 = require("core-decorators");

var MyOtherApi = {
  someCoolMethod: function someCoolMethod(str) {
    // so something cool
    console.log(str);
  }
};

var Person =
/** @class */
function () {
  function Person() {}

  Person.prototype.event = function () {
    console.log(1);
  };

  Person.prototype.init = function () {
    window.addEventListener('scroll', this.event);
  };

  __decorate([lodash_decorators_1.Throttle(100)], Person.prototype, "event", null);

  Person = __decorate([lodash_decorators_1.Mixin(MyOtherApi)], Person);
  return Person;
}();

var person = new Person();
person.someCoolMethod('hi mixin');
person.init(); // -----

var Post =
/** @class */
function () {
  function Post() {}

  __decorate([class_validator_1.Length(10, 20, {
    message: 'name的长度不能小于10不能大于20'
  })], Post.prototype, "title", void 0);

  __decorate([class_validator_1.Min(0), class_validator_1.Max(10)], Post.prototype, "rating", void 0);

  return Post;
}();

var post = new Post();
console.log(1, post.title);
post.title = "Hello"; // should not pass

console.log(2, post.title);
post.rating = 11; // should not pass

console.log(post.rating);
class_validator_1.validate(post).then(function (errors) {
  if (errors.length > 0) {
    console.log("validation failed. errors: ", errors);
  } else {
    console.log("validation succeed");
  }
});
class_validator_1.validateOrReject(post).catch(function (errors) {
  console.log("Promise rejected (validation failed). Errors: ", errors);
}); // or

function validateOrRejectExample(input) {
  return __awaiter(this, void 0, void 0, function () {
    var errors_1;
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          _a.trys.push([0, 2,, 3]);

          return [4
          /*yield*/
          , class_validator_1.validateOrReject(input)];

        case 1:
          _a.sent();

          return [3
          /*break*/
          , 3];

        case 2:
          errors_1 = _a.sent();
          console.log("Caught promise rejection (validation failed). Errors: ", errors_1);
          return [3
          /*break*/
          , 3];

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
}

validateOrRejectExample(post); // core-decorators

var Person =
/** @class */
function () {
  function Person() {}

  Person.prototype.getPerson = function () {
    return this;
  };

  __decorate([core_decorators_1.autobind], Person.prototype, "getPerson", null);

  return Person;
}();

var person = new Person();
var getPerson = person.getPerson;
console.log(getPerson() === person);
console.log(getPerson());

var Person1 =
/** @class */
function () {
  function Person1() {}

  Person1.prototype.getPerson1 = function () {
    return this;
  };

  Person1.prototype.getPersonAgain1 = function () {
    return this;
  };

  Person1 = __decorate([core_decorators_1.autobind], Person1);
  return Person1;
}();

var person1 = new Person1();
var getPerson1 = person1.getPerson1,
    getPersonAgain1 = person1.getPersonAgain1;
console.log(getPerson1() === person1);
console.log(getPersonAgain1() === person1);
console.log(getPerson1());
console.log(getPersonAgain1()); // readonly

var Meal =
/** @class */
function () {
  function Meal() {
    this.entree = 'steak';
  }

  __decorate([core_decorators_1.readonly], Meal.prototype, "entree", void 0);

  return Meal;
}();

var dinner = new Meal();
dinner.entree = 'hi';
},{"lodash-decorators":"node_modules/lodash-decorators/index.js","class-validator":"node_modules/class-validator/esm5/index.js","core-decorators":"node_modules/core-decorators/es/core-decorators.js"}],"../../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "61167" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index_lib.ts"], null)
//# sourceMappingURL=/index_lib.b61385c1.js.map